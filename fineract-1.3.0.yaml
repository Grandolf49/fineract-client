openapi: 3.0.3
info:
  title: Apache Fineract
  description: "Apache Fineract is a secure, multi-tenanted microfinance platform\n\
    \nThe goal of the Apache Fineract API is to empower developers to build apps on\
    \ top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev)\
    \ (username: mifos, password: password) works on the same demo tenant as the interactive\
    \ links in this documentation\n\n- The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer)\n\
    - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top)\n\
    - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact)\n\
    - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts)\n\
    - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers)\n\
    - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview)\n\
    - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)\n\
    \nPlease refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm)\
    \ for any documentation queries"
  contact:
    email: dev@fineract.apache.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.3.0-758-g406610d-dirty
servers:
- url: https://demo.fineract.dev/fineract-provider/api/v1
security:
- basicAuth: []
  tenantid: []
tags:
- name: Periodic Accrual Accounting
  description: |
    Periodic Accrual is to accrue the loan income till the specific date or till batch job scheduled time.
- name: Accounting Closure
  description: "An accounting closure indicates that no more journal entries may be\
    \ logged (or reversed) in the system, either manually or via the portfolio with\
    \ an entry date prior to the defined closure date\n\nField Descriptions\nclosingDate\n\
    The date for which the accounting closure is defined\nofficeId\nThe identifer\
    \ of the branch for which accounting has been closed\ncomments\nDescription associated\
    \ with an Accounting closure"
- name: Mapping Financial Activities to Accounts
  description: |-
    Organization Level Financial Activities like Asset and Liability Transfer can be mapped to GL Account. Integrated accounting takes these accounts into consideration when an Account transfer is made between a savings to loan/savings account and vice-versa

    Field Descriptions
    financialActivityId
    The identifier of the Financial Activity
    glAccountId
    The identifier of a GL Account ( Ledger Account) which shall be used as the default account for the selected Financial Activity
- name: General Ledger Account
  description: "Ledger accounts represent an Individual account within an Organizations\
    \ Chart Of Accounts(COA) and are assigned a name and unique number by which they\
    \ can be identified. \nAll transactions relating to a company's assets, liabilities,\
    \ owners' equity, revenue and expenses are recorded against these accounts"
- name: Journal Entries
  description: "A journal entry refers to the logging of transactions against general\
    \ ledger accounts. A journal entry may consist of several line items, each of\
    \ which is either a \"debit\" or a \"credit\". The total amount of the debits\
    \ must equal the total amount of the credits or the journal entry is said to be\
    \ \"unbalanced\" \n\nA journal entry directly changes the account balances on\
    \ the general ledger"
- name: Provisioning Entries
  description: |
    This defines the Provisioning Entries for all active loan products

    Field Descriptions
    date
    Date on which day provisioning entries should be created
    createjournalentries
    Boolean variable whether to add journal entries for generated provisioning entries
- name: Accounting Rules
  description: "It is typical scenario in MFI's that non accountants pass journal\
    \ entries on a regular basis. For Ex: A branch office might deposit their entire\
    \ cash at hand to their Bank account at the end of a working day. The branch office\
    \ users might not understand enough of accounting to figure out which account\
    \ needs to get credited and which account needs to be debited to represent this\
    \ transaction.\n\nEnter accounting rules, an abstraction on top of manual Journal\
    \ entires for enabling simpler data entry. An accounting rule can define any of\
    \ the following abstractions\n\nA Simple journal entry where both the credit and\
    \ debit account have been preselected\nA Simple journal entry where either credit\
    \ or debit accounts have been limited to a pre-selected list of accounts (Ex:\
    \ Debit account should be one of \"Bank of America\" of \"JP Morgan\" and credit\
    \ account should be \"Cash\")\nA Compound journal entry where multiple debits\
    \ and / or multiple credits may be made amongst a set of preselected list of accounts\
    \ (Ex: Credit account should be either \"Bank Of America\" or \"Cash\" and debit\
    \ account can be \"Employee Salary\" and/or \"Miscellenous Expenses\")\nAn accounting\
    \ rule can also be optionally associated with a branch, so that only a particular\
    \ Branch's users have access to the rule"
- name: Batch API
  description: "The Apache Fineract Batch API enables a consumer to access significant\
    \ amounts of data in a single call or to make changes to several objects at once.\
    \ Batching allows a consumer to pass instructions for several operations in a\
    \ single HTTP request. A consumer can also specify dependencies between related\
    \ operations. Once all operations have been completed, a consolidated response\
    \ will be passed back and the HTTP connection will be closed.\n\nThe Batch API\
    \ takes in an array of logical HTTP requests represented as JSON arrays - each\
    \ request has a requestId (the id of a request used to specify the sequence and\
    \ as a dependency between requests), a method (corresponding to HTTP method GET/PUT/POST/DELETE\
    \ etc.), a relativeUrl (the portion of the URL after https://example.org/api/v2/),\
    \ optional headers array (corresponding to HTTP headers), optional reference parameter\
    \ if a request is dependent on another request and an optional body (for POST\
    \ and PUT requests). The Batch API returns an array of logical HTTP responses\
    \ represented as JSON arrays - each response has a requestId, a status code, an\
    \ optional headers array and an optional body (which is a JSON encoded string).\n\
    \nBatch API uses Json Path to handle dependent parameters. For example, if request\
    \ '2' is referencing request '1' and in the \"body\" or in \"relativeUrl\" of\
    \ request '2', there is a dependent parameter (which will look like \"$.parameter_name\"\
    ), then Batch API will internally substitute this dependent parameter from the\
    \ response body of request '1'.\n\nBatch API is able to handle deeply nested dependent\
    \ requests as well nested parameters. As shown in the example, requests are dependent\
    \ on each other as, 1<--2<--6, i.e a nested dependency, where request '6' is not\
    \ directly dependent on request '1' but still it is one of the nested child of\
    \ request '1'. In the same way Batch API could handle a deeply nested dependent\
    \ value, such as {..[..{..,$.parameter_name,..}..]}."
- name: Audits
  description: "Every non-read Mifos API request is audited. A fully processed request\
    \ can not be changed or deleted. See maker checker api for situations where an\
    \ audit is not fully processed.\n\nPermissions: To search and look at audit entries\
    \ a user needs to be attached to a role that has one of the ALL_FUNCTIONS, ALL_FUNCTIONS_READ\
    \ or READ_AUDIT permissions.\n\nData Scope: A user can only see audits that are\
    \ within their data scope. However, 'head office' users can see all audits including\
    \ those that aren't office/branch related e.g. Loan Product changes.\")"
- name: Account number format
  description: "Account number preferences are used to describe custom formats for\
    \ account numbers associated with Customer, Loan and Savings accounts."
- name: Cache
  description: "The following settings are possible for cache:\n\nNo Caching: caching\
    \ turned off\nSingle node: caching on for single instance deployments of platorm\
    \ (works for multiple tenants but only one tomcat)\nBy default caching is set\
    \ to No Caching. Switching between caches results in the cache been clear e.g.\
    \ from Single node to No cache and back again would clear down the single node\
    \ cache."
- name: Code Values
  description: "Code and code values: Codes represent a specific category of data,\
    \ their code values are a specific instance of that category.\n\nCodes are mostly\
    \ system defined which means the code itself comes out of the box and cannot be\
    \ modified however its code values can be. e.g. 'Customer Identifier', it defaults\
    \ to a code value of 'Passport' but could be 'Drivers License, National Id' etc"
- name: Codes
  description: "Code and code values: Codes represent a specific category of data,\
    \ their code values are a specific instance of that category.\n\nCodes are mostly\
    \ system defined which means the code itself comes out of the box and cannot be\
    \ modified however its code values can be. e.g. 'Customer Identifier', it defaults\
    \ to a code value of 'Passport' but could be 'Drivers License, National Id' etc"
- name: External Services
  description: |-
    External Services Configuration related to set of supported configurations for third party services like Amazon S3 and SMTP:

    S3 (Amazon S3):
    s3_access_key -
    s3_bucket_name -
    s3_secret_key -


    SMTP (Email Service):
    username -
    password -
    host -
    port -
    useTLS -
- name: Global Configuration
  description: "Global configuration related to set of supported enable/disable configurations:\n\
    \nmaker-checker - defaults to false - if true turns on maker-checker functionality\n\
    reschedule-future-repayments - defaults to false - if true reschedules repayemnts\
    \ which falls on a non-working day to configured repayment rescheduling rule\n\
    allow-transactions-on-non_workingday - defaults to false - if true allows transactions\
    \ on non-working days\nreschedule-repayments-on-holidays - defaults to false -\
    \ if true reschedules repayemnts which falls on a non-working day to defined reschedule\
    \ date\nallow-transactions-on-holiday - defaults to false - if true allows transactions\
    \ on holidays\nsavings-interest-posting-current-period-end - Set it at the database\
    \ level before any savings interest is posted. When set as false(default), interest\
    \ will be posted on the first date of next period. If set as true, interest will\
    \ be posted on last date of current period. There is no difference in the interest\
    \ amount posted.\nfinancial-year-beginning-month - Set it at the database level\
    \ before any savings interest is posted. Allowed values 1 - 12 (January - December).\
    \ Interest posting periods are evaluated based on this configuration.\nmeetings-mandatory-for-jlg-loans\
    \ - if set to true, enforces all JLG loans to follow a meeting schedule belonging\
    \ to either the parent group or Center."
- name: Data Tables
  description: "The datatables API allows you to plug-in your own tables (MySql) that\
    \ have a relationship to a Apache Fineract core table. For example, you might\
    \ want to add some extra client fields and record information about each of the\
    \ clients' family members. Via the API you can create, read, update and delete\
    \ entries for each 'plugged-in' table. The API checks for permission and for 'data\
    \ scoping' (only data within the users' office hierarchy can be managed by the\
    \ user).\n\nThe Apache Fineract Reference App uses a JQuery plug-in called stretchydatatables\
    \ (which in turn uses this datatables resource) to provide a pretty flexible CRUD\
    \ (Create, Read, Update, Delete) User Interface."
- name: Entity Data Table
  description: This defines Entity-Datatable Check.
- name: Reports
  description: "Non-core reports can be added, updated and deleted."
- name: Documents
  description: "Multiple Documents (a combination of a name, description and a file)\
    \ may be attached to different Entities like Clients, Groups, Staff, Loans, Savings\
    \ and Client Identifiers in the system\n\nNote: The currently allowed Entities\
    \ are\n\nClients: URL Pattern as clients\nStaff: URL Pattern as staff\nLoans:\
    \ URL Pattern as loans\nSavings: URL Pattern as savings\nClient Identifiers: URL\
    \ Pattern as client_identifiers\nGroups: URL Pattern as groups"
- name: Hooks
  description: 'Hooks are a mechanism to trigger custom code on the occurence of events. '
- name: MIFOSX-BATCH JOBS
  description: "Batch jobs (also known as cron jobs on Unix-based systems) are a series\
    \ of back-end jobs executed on a computer at a particular time defined in job's\
    \ cron expression.\n\n At any point, you can view the list of batch jobs scheduled\
    \ to run along with other details specific to each job. Manually you can execute\
    \ the jobs at any point of time.\n\n The scheduler status can be either \"Active\"\
    \ or \"Standby\". If the scheduler status is Active, it indicates that all batch\
    \ jobs are running/ will run as per the specified schedule.If the scheduler status\
    \ is Standby, it will ensure all scheduled batch runs are suspended."
- name: Report Mailing Jobs
  description: "This resource allows you to create a scheduled job that runs a report\
    \ and sents it by email to specified email addresses.\n\nThe scheduled job can\
    \ be configured to run once or on a regular basis (once a day, twice a week, etc)"
- name: Authentication HTTP Basic
  description: An API capability that allows client applications to verify authentication
    details using HTTP Basic Authentication.
- name: Holidays
  description: |-
    Some MFI's span large regions where different branch offices might observe different holidays. They need the ability to define holidays for specific branch offices and be able to set the repayment rule to follow during those holidays.

    The reschedule of repayments to repaymentsRescheduledTo date during defined holidays is turned on/off by enabling/disabling reschedule-repayments-on-holidays in Global configurations.

    Allow Repayment transactions on a defined holidays is turned on/off by enabling/disabling allow-transactions-on-holiday in Global configurations.
- name: Currency
  description: Application related configuration around viewing/updating the currencies
    permitted for use within the MFI.
- name: Offices
  description: Offices are used to model an MFIs structure. A hierarchical representation
    of offices is supported. There will always be at least one office (which represents
    the MFI or an MFIs head office). All subsequent offices added must have a parent
    office.
- name: Provisioning Criteria
  description: This defines the Provisioning Criteria
- name: Staff
  description: Allows you to model staff members. At present the key role of significance
    is whether this staff member is a loan officer or not.
- name: Teller Cash Management
  description: Teller cash management which will allow an organization to manage their
    cash transactions at branches or head office more effectively.
- name: Working days
  description: |-
    The days of the week that are workdays.

    Rescheduling of repayments when it falls on a non-working is turned on /off by enable/disable reschedule-future-repayments parameter in Global configurations

    Allow transactions on non-working days is configurable by enabling/disbaling the allow-transactions-on-non_workingday parameter in Global configurations.
- name: Account Transfers
  description: "Ability to be able to transfer monetary funds from one account to\
    \ another.\n\nNote: At present only savings account to savings account transfers\
    \ are supported."
- name: Standing Instructions
  description: "Standing instructions (or standing orders) refer to instructions a\
    \ bank account holder (\"the payer\") gives to his or her bank to pay a set amount\
    \ at regular intervals to another's (\"the payee's\") account.\n\nNote: At present\
    \ only savings account to savings account and savings account to Loan account\
    \ transfers are permitted."
- name: Standing Instructions History
  description: The list capability of history can support pagination and sorting.
- name: Share Account
  description: Share accounts are instances of a praticular share product created
    for an individual. An application process around the creation of accounts is also
    supported.
- name: Entity Field Configuration
  description: "Entity Field configuration API is a generic and extensible \nwherein\
    \ various entities and subentities can be related.\nAlso it gives the user an\
    \ ability to enable/disable fields,\nadd regular expression for validation"
- name: Charges
  description: |-
    Its typical for MFIs to add extra costs for their financial products. These are typically Fees or Penalties.

    A Charge on fineract platform is what we use to model both Fees and Penalties.

    At present we support defining charges for use with Client accounts and both loan and saving products.
- name: Clients Address
  description: "Address module is an optional module and can be configured into the\
    \ system by using GlobalConfiguration setting: enable-address. In order to activate\
    \ Address module, we need to enable the configuration, enable-address by setting\
    \ its value to true."
- name: Client Charges
  description: "It is typical for MFI's to directly associate charges with an implicit\
    \ Client account. These can be either fees or penalties\n\nClient Charges are\
    \ client specific instances of Charges. Refer Charges for documentation of the\
    \ various properties of a charge, Only additional properties ( specific to the\
    \ context of a Charge being associated with a Client account) are described here"
- name: Client Identifier
  description: "Client Identifiers refer to documents that are used to uniquely identify\
    \ a customer\nEx: Drivers License, Passport, Ration card etc "
- name: Client Transaction
  description: "Client Transactions refer to transactions made directly againt a Client's\
    \ internal account. Currently, these transactions are only created as a result\
    \ of charge payments/waivers. You are allowed to undo a transaction, however you\
    \ cannot explicitly create one. "
- name: Client
  description: |-
    Clients are people and businesses that have applied (or may apply) to an MFI for loans.

    Clients can be created in Pending or straight into Active state.
- name: Loan Collateral
  description: "In lending agreements, collateral is a borrower's pledge of specific\
    \ property to a lender, to secure repayment of a loan. The collateral serves as\
    \ protection for a lender against a borrower's default - that is, any borrower\
    \ failing to pay the principal and interest under the terms of a loan obligation.\
    \ If a borrower does default on a loan (due to insolvency or other event), that\
    \ borrower forfeits (gives up) the property pledged as collateral - and the lender\
    \ then becomes the owner of the collateral"
- name: Floating Rates
  description: "It lets you create, list, retrieve and upload the floating rates"
- name: Centers
  description: Centers along with Groups are used to provided a distinctive banking
    distribution channel used in microfinance. Its common in areas such as Southern
    Asia to use Centers and Group as administrative units in grameen style lending.
    Typically groups will contain one to five people and centers themselves will be
    made of anywhere between 2-10 groups.
- name: Groups
  description: "Groups are used to provide a distinctive banking distribution channel\
    \ used in microfinances throughout the world. The Group is an administrative unit.\
    \ It can contain as few as 5 people or as many as 40 depending on how its used.\n\
    \nDifferent styles of group lending - Joint-Liability Group, Grameen Model (Center-Group),\
    \ Self-Help Groups, Village/Communal Banks)"
- name: Interest Rate Slab (A.K.A interest bands)
  description: The slabs a.k.a interest bands are associated with Interest Rate Chart.
    These bands allow to define different interest rates for different deposit term
    periods.
- name: Interest Rate Chart
  description: This defines an interest rate scheme that can be associated to a term
    deposit product. This will have a slab (band or range) of deposit periods and
    the associated interest rates applicable along with incentives for each band.
- name: Loan Charges
  description: "Its typical for MFIs to add extra costs for their loan products. They\
    \ can be either Fees or Penalties.\n\nLoan Charges are instances of Charges and\
    \ represent either fees and penalties for loan products. Refer Charges for documentation\
    \ of the various properties of a charge, Only additional properties ( specific\
    \ to the context of a Charge being associated with a Loan) are described here"
- name: Loan Rescheduling
  description: "Loan Term Variations provides the ability to change due dates, amounts\
    \ and number of instalments before loan approval."
- name: Loan Transactions
  description: "Capabilities include loan repayment's, interest waivers and the ability\
    \ to 'adjust' an existing transaction. An 'adjustment' of a transaction is really\
    \ a 'reversal' of existing transaction followed by creation of a new transaction\
    \ with the provided details."
- name: Loans
  description: "The API concept of loans models the loan application process and the\
    \ loan contract/monitoring process.\n\nField Descriptions\naccountNo\nThe account\
    \ no. associated with this loan. Is auto generated if not provided at loan application\
    \ creation time.\nexternalId\nA place to put an external reference for this loan\
    \ e.g. The ID another system uses.\nIf provided, it must be unique.\nfundId\n\
    Optional: For associating a loan with a given fund.\nloanOfficerId\nOptional:\
    \ For associating a loan with a given staff member who is a loan officer.\nloanPurposeId\n\
    Optional: For marking a loan with a given loan purpose option. Loan purposes are\
    \ configurable and can be setup by system admin through code/code values screens.\n\
    principal\nThe loan amount to be disbursed to through loan.\nloanTermFrequency\n\
    The length of loan term\nUsed like: loanTermFrequency loanTermFrequencyType\n\
    e.g. 12 Months\nloanTermFrequencyType\nThe loan term period to use. Used like:\
    \ loanTermFrequency loanTermFrequencyType\ne.g. 12 Months Example Values: 0=Days,\
    \ 1=Weeks, 2=Months, 3=Years\nnumberOfRepayments\nNumber of installments to repay.\n\
    Used like: numberOfRepayments Every repaymentEvery repaymentFrequencyType\ne.g.\
    \ 10 (repayments) Every 12 Weeks\nrepaymentEvery\nUsed like: numberOfRepayments\
    \ Every repaymentEvery repaymentFrequencyType\ne.g. 10 (repayments) Every 12 Weeks\n\
    repaymentFrequencyType\nUsed like: numberOfRepayments Every repaymentEvery repaymentFrequencyType\n\
    e.g. 10 (repayments) Every 12 Weeks \nExample Values: 0=Days, 1=Weeks, 2=Months\n\
    interestRatePerPeriod\nInterest Rate.\nUsed like: interestRatePerPeriod % interestRateFrequencyType\
    \ - interestType\ne.g. 12.0000% Per year - Declining Balance\ninterestRateFrequencyType\n\
    Used like: interestRatePerPeriod% interestRateFrequencyType - interestType\ne.g.\
    \ 12.0000% Per year - Declining Balance \nExample Values: 2=Per month, 3=Per year\n\
    graceOnPrincipalPayment\nOptional: Integer - represents the number of repayment\
    \ periods that grace should apply to the principal component of a repayment period.\n\
    graceOnInterestPayment\nOptional: Integer - represents the number of repayment\
    \ periods that grace should apply to the interest component of a repayment period.\
    \ Interest is still calculated but offset to later repayment periods.\ngraceOnInterestCharged\n\
    Optional: Integer - represents the number of repayment periods that should be\
    \ interest-free.\ngraceOnArrearsAgeing\nOptional: Integer - Used in Arrears calculation\
    \ to only take into account loans that are more than graceOnArrearsAgeing days\
    \ overdue.\ninterestChargedFromDate\nOptional: Date - The date from with interest\
    \ is to start being charged.\nexpectedDisbursementDate\nThe proposed disbursement\
    \ date of the loan so a proposed repayment schedule can be provided.\nsubmittedOnDate\n\
    The date the loan application was submitted by applicant.\nlinkAccountId\nThe\
    \ Savings Account id for linking with loan account for payments.\namortizationType\n\
    Example Values: 0=Equal principle payments, 1=Equal installments\ninterestType\n\
    Used like: interestRatePerPeriod% interestRateFrequencyType - interestType\ne.g.\
    \ 12.0000% Per year - Declining Balance \nExample Values: 0=Declining Balance,\
    \ 1=Flat\ninterestCalculationPeriodType\nExample Values: 0=Daily, 1=Same as repayment\
    \ period\nallowPartialPeriodInterestCalcualtion\nThis value will be supported\
    \ along with interestCalculationPeriodType as Same as repayment period to calculate\
    \ interest for partial periods. Example: Interest charged from is 5th of April\
    \ , Principal is 10000 and interest is 1% per month then the interest will be\
    \ (10000 * 1%)* (25/30) , it calculates for the month first then calculates exact\
    \ periods between start date and end date(can be a decimal)\ninArrearsTolerance\n\
    The amount that can be 'waived' at end of all loan payments because it is too\
    \ small to worry about.\nThis is also the tolerance amount assessed when determining\
    \ if a loan is in arrears.\ntransactionProcessingStrategyId\nAn enumeration that\
    \ indicates the type of transaction processing strategy to be used. This relates\
    \ to functionality that is also known as Payment Application Logic.\nA number\
    \ of out of the box approaches exist, some are custom to specific MFIs, some are\
    \ more general and indicate the order in which payments are processed.\n\nRefer\
    \ to the Payment Application Logic / Transaction Processing Strategy section in\
    \ the appendix for more detailed overview of each available payment application\
    \ logic provided out of the box.\n\nList of current approaches:\n1 = Mifos style\
    \ (Similar to Old Mifos)\n2 = Heavensfamily (Custom MFI approach)\n3 = Creocore\
    \ (Custom MFI approach)\n4 = RBI (India)\n5 = Principal Interest Penalties Fees\
    \ Order\n6 = Interest Principal Penalties Fees Order\n7 = Early Payment Strategy\n\
    loanType\nTo represent different type of loans.\nAt present there are three type\
    \ of loans are supported. \nAvailable loan types:\nindividual: Loan given to individual\
    \ member\ngroup: Loan given to group as a whole\njlg: Joint liability group loan\
    \ given to members in a group on individual basis. JLG loan can be given to one\
    \ or more members in a group.\nrecalculationRestFrequencyDate\nSpecifies rest\
    \ frequency start date for interest recalculation. This date must be before or\
    \ equal to disbursement date\nrecalculationCompoundingFrequencyDate\nSpecifies\
    \ compounding frequency start date for interest recalculation. This date must\
    \ be equal to disbursement date"
- name: Loan Products
  description: A Loan product is a template that is used when creating a loan. Much
    of the template definition can be overridden during loan creation.
- name: Notes
  description: Notes API allows to enter notes for supported resources.
- name: Payment Type
  description: This defines the payment type
- name: Fixed Deposit Account
  description: Fixed Deposit accounts are instances of a praticular fixed deposit
    product created. An application process around the creation of accounts is also
    supported.
- name: Fixed Deposit Product
  description: "This is one of the advanced term deposit product offered by MFI's.\
    \ The Fixed Deposit Products (aka FD) product offerings are modeled using this\
    \ API.\n\nThe FD products are deposit accounts which are held for a fixed term\
    \ – like 1 year, 2 years etc.\n\nWhen creating fixed deposit accounts, the details\
    \ from the fixed deposit product are used to auto fill details of the fixed deposit\
    \ account application process."
- name: Recurring Deposit Account Transactions
  description: Transactions possible on a recurring deposit account.
- name: Recurring Deposit Account
  description: Recurring Deposit accounts are instances of a praticular recurring
    deposit product created. An application process around the creation of accounts
    is also supported.
- name: Recurring Deposit Product
  description: "Recurring Deposits are a special kind of Term Deposits offered by\
    \ MFI's. The Recurring Deposit Products (aka RD) product offerings are modeled\
    \ using this API.\n\nRecurring Deposits help people with regular incomes to deposit\
    \ a fixed amount every month (specified recurring frequency) into their Recurring\
    \ Deposit account.\n\nWhen creating recurring deposit accounts, the details from\
    \ the recurring deposit product are used to auto fill details of the recurring\
    \ deposit account application process."
- name: Savings Charges
  description: "Its typical for MFIs to add maintenance and operating charges. They\
    \ can be either Fees or Penalties.\n\nSavings Charges are instances of Charges\
    \ and represent either fees and penalties for savings products. Refer Charges\
    \ for documentation of the various properties of a charge, Only additional properties\
    \ ( specific to the context of a Charge being associated with a Savings account)\
    \ are described here"
- name: Savings Account
  description: Savings accounts are instances of a particular savings product created
    for an individual or group. An application process around the creation of accounts
    is also supported.
- name: Savings Product
  description: "An MFIs savings product offerings are modeled using this API.\nWhen\
    \ creating savings accounts, the details from the savings product are used to\
    \ auto fill details of the savings account application process."
- name: Search API
  description: "Search API allows to search scoped resources clients, loans and groups\
    \ on specified fields."
- name: Self Loan Products
  description: "A Loan product is a template that is used when creating a loan. Much\
    \ of the template definition can be overridden during loan creation.\n\nField\
    \ Descriptions\nname\nName associated with loan product on system.\nshortName\n\
    Short name associated with a loan product. \nAn abbreviated version of the name,\
    \ used in reports or menus where space is limited, such as Collection Sheets.\n\
    description\nFor providing helpful description of product offering.\nfundId\n\
    For associating a loan product with a given fund by default.\nincludeInBorrowerCycle\n\
    It is a flag, Used to denote whether the loans should include in loan cycle counter\
    \ or not.\nuseBorrowerCycle\nIt is a flag, Used to denote whether the loans should\
    \ depend on \nborrower loan cycle counter or not.\ncurrencyCode\nA three letter\
    \ ISO code of currency.\ndigitsAfterDecimal\nOverride the currency default value\
    \ for digitsAfterDecimal.\ninMultiplesOf\nOverride the default value for rounding\
    \ currency to multiples of value provided.\ninstallmentAmountInMultiplesOf\nOverride\
    \ the default value for rounding instalment amount to multiples of value provided.\n\
    principal\nThe loan amount to be disbursed to through loan.\nnumberOfRepayments\n\
    Number of installments to repay.\nUsed like: numberOfRepayments Every repaymentEvery\
    \ repaymentFrequencyType\ne.g. 10 (repayments) Every 12 Weeks\nrepaymentEvery\n\
    Used like: numberOfRepayments Every repaymentEvery repaymentFrequencyType\ne.g.\
    \ 10 (repayments) Every 12 Weeks\nrepaymentFrequencyType\nUsed like: numberOfRepayments\
    \ Every repaymentEvery repaymentFrequencyType\ne.g. 10 (repayments) Every 12 Weeks\
    \ \nExample Values: 0=Days, 1=Weeks, 2=Months\ninterestRatePerPeriod\nInterest\
    \ Rate.\nUsed like: interestRatePerPeriod % interestRateFrequencyType - interestType\n\
    e.g. 12.0000% Per year - Declining Balance\ninterestRateFrequencyType\nUsed like:\
    \ interestRatePerPeriod% interestRateFrequencyType - interestType\ne.g. 12.0000%\
    \ Per year - Declining Balance \nExample Values: 2=Per month, 3=Per year\namortizationType\n\
    Example Values: 0=Equal principle payments, 1=Equal installments\ninterestType\n\
    Used like: interestRatePerPeriod% interestRateFrequencyType - interestType\ne.g.\
    \ 12.0000% Per year - Declining Balance \nExample Values: 0=Declining Balance,\
    \ 1=Flat\ninterestCalculationPeriodType\nExample Values: 0=Daily, 1=Same as repayment\
    \ period\nallowPartialPeriodInterestCalcualtion\nThis value will be supported\
    \ along with interestCalculationPeriodType as Same as repayment period to calculate\
    \ interest for partial periods. Example: Interest charged from is 5th of April\
    \ , Principal is 10000 and interest is 1% per month then the interest will be\
    \ (10000 * 1%)* (25/30) , it calculates for the month first then calculates exact\
    \ periods between start date and end date(can be a decimal)\ninArrearsTolerance\n\
    The amount that can be 'waived' at end of all loan payments because it is too\
    \ small to worry about.\nThis is also the tolerance amount assessed when determining\
    \ if a loan is in arrears.\nprincipalVariationsForBorrowerCycle,interestRateVariationsForBorrowerCycle,\n\
    numberOfRepaymentVariationsForBorrowerCycle\nVariations for loan, based on borrower\
    \ cycle number\nminimumDaysBetweenDisbursalAndFirstRepayment\nThe minimum number\
    \ of days allowed between a Loan disbursal and its first repayment.\nprincipalThresholdForLastInstalment\n\
    Field represents percentage of current instalment principal amount for comparing\
    \ against principal outstanding to add another repayment instalment. If the outstanding\
    \ principal amount is less then calculated amount, remaining outstanding amount\
    \ will be added to current instalment. Default value for multi disburse loan is\
    \ 50% and non-multi disburse loan is 0%\ncanDefineInstallmentAmount\nif provided\
    \ as true, then fixed instalment amount can be provided from loan account.\ntransactionProcessingStrategyId\n\
    An enumeration that indicates the type of transaction processing strategy to be\
    \ used. This relates to functionality that is also known as Payment Application\
    \ Logic.\nA number of out of the box approaches exist, some are custom to specific\
    \ MFIs, some are more general and indicate the order in which payments are processed.\n\
    \nRefer to the Payment Application Logic / Transaction Processing Strategy section\
    \ in the appendix for more detailed overview of each available payment application\
    \ logic provided out of the box.\n\nList of current approaches:\n1 = Mifos style\
    \ (Similar to Old Mifos)\n2 = Heavensfamily (Custom MFI approach)\n3 = Creocore\
    \ (Custom MFI approach)\n4 = RBI (India)\n5 = Principal Interest Penalties Fees\
    \ Order\n6 = Interest Principal Penalties Fees Order\n7 = Early Payment Strategy\n\
    graceOnPrincipalPayment\nOptional: Integer - represents the number of repayment\
    \ periods that grace should apply to the principal component of a repayment period.\n\
    graceOnInterestPayment\nOptional: Integer - represents the number of repayment\
    \ periods that grace should apply to the interest component of a repayment period.\
    \ Interest is still calculated but offset to later repayment periods.\ngraceOnInterestCharged\n\
    Optional: Integer - represents the number of repayment periods that should be\
    \ interest-free.\ngraceOnArrearsAgeing\nOptional: Integer - Used in Arrears calculation\
    \ to only take into account loans that are more than graceOnArrearsAgeing days\
    \ overdue.\noverdueDaysForNPA\nOptional: Integer - represents the maximum number\
    \ of days a Loan may be overdue before being classified as a NPA (non performing\
    \ asset)\naccountMovesOutOfNPAOnlyOnArrearsCompletion\nOptional: Boolean - if\
    \ provided as true, Loan Account moves out of NPA state only when all arrears\
    \ are cleared\naccountingRule\nSpecifies if accounting is enabled for the particular\
    \ product and the type of the accounting rule to be used Example Values:1=NONE,\
    \ 2=CASH_BASED, 3=ACCRUAL_PERIODIC, 4=ACCRUAL_UPFRONT\nisInterestRecalculationEnabled\n\
    It is a flag, Used to denote whether interest recalculation is enabled or disabled\
    \ for the particular product\ndaysInYearType\nSpecifies the number of days in\
    \ a year. \nExample Values:1=ACTUAL(Actual number of days in year), 360=360 DAYS,\
    \ 364=364 DAYS(52 WEEKS), 365=365 DAYS\ndaysInMonthType\nSpecifies the number\
    \ of days in a month. \nExample Values:1=ACTUAL(Actual number of days in month),\
    \ 30=30 DAYS\ninterestRecalculationCompoundingMethod\nSpecifies which amount portion\
    \ should be added to principal for interest recalculation. \nExample Values:0=NONE(Only\
    \ on principal), 1=INTEREST(Principal+Interest), 2=FEE(Principal+Fee), 3=FEE And\
    \ INTEREST (Principal+Fee+Interest)\nrescheduleStrategyMethod\nSpecifies what\
    \ action should perform on loan repayment schedule for advance payments. \nExample\
    \ Values:1=Reschedule next repayments, 2=Reduce number of installments, 3=Reduce\
    \ EMI amount\nrecalculationCompoundingFrequencyType\nSpecifies effective date\
    \ from which the compounding of interest or fee amounts will be considered in\
    \ recalculation on late payment.\nExample Values:1=Same as repayment period, 2=Daily,\
    \ 3=Weekly, 4=Monthly\nrecalculationCompoundingFrequencyInterval\nSpecifies compounding\
    \ frequency interval for interest recalculation.\nrecalculationCompoundingFrequencyDate\n\
    Specifies compounding frequency start date for interest recalculation.\nrecalculationRestFrequencyType\n\
    Specifies effective date from which the late or advanced payment amounts will\
    \ be considered in recalculation.\nExample Values:1=Same as repayment period,\
    \ 2=Daily, 3=Weekly, 4=Monthly\nrecalculationRestFrequencyInterval\nSpecifies\
    \ rest frequency interval for interest recalculation.\nrecalculationRestFrequencyDate\n\
    Specifies rest frequency start date for interest recalculation.\npreClosureInterestCalculationStrategy\n\
    Specifies applicable days for interest calculation on pre closure of a loan.\n\
    Example Values:1=Calculate till pre closure date, 2=Calculate till rest frequency\
    \ date\nisArrearsBasedOnOriginalSchedule\nIf Specified as true, arrears will be\
    \ identified based on original schedule.\nallowAttributeOverrides\nSpecifies if\
    \ select attributes may be overridden for individual loan accounts."
- name: Self Run Report
  description: "This resource allows you to run and receive output from pre-defined\
    \ Apache Fineract reports.\n\nThe default output is a JSON formatted \"Generic\
    \ Resultset\". The Generic Resultset contains Column Heading as well as Data information.\
    \ However, you can export to CSV format by simply adding \"&exportCSV=true\" to\
    \ the end of your URL.\n\nIf Pentaho reports have been pre-defined, they can also\
    \ be run through this resource. Pentaho reports can return HTML, PDF or CSV formats.\n\
    \nThe Apache Fineract reference application uses a JQuery plugin called stretchyreporting\
    \ which, itself, uses this reports resource to provide a pretty flexible reporting\
    \ User Interface (UI).\n\nARGUMENTS\nR_'parameter names' ... optional, No defaults\
    \ The number and names of the parameters depend on the specific report and how\
    \ it has been configured. R_officeId is an example parameter name.Note: the prefix\
    \ R_ stands for ReportinggenericResultSetoptional, defaults to true If 'true'\
    \ an optimised JSON format is returned suitable for tabular display of data. If\
    \ 'false' a simple JSON format is returned. parameterType optional, The only valid\
    \ value is 'true'. If any other value is provided the argument will be ignored\
    \ Determines whether the request looks in the list of reports or the list of parameters\
    \ for its data. Doesn't apply to Pentaho reports.exportCSV optional, The only\
    \ valid value is 'true'. If any other value is provided the argument will be ignored\
    \ Output will be delivered as a CSV file instead of JSON. Doesn't apply to Pentaho\
    \ reports.output-type optional, Defaults to HTML. Valid Values are HTML, XLS,\
    \ XSLX, CSV and PDF for html, Excel, Excel 2007+, CSV and PDF formats respectively.Only\
    \ applies to Pentaho reports.locale optional Any valid locale Ex: en_US, en_IN,\
    \ fr_FR etcOnly applies to Pentaho reports."
- name: Self Authentication
  description: Authenticates the credentials provided and returns the set roles and
    permissions allowed
- name: Tax Components
  description: This defines the Tax Components
- name: Tax Group
  description: This defines the Tax Group
- name: SPM API - LookUp Table
  description: The Apache Fineract SPM API provides the ability to create custom surveys
    to collect social performance measurentment data or any additional questionnaire
    a financial institute want to collect.
- name: User Generated Documents
  description: "User Generated Documents(alternatively, Templates) are used for end-user\
    \ features such as custom user defined document generation (AKA UGD). They are\
    \ based on {{ moustache }} templates. Think of them as a sort of built-in \"mail\
    \ merge\" functionality.\n\nUser Generated Documents (and other types of templates)\
    \ can aggregate data from several Apache Fineract back-end API calls via mappers.\
    \ Mappers can even access non-Apache Fineract REST services from other servers.\
    \ UGDs can render such data in tables, show images, etc. TBD: Please have a look\
    \ at some of the Example UGDs included in Apache Fineract (or the Wiki page, for\
    \ now.).\n\nUGDs can be assigned to an entity like client or loan and be of a\
    \ type like Document or SMS. The entity and type of a UGD is only there for the\
    \ convenience of user agents (UIs), in order to know where to show UGDs for the\
    \ user (i.e. which tab). The Template Engine back-end runner does not actually\
    \ need this metadata."
- name: Password preferences
  description: |-
    This API enables management of password policy for user administration.

    There is no Apache Fineract functionality for creating a validation policy. The validation policies come pre-installed.

    Validation policies may be updated
- name: Permissions
  description: "An API capability to support management of application permissions\
    \ for user administration.\n\nThere is no Apache Fineract functionality for creating\
    \ or deleting permissions. Permissions come pre-installed.\n\nPermissions are\
    \ not updated, except in the case of enabling or disabling non-read transactions\
    \ for Maker Checker functionality"
- name: Roles
  description: An API capability to support management of application roles for user
    administration.
- name: Users
  description: An API capability to support administration of application users.
paths:
  /runaccruals:
    post:
      tags:
      - Periodic Accrual Accounting
      summary: Executes Periodic Accrual Accounting
      description: |
        Mandatory Fields

        tillDate
      operationId: executePeriodicAccrualAccounting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRunaccrualsRequest'
        required: true
      responses:
        "200":
          description: OK
  /glclosures/{glClosureId}:
    get:
      tags:
      - Accounting Closure
      summary: Retrieve an Accounting Closure
      description: "Example Requests:\n\nglclosures/1\n\n\n/glclosures/1?fields=officeName,closingDate"
      operationId: retreiveClosure
      parameters:
      - name: glClosureId
        in: path
        description: glClosureId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlClosureResponse'
    put:
      tags:
      - Accounting Closure
      summary: Update an Accounting closure
      description: "Once an accounting closure is created, only the comments associated\
        \ with it may be edited"
      operationId: updateGLClosure
      parameters:
      - name: glClosureId
        in: path
        description: glClosureId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGlClosuresRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGlClosuresResponse'
    delete:
      tags:
      - Accounting Closure
      summary: Delete an accounting closure
      description: "Note: Only the latest accounting closure associated with a branch\
        \ may be deleted."
      operationId: deleteGLClosure
      parameters:
      - name: glClosureId
        in: path
        description: glclosureId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGlClosuresResponse'
  /glclosures:
    get:
      tags:
      - Accounting Closure
      summary: List Accounting closures
      description: |-
        Example Requests:

        glclosures
      operationId: retrieveAllClosures
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGlClosureResponse'
    post:
      tags:
      - Accounting Closure
      summary: Create an Accounting Closure
      description: "Mandatory Fields\nofficeId,closingDate"
      operationId: createGLClosure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGlClosuresRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGlClosuresResponse'
  /financialactivityaccounts/template:
    get:
      tags:
      - Mapping Financial Activities to Accounts
      operationId: retrieveTemplate
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /financialactivityaccounts/{mappingId}:
    get:
      tags:
      - Mapping Financial Activities to Accounts
      summary: |
        Retrieve a Financial Activity to Account Mapping
      description: |-
        Example Requests:

        financialactivityaccounts/1
      operationId: retreive
      parameters:
      - name: mappingId
        in: path
        description: mappingId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'
    put:
      tags:
      - Mapping Financial Activities to Accounts
      summary: Update a Financial Activity to Account Mapping
      description: "the API updates the Ledger account linked to a Financial Activity\
        \ \n"
      operationId: updateGLAccount
      parameters:
      - name: mappingId
        in: path
        description: mappingId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFinancialActivityAccountsResponse'
    delete:
      tags:
      - Mapping Financial Activities to Accounts
      summary: Delete a Financial Activity to Account Mapping
      operationId: deleteGLAccount
      parameters:
      - name: mappingId
        in: path
        description: mappingId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFinancialActivityAccountsResponse'
  /financialactivityaccounts:
    get:
      tags:
      - Mapping Financial Activities to Accounts
      summary: List Financial Activities to Accounts Mappings
      description: |-
        Example Requests:

        financialactivityaccounts
      operationId: retrieveAll
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'
    post:
      tags:
      - Mapping Financial Activities to Accounts
      summary: Create a new Financial Activity to Accounts Mapping
      description: "Mandatory Fields\nfinancialActivityId, glAccountId"
      operationId: createGLAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFinancialActivityAccountsResponse'
  /glaccounts/{glAccountId}:
    get:
      tags:
      - General Ledger Account
      summary: Retrieve a General Ledger Account
      description: "Example Requests:\n\nglaccounts/1\n\n\nglaccounts/1?template=true\n\
        \n\nglaccounts/1?fields=name,glCode\n\n\nglaccounts/1?fetchRunningBalance=true"
      operationId: retreiveAccount
      parameters:
      - name: glAccountId
        in: path
        description: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: fetchRunningBalance
        in: query
        description: fetchRunningBalance
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGLAccountsResponse'
    put:
      tags:
      - General Ledger Account
      summary: Update an Accounting closure
      description: "Once an accounting closure is created, only the comments associated\
        \ with it may be edited\n\n"
      operationId: updateGLAccount_1
      parameters:
      - name: glAccountId
        in: path
        description: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGLAccountsRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGLAccountsResponse'
    delete:
      tags:
      - General Ledger Account
      summary: Delete an accounting closure
      description: "Note: Only the latest accounting closure associated with a branch\
        \ may be deleted."
      operationId: deleteGLAccount_1
      parameters:
      - name: glAccountId
        in: path
        description: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGLAccountsRequest'
  /glaccounts/uploadtemplate:
    post:
      tags:
      - General Ledger Account
      operationId: postGlAccountsTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /glaccounts/downloadtemplate:
    get:
      tags:
      - General Ledger Account
      operationId: getGlAccountsTemplate
      parameters:
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /glaccounts:
    get:
      tags:
      - General Ledger Account
      summary: List General Ledger Accounts
      description: |-
        ARGUMENTS
        type Integer optional manualEntriesAllowed boolean optional usage Integer optional disabled boolean optional parentId Long optional tagId Long optional
        Example Requests:

        glaccounts


        glaccounts?type=1&manualEntriesAllowed=true&usage=1&disabled=false

        glaccounts?fetchRunningBalance=true
      operationId: retrieveAllAccounts
      parameters:
      - name: type
        in: query
        description: type
        schema:
          type: integer
          format: int32
      - name: searchParam
        in: query
        description: searchParam
        schema:
          type: string
      - name: usage
        in: query
        description: usage
        schema:
          type: integer
          format: int32
      - name: manualEntriesAllowed
        in: query
        description: manualEntriesAllowed
        schema:
          type: boolean
      - name: disabled
        in: query
        description: disabled
        schema:
          type: boolean
      - name: fetchRunningBalance
        in: query
        description: fetchRunningBalance
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGLAccountsResponse'
    post:
      tags:
      - General Ledger Account
      summary: Create a General Ledger Account
      description: "Note: You may optionally create Hierarchical Chart of Accounts\
        \ by using the \"parentId\" property of an Account\nMandatory Fields: \nname,\
        \ glCode, type, usage and manualEntriesAllowed"
      operationId: createGLAccount_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGLAccountsRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGLAccountsResponse'
  /glaccounts/template:
    get:
      tags:
      - General Ledger Account
      summary: Retrieve GL Accounts Template
      description: "This is a convenience resource. It can be useful when building\
        \ maintenance user interface screens for client applications. The template\
        \ data returned consists of any or all of:\n\nField Defaults\nAllowed Value\
        \ Lists\nExample Request:\n\nglaccounts/template\nglaccounts/template?type=1\n\
        \ntype is optional and integer value from 1 to 5.\n\n1.Assets \n2.Liabilities\
        \ \n3.Equity \n4.Income \n5.Expenses"
      operationId: retrieveNewAccountDetails
      parameters:
      - name: type
        in: query
        description: type
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGLAccountsTemplateResponse'
  /journalentries/provisioning:
    get:
      tags:
      - Journal Entries
      operationId: retrieveJournalEntries
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: entryId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /journalentries/openingbalance:
    get:
      tags:
      - Journal Entries
      operationId: retrieveOpeningBalance
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: currencyCode
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /journalentries/{journalEntryId}:
    get:
      tags:
      - Journal Entries
      summary: Retrieve a single Entry
      description: "Example Requests:\n\njournalentries/1\n\n\n\njournalentries/1?fields=officeName,glAccountId,entryType,amount\n\
        \njournalentries/1?runningBalance=true\n\njournalentries/1?transactionDetails=true"
      operationId: retreiveJournalEntryById
      parameters:
      - name: journalEntryId
        in: path
        description: journalEntryId
        required: true
        schema:
          type: integer
          format: int64
      - name: runningBalance
        in: query
        description: runningBalance
        schema:
          type: boolean
      - name: transactionDetails
        in: query
        description: transactionDetails
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryData'
  /journalentries/{transactionId}:
    post:
      tags:
      - Journal Entries
      summary: Update Running balances for Journal Entries
      description: "This API calculates the running balances for office. If office\
        \ ID not provided this API calculates running balances for all offices. \n\
        Mandatory Fields\nofficeId"
      operationId: createReversalJournalEntry
      parameters:
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: string
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostJournalEntriesTransactionIdRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostJournalEntriesTransactionIdResponse'
  /journalentries:
    get:
      tags:
      - Journal Entries
      summary: List Journal Entries
      description: "The list capability of journal entries can support pagination\
        \ and sorting.\n\nExample Requests:\n\njournalentries\n\njournalentries?transactionId=PB37X8Y21EQUY4S\n\
        \njournalentries?officeId=1&manualEntriesOnly=true&fromDate=1 July 2013&toDate=15\
        \ July 2013&dateFormat=dd MMMM yyyy&locale=en\n\njournalentries?fields=officeName,glAccountName,transactionDate\n\
        \njournalentries?offset=10&limit=50\n\njournalentries?orderBy=transactionId&sortOrder=DESC\n\
        \njournalentries?runningBalance=true\n\njournalentries?transactionDetails=true\n\
        \njournalentries?loanId=12\n\njournalentries?savingsId=24"
      operationId: retrieveAll_1
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: glAccountId
        in: query
        description: glAccountId
        schema:
          type: integer
          format: int64
      - name: manualEntriesOnly
        in: query
        description: manualEntriesOnly
        schema:
          type: boolean
      - name: fromDate
        in: query
        description: fromDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: toDate
        in: query
        description: toDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: transactionId
        in: query
        description: transactionId
        schema:
          type: string
      - name: entityType
        in: query
        description: entityType
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: locale
        in: query
        description: locale
        schema:
          type: string
      - name: dateFormat
        in: query
        description: dateFormat
        schema:
          type: string
      - name: loanId
        in: query
        description: loanId
        schema:
          type: integer
          format: int64
      - name: savingsId
        in: query
        description: savingsId
        schema:
          type: integer
          format: int64
      - name: runningBalance
        in: query
        description: runningBalance
        schema:
          type: boolean
      - name: transactionDetails
        in: query
        description: transactionDetails
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JournalEntryData'
    post:
      tags:
      - Journal Entries
      summary: Create "Balanced" Journal Entries
      description: "Note: A Balanced (simple) Journal entry would have atleast one\
        \ \"Debit\" and one \"Credit\" entry whose amounts are equal \nCompound Journal\
        \ entries may have \"n\" debits and \"m\" credits where both \"m\" and \"\
        n\" are greater than 0 and the net sum or all debits and credits are equal\
        \ \n\n\nMandatory Fields\nofficeId, transactionDate\n\n\ncredits- glAccountId,\
        \ amount, comments\n\n \ndebits-  glAccountId, amount, comments\n\n \nOptional\
        \ Fields\npaymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber,\
        \ bankNumber"
      operationId: createGLJournalEntry
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryCommand'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostJournalEntriesResponse'
  /journalentries/downloadtemplate:
    get:
      tags:
      - Journal Entries
      operationId: getJournalEntriesTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /journalentries/uploadtemplate:
    post:
      tags:
      - Journal Entries
      operationId: postJournalEntriesTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /provisioningentries/{entryId}:
    get:
      tags:
      - Provisioning Entries
      summary: Retrieves a Provisioning Entry
      description: Returns the details of a generated Provisioning Entry.
      operationId: retrieveProvisioningEntry
      parameters:
      - name: entryId
        in: path
        description: entryId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningEntryData'
    post:
      tags:
      - Provisioning Entries
      summary: Recreates Provisioning Entry
      description: Recreates Provisioning Entry | createjournalentry.
      operationId: modifyProvisioningEntry
      parameters:
      - name: entryId
        in: path
        description: entryId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: |-
          command=createjournalentry
          command=recreateprovisioningentry
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProvisioningEntriesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProvisioningEntriesResponse'
  /provisioningentries:
    get:
      tags:
      - Provisioning Entries
      summary: List all Provisioning Entries
      operationId: retrieveAllProvisioningEntries
      parameters:
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProvisioningEntryData'
    post:
      tags:
      - Provisioning Entries
      summary: Create new Provisioning Entries
      description: |-
        Creates a new Provisioning Entries

        Mandatory Fields
        date
        dateFormat
        locale
        Optional Fields
        createjournalentries
      operationId: createProvisioningEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProvisioningEntriesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProvisioningEntriesResponse'
  /provisioningentries/entries:
    get:
      tags:
      - Provisioning Entries
      operationId: retrieveProviioningEntries
      parameters:
      - name: entryId
        in: query
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        schema:
          type: integer
          format: int64
      - name: categoryId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanProductProvisioningEntryData'
  /accountingrules/template:
    get:
      tags:
      - Accounting Rules
      summary: Retrieve Accounting Rule Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        accountingrules/template
      operationId: retrieveTemplate_1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountRulesTemplateResponse'
  /accountingrules/{accountingRuleId}:
    get:
      tags:
      - Accounting Rules
      summary: Retrieve a Accounting rule
      description: |-
        Returns the details of a defined Accounting rule.

        Example Requests:

        accountingrules/1
      operationId: retreiveAccountingRule
      parameters:
      - name: accountingRuleId
        in: path
        description: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingRuleData'
    put:
      tags:
      - Accounting Rules
      summary: Update a Accounting Rule
      description: Updates the details of a Accounting rule.
      operationId: updateAccountingRule
      parameters:
      - name: accountingRuleId
        in: path
        description: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountingRulesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountingRulesResponse'
    delete:
      tags:
      - Accounting Rules
      summary: Delete a Accounting Rule
      description: Deletes a Accounting rule.
      operationId: deleteAccountingRule
      parameters:
      - name: accountingRuleId
        in: path
        description: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountingRulesResponse'
  /accountingrules:
    get:
      tags:
      - Accounting Rules
      summary: Retrieve Accounting Rules
      description: |-
        Returns the list of defined accounting rules.

        Example Requests:

        accountingrules
      operationId: retrieveAllAccountingRules
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountRulesResponse'
    post:
      tags:
      - Accounting Rules
      summary: Create/Define a Accounting rule
      description: "Define a new Accounting rule.\n\nMandatory Fields\nname, officeId,\n\
        accountToDebit OR debitTags,\naccountToCredit OR creditTags.\n\nOptional Fields\n\
        description"
      operationId: createAccountingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountingRulesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountingRulesResponse'
  /adhocquery/{adHocId}:
    get:
      tags:
      - AdhocQuery Api
      operationId: retrieveAdHocQuery
      parameters:
      - name: adHocId
        in: path
        description: adHocId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - AdhocQuery Api
      operationId: update
      parameters:
      - name: adHocId
        in: path
        description: adHocId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - AdhocQuery Api
      operationId: deleteAdHocQuery
      parameters:
      - name: adHocId
        in: path
        description: adHocId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /adhocquery:
    get:
      tags:
      - AdhocQuery Api
      operationId: retrieveAll_2
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - AdhocQuery Api
      operationId: createAdHocQuery
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /adhocquery/template:
    get:
      tags:
      - AdhocQuery Api
      operationId: template
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /batches:
    post:
      tags:
      - Batch API
      summary: Batch requests in a single transaction
      description: "The Apache Fineract Batch API is also capable of executing all\
        \ the requests in a single transaction, by setting a Query Parameter, \"enclosingTransaction=true\"\
        . So, if one or more of the requests in a batch returns an erroneous response\
        \ all of the Data base transactions made by other successful requests will\
        \ be rolled back.\n\nIf there has been a rollback in a transaction then a\
        \ single response will be provided, with a '400' status code and a body consisting\
        \ of the error details of the first failed request."
      operationId: handleBatchRequests
      parameters:
      - name: enclosingTransaction
        in: query
        description: enclosingTransaction
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBatchesRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
  /audits/searchtemplate:
    get:
      tags:
      - Audits
      summary: Audit Search Template
      description: |-
        This is a convenience resource. It can be useful when building an Audit Search UI. "appUsers" are data scoped to the office/branch the requestor is associated with.

        Example Requests:

        audits/searchtemplate
        audits/searchtemplate?fields=actionNames
      operationId: retrieveAuditSearchTemplate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'
  /audits/{auditId}:
    get:
      tags:
      - Audits
      summary: Retrieve an Audit Entry
      description: "Example Requests:\n\naudits/20\naudits/20?fields=madeOnDate,maker,processingResult"
      operationId: retrieveAuditEntry
      parameters:
      - name: auditId
        in: path
        description: auditId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckerResponse'
  /audits:
    get:
      tags:
      - Audits
      summary: List Audits
      description: "Get a 200 list of audits that match the criteria supplied and\
        \ sorted by audit id in descending order, and are within the requestors' data\
        \ scope. Also it supports pagination and sorting\n\nExample Requests:\n\n\
        audits\n\naudits?fields=madeOnDate,maker,processingResult\n\naudits?makerDateTimeFrom=2013-03-25\
        \ 08:00:00&makerDateTimeTo=2013-04-04 18:00:00\n\naudits?officeId=1\n\naudits?officeId=1&includeJson=true"
      operationId: retrieveAuditEntries
      parameters:
      - name: actionName
        in: query
        description: actionName
        schema:
          type: string
      - name: entityName
        in: query
        description: entityName
        schema:
          type: string
      - name: resourceId
        in: query
        description: resourceId
        schema:
          type: integer
          format: int64
      - name: makerId
        in: query
        description: makerId
        schema:
          type: integer
          format: int64
      - name: makerDateTimeFrom
        in: query
        description: makerDateTimeFrom
        schema:
          type: string
      - name: makerDateTimeTo
        in: query
        description: makerDateTimeTo
        schema:
          type: string
      - name: checkerId
        in: query
        description: checkerId
        schema:
          type: integer
          format: int64
      - name: checkerDateTimeFrom
        in: query
        description: checkerDateTimeFrom
        schema:
          type: string
      - name: checkerDateTimeTo
        in: query
        description: checkerDateTimeTo
        schema:
          type: string
      - name: processingResult
        in: query
        description: processingResult
        schema:
          type: integer
          format: int32
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int32
      - name: groupId
        in: query
        description: groupId
        schema:
          type: integer
          format: int32
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int32
      - name: loanid
        in: query
        description: loanid
        schema:
          type: integer
          format: int32
      - name: savingsAccountId
        in: query
        description: savingsAccountId
        schema:
          type: integer
          format: int32
      - name: paged
        in: query
        description: paged
        schema:
          type: boolean
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMakerCheckerResponse'
  /makercheckers:
    get:
      tags:
      - Maker Checker (or 4-eye) functionality
      summary: List Maker Checker Entries
      description: "Get a list of entries that can be checked by the requestor that\
        \ match the criteria supplied.\n\nExample Requests:\n\nmakercheckers\n\nmakercheckers?fields=madeOnDate,maker,processingResult\n\
        \nmakercheckers?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04\
        \ 18:00:00\n\nmakercheckers?officeId=1\n\nmakercheckers?officeId=1&includeJson=true"
      operationId: retrieveCommands
      parameters:
      - name: actionName
        in: query
        description: actionName
        schema:
          type: string
      - name: entityName
        in: query
        description: entityName
        schema:
          type: string
      - name: resourceId
        in: query
        description: resourceId
        schema:
          type: integer
          format: int64
      - name: makerId
        in: query
        description: makerId
        schema:
          type: integer
          format: int64
      - name: makerDateTimeFrom
        in: query
        description: makerDateTimeFrom
        schema:
          type: string
      - name: makerDateTimeTo
        in: query
        description: makerDateTimeTo
        schema:
          type: string
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int32
      - name: groupId
        in: query
        description: groupId
        schema:
          type: integer
          format: int32
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int32
      - name: loanid
        in: query
        description: loanid
        schema:
          type: integer
          format: int32
      - name: savingsAccountId
        in: query
        description: savingsAccountId
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMakerCheckerResponse'
  /makercheckers/{auditId}:
    post:
      tags:
      - Maker Checker (or 4-eye) functionality
      summary: Approve Maker Checker Entry | Reject Maker Checker Entry
      operationId: approveMakerCheckerEntry
      parameters:
      - name: auditId
        in: path
        description: auditId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMakerCheckersResponse'
    delete:
      tags:
      - Maker Checker (or 4-eye) functionality
      summary: Delete Maker Checker Entry
      operationId: deleteMakerCheckerEntry
      parameters:
      - name: auditId
        in: path
        description: auditId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMakerCheckersResponse'
  /makercheckers/searchtemplate:
    get:
      tags:
      - Maker Checker (or 4-eye) functionality
      summary: Maker Checker Search Template
      description: |-
        This is a convenience resource. It can be useful when building a Checker Inbox UI. "appUsers" are data scoped to the office/branch the requestor is associated with. "actionNames" and "entityNames" returned are those that the requestor has Checker approval permissions for.

        Example Requests:

        makercheckers/searchtemplate
        makercheckers/searchtemplate?fields=entityNames
      operationId: retrieveAuditSearchTemplate_1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'
  /accountnumberformats/template:
    get:
      tags:
      - Account number format
      summary: Retrieve Account number format Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Request:

        accountnumberformats/template
      operationId: retrieveTemplate_2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountNumberFormatsResponseTemplate'
  /accountnumberformats/{accountNumberFormatId}:
    get:
      tags:
      - Account number format
      summary: Retrieve an Account number format
      description: "Example Requests:\n\naccountnumberformats/1\n\n\naccountnumberformats/1?template=true\n\
        \n\naccountnumberformats/1?fields=accountType,prefixType"
      operationId: retrieveOne
      parameters:
      - name: accountNumberFormatId
        in: path
        description: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'
    put:
      tags:
      - Account number format
      summary: Update an Account number format
      operationId: update_1
      parameters:
      - name: accountNumberFormatId
        in: path
        description: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountNumberFormatsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountNumberFormatsResponse'
    delete:
      tags:
      - Account number format
      summary: Delete an Account number format
      description: "Note: Account numbers created while this format was active would\
        \ remain unchanged."
      operationId: delete
      parameters:
      - name: accountNumberFormatId
        in: path
        description: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountNumberFormatsResponse'
  /accountnumberformats:
    get:
      tags:
      - Account number format
      summary: List Account number formats
      description: "Example Requests:\n\naccountnumberformats\n\n\naccountnumberformats?fields=accountType,prefixType"
      operationId: retrieveAll_3
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'
    post:
      tags:
      - Account number format
      summary: Create an Account number format
      description: "Note: You may associate a single Account number format for a given\
        \ account type\nMandatory Fields for Account number formats\naccountType"
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountNumberFormatsRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountNumberFormatsResponse'
  /imports/downloadOutputTemplate:
    get:
      operationId: getOutputTemplate
      parameters:
      - name: importDocumentId
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /imports:
    get:
      operationId: retrieveImportDocuments
      parameters:
      - name: entityType
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /imports/getOutputTemplateLocation:
    get:
      operationId: retriveOutputTemplateLocation
      parameters:
      - name: importDocumentId
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /caches:
    get:
      tags:
      - Cache
      summary: Retrieve Cache Types
      description: |-
        Returns the list of caches.

        Example Requests:

        caches
      operationId: retrieveAll_4
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCachesResponse'
    put:
      tags:
      - Cache
      summary: Switch Cache
      description: Switches the cache to chosen one.
      operationId: switchCache
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCachesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCachesResponse'
  /email/{resourceId}:
    get:
      operationId: retrieveOne_1
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: update_2
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: delete_1
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/pendingEmail:
    get:
      operationId: retrievePendingEmail
      parameters:
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/messageByStatus:
    get:
      operationId: retrieveAllEmailByStatus
      parameters:
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      - name: fromDate
        in: query
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: toDate
        in: query
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: locale
        in: query
        schema:
          type: string
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/sentEmail:
    get:
      operationId: retrieveSentEmail
      parameters:
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/failedEmail:
    get:
      operationId: retrieveFailedEmail
      parameters:
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email:
    get:
      operationId: retrieveAllEmails
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/campaign/{resourceId}:
    get:
      operationId: retrieveOneCampaign
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateCampaign
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: activate
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: delete_2
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/campaign:
    get:
      operationId: retrieveAllCampaign
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: createCampaign
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/campaign/template/{resourceId}:
    get:
      operationId: retrieveOneTemplate
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/campaign/template:
    get:
      operationId: template_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/campaign/preview:
    post:
      operationId: preview
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /email/configuration:
    get:
      operationId: retrieveAll_5
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateConfiguration
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /smscampaigns:
    get:
      summary: List SMS Campaigns
      description: |-
        Example Requests:

        smscampaigns
      operationId: retrieveAllEmails_1
      parameters:
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsCampaignData'
    post:
      summary: Create a SMS Campaign
      description: "Mandatory Fields\ncampaignName, campaignType, triggerType, providerId,\
        \ runReportId, message\n\nMandatory Fields for Cash based on selected report\
        \ id\nparamValue in json format"
      operationId: createCampaign_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /smscampaigns/{campaignId}:
    put:
      summary: Update a Campaign
      operationId: updateCampaign_1
      parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
    post:
      summary: SMS Campaign
      description: Activates | Deactivates | Reactivates
      operationId: handleCommands
      parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
    delete:
      summary: Delete a SMS Campaign
      description: "Note: Only closed SMS Campaigns can be deleted"
      operationId: delete_3
      parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /smscampaigns/{resourceId}:
    get:
      summary: Retrieve a SMS Campaign
      description: |
        Example Requests:

        smscampaigns/1
      operationId: retrieveCampaign
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsCampaignData'
  /smscampaigns/template:
    get:
      summary: Retrieve a SMS Campaign
      description: |-
        Example Requests:

        smscampaigns/1


        smscampaigns/1?template=true


        smscampaigns/template
      operationId: template_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SmsCampaignData'
  /smscampaigns/preview:
    post:
      operationId: preview_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /codes/{codeId}/codevalues:
    get:
      tags:
      - Code Values
      summary: List Code Values
      description: |-
        Returns the list of Code Values for a given Code

        Example Requests:

        codes/1/codevalues
      operationId: retrieveAllCodeValues
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: A List of code values for a given code
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCodeValuesDataResponse'
    post:
      tags:
      - Code Values
      summary: Create a Code description
      operationId: createCodeValue
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCodeValuesDataRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCodeValueDataResponse'
  /codes/{codeId}/codevalues/{codeValueId}:
    get:
      tags:
      - Code Values
      summary: Retrieve a Code description
      description: |-
        Returns the details of a Code Value

        Example Requests:

        codes/1/codevalues/1
      operationId: retrieveCodeValue
      parameters:
      - name: codeValueId
        in: path
        description: codeValueId
        required: true
        schema:
          type: integer
          format: int64
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCodeValuesDataResponse'
    put:
      tags:
      - Code Values
      summary: Update a Code description
      description: Updates the details of a code description.
      operationId: updateCodeValue
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      - name: codeValueId
        in: path
        description: codeValueId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCodeValuesDataRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCodeValueDataResponse'
    delete:
      tags:
      - Code Values
      summary: Delete a Code description
      description: Deletes a code description
      operationId: deleteCodeValue
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      - name: codeValueId
        in: path
        description: codeValueId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCodeValueDataResponse'
  /codes:
    get:
      tags:
      - Codes
      summary: Retrieve Codes
      description: |-
        Returns the list of codes.

        Example Requests:

        codes
      operationId: retrieveCodes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCodesResponse'
    post:
      tags:
      - Codes
      summary: Create a Code
      description: Creates a code. Codes created through api are always 'user defined'
        and so system defined is marked as false.
      operationId: createCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCodesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCodesResponse'
  /codes/{codeId}:
    get:
      tags:
      - Codes
      summary: Retrieve a Code
      description: |-
        Returns the details of a Code.

        Example Requests:

        codes/1
      operationId: retrieveCode
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCodesResponse'
    put:
      tags:
      - Codes
      summary: Update a Code
      description: Updates the details of a code if it is not system defined.
      operationId: updateCode
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCodesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCodesResponse'
    delete:
      tags:
      - Codes
      summary: Delete a Code
      description: Deletes a code if it is not system defined.
      operationId: deleteCode
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCodesResponse'
  /externalservice/{servicename}:
    get:
      tags:
      - External Services
      summary: Retrieve External Services Configuration
      description: |-
        Returns a external Service configurations based on the Service Name.

        Service Names supported are S3 and SMTP.

        Example Requests:

        externalservice/SMTP
      operationId: retrieveOne_2
      parameters:
      - name: servicename
        in: path
        description: servicename
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalServicesPropertiesData'
    put:
      tags:
      - External Services
      summary: Update External Service
      description: "Updates the external Service Configuration for a Service Name.\n\
        \nExample: \n\nexternalservice/S3"
      operationId: updateExternalServiceProperties
      parameters:
      - name: servicename
        in: path
        description: servicename
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutExternalServiceRequest'
        required: true
      responses:
        "200":
          description: OK
  /configurations/{configId}:
    get:
      tags:
      - Global Configuration
      summary: Retrieve Global Configuration
      description: |-
        Returns a global enable/disable configurations.

        Example Requests:

        configurations/1
      operationId: retrieveOne_3
      parameters:
      - name: configId
        in: path
        description: configId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlobalConfigurationsResponse'
    put:
      tags:
      - Global Configuration
      summary: Update Global Configuration
      description: Updates an enable/disable global configuration item.
      operationId: updateConfiguration_1
      parameters:
      - name: configId
        in: path
        description: configId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGlobalConfigurationsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGlobalConfigurationsResponse'
  /configurations:
    get:
      tags:
      - Global Configuration
      summary: Retrieve Global Configuration | Retrieve Global Configuration for surveys
      description: |-
        Returns the list global enable/disable configurations.

        Example Requests:

        configurations


        Returns the list global enable/disable survey configurations.

        Example Requests:

        configurations/survey
      operationId: retrieveConfiguration
      parameters:
      - name: survey
        in: query
        description: survey
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: List of example \n response \nsurveys response   \ngiven below
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGlobalConfigurationsResponse'
  /echo:
    get:
      operationId: get
      responses:
        default:
          description: default response
          content:
            text/plain:
              schema:
                type: string
  /CreditBureauConfiguration:
    get:
      operationId: getCreditBureau
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /CreditBureauConfiguration/mappings:
    get:
      operationId: getCreditBureauLoanProductMapping
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateCreditBureauLoanProductMapping
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /CreditBureauConfiguration/loanProduct:
    get:
      operationId: fetchLoanProducts
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /CreditBureauConfiguration/organisationCreditBureau:
    get:
      operationId: getOrganisationCreditBureau
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateCreditBureau
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /CreditBureauConfiguration/organisationCreditBureau/{organisationCreditBureauId}:
    post:
      operationId: addOrganisationCreditBureau
      parameters:
      - name: organisationCreditBureauId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /CreditBureauConfiguration/mappings/{CreditBureauId}:
    post:
      operationId: createCreditBureauLoanProductMapping
      parameters:
      - name: CreditBureauId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /CreditBureauConfiguration/config/{organisationCreditBureauId}:
    get:
      operationId: getConfiguration
      parameters:
      - name: organisationCreditBureauId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /datatables/{datatable}/{apptableId}/{datatableId}:
    get:
      tags:
      - Data Tables
      operationId: getDatatableManyEntry
      parameters:
      - name: datatable
        in: path
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: datatableId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: order
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - Data Tables
      summary: Update Entry in Data Table (One to Many)
      description: Updates the row (if it exists) of the data table.
      operationId: updateDatatableEntryOneToMany
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - name: datatableId
        in: path
        description: datatableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdResponse'
    delete:
      tags:
      - Data Tables
      summary: Delete Entry in Datatable (One to Many)
      description: |+
        Deletes the entry (if it exists) for data tables that are one to many with the application table.

      operationId: deleteDatatableEntries_1
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
        example: {}
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - name: datatableId
        in: path
        description: datatableId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdDatatableIdResponse'
  /datatables/register/{datatable}/{apptable}:
    post:
      tags:
      - Data Tables
      summary: Register Data Table
      description: "Registers a data table with the Apache Fineract Core application\
        \ table. This allows the data table to be maintained through the API. In case\
        \ the datatable is a PPI (survey table), a parameter category should be pass\
        \ along with the request. The API currently support one category (200)"
      operationId: registerDatatable
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptable
        in: path
        description: apptable
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataTablesRegisterDatatableAppTable'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
  /datatables/deregister/{datatable}:
    post:
      tags:
      - Data Tables
      summary: Deregister Data Table
      description: Deregisters a data table. It will no longer be available through
        the API.
      operationId: deregisterDatatable
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
  /datatables/{datatable}:
    get:
      tags:
      - Data Tables
      summary: Retrieve Data Table Details
      description: Lists a registered data table details and the Apache Fineract Core
        application table they are registered to.
      operationId: getDatatable
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataTablesResponse'
  /datatables/{datatable}/{apptableId}:
    get:
      tags:
      - Data Tables
      summary: Retrieve Entry(s) from Data Table
      description: "Gets the entry (if it exists) for data tables that are one to\
        \ one with the application table. \nGets the entries (if they exist) for data\
        \ tables that are one to many with the application table.\n\nNote: The 'fields'\
        \ parameter is not available for datatables.\n\nARGUMENTS\norderoptional Specifies\
        \ the order in which data is returned.genericResultSetoptional, defaults to\
        \ false If 'true' an optimised JSON format is returned suitable for tabular\
        \ display of data. This format is used by the default data tables UI functionality.\n\
        Example Requests:\n\ndatatables/extra_client_details/1\n\n\ndatatables/extra_family_details/1?order=`Date\
        \ of Birth` desc\n\n\ndatatables/extra_client_details/1?genericResultSet=true"
      operationId: getDatatable_1
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - name: order
        in: query
        description: order
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataTablesAppTableIdResponse'
    put:
      tags:
      - Data Tables
      summary: Update Entry in Data Table (One to One)
      description: Updates the row (if it exists) of the data table.
      operationId: updateDatatableEntryOnetoOne
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataTablesAppTableIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesAppTableIdResponse'
    post:
      tags:
      - Data Tables
      summary: Create Entry in Data Table
      description: |-
        Adds a row to the data table.

        Note that the default datatable UI functionality converts any field name containing spaces to underscores when using the API. This means the field name "Business Description" is considered the same as "Business_Description". So you shouldn't have both "versions" in any data table.
      operationId: createDatatableEntry
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataTablesAppTableIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataTablesAppTableIdResponse'
    delete:
      tags:
      - Data Tables
      summary: Delete Entry(s) in Data Table
      description: "Deletes the entry (if it exists) for data tables that are one-to-one\
        \ with the application table. \nDeletes the entries (if they exist) for data\
        \ tables that are one-to-many with the application table."
      operationId: deleteDatatableEntries
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdResponse'
  /datatables/{datatableName}:
    put:
      tags:
      - Data Tables
      summary: Update Data Table
      description: "Modifies fields of a data table. If the apptableName parameter\
        \ is passed, data table is deregistered and registered with the new application\
        \ table."
      operationId: updateDatatable
      parameters:
      - name: datatableName
        in: path
        description: datatableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataTablesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
    delete:
      tags:
      - Data Tables
      summary: Delete Data Table
      description: Deletes a data table and deregisters it from the Apache Fineract
        Core application table.
      operationId: deleteDatatable
      parameters:
      - name: datatableName
        in: path
        description: datatableName
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesResponse'
  /datatables:
    get:
      tags:
      - Data Tables
      summary: List Data Tables
      description: |-
        Lists registered data tables and the Apache Fineract Core application table they are registered to.

        ARGUMENTS

        apptable  - optional
        The Apache Fineract core application table.

        Example Requests:

        datatables?apptable=m_client


        datatables
      operationId: getDatatables
      parameters:
      - name: apptable
        in: query
        description: apptable
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDataTablesResponse'
    post:
      tags:
      - Data Tables
      summary: Create Data Table
      description: "Create a new data table and registers it with the Apache Fineract\
        \ Core application table.\n\nField Descriptions\n\nMandatory - datatableName\
        \ : \n\nThe name of the Data Table.\n\nMandatory - apptableName\n\nApplication\
        \ table name. Must be one of the following:\n\nm_client\n\nm_group\n\nm_loan\n\
        \nm_office\n\nm_saving_account\n\nm_product_loan\n\nm_savings_product\n\n\
        Mandatory - columns  \nAn array of columns in the new Data Table.\n\nOptional\
        \ - multiRow\n\nAllows to create multiple entries in the Data Table. Optional,\
        \ defaults to false. If this property is not provided Data Table will allow\
        \ only one entry.\n\nField Descriptions - columns\n\nMandatory - name\n\n\
        Name of the created column. Can contain only alphanumeric characters, underscores\
        \ and spaces, but cannot start with a number. Cannot start or end with an\
        \ underscore or space.\n\nMandatory - type\n\nColumn type. Must be one of\
        \ the following:\n\nBoolean\n\nDate\n\nDateTime\n\nDecimal\n\nDropdown\n\n\
        \nNumber\n\nString\n\nText\n\nMandatory [type = Dropdown] - code\n\nUsed in\
        \ Code description fields. Column name becomes: code_cd_name. Mandatory if\
        \ using type Dropdown, otherwise an error is returned.\n\nOptional - mandatory\n\
        \nDetermines whether this column must have a value in every entry. Optional,\
        \ defaults to false.\n\nMandatory [type = String] - length\n\nLength of the\
        \ text field. Mandatory if type String is used, otherwise an error is returned."
      operationId: createDatatable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataTablesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataTablesResponse'
  /entityDatatableChecks:
    get:
      tags:
      - Entity Data Table
      summary: List Entity-Datatable Checks
      description: "The list capability of Entity-Datatable Checks can support pagination.\n\
        \nOPTIONAL ARGUMENTS\noffset Integer optional, defaults to 0 Indicates the\
        \ result from which pagination startslimit Integer optional, defaults to 200\
        \ Restricts the size of results returned. To override the default and return\
        \ all entries you must explicitly pass a non-positive integer value for limit\
        \ e.g. limit=0, or limit=-1\nExample Request:\n\nentityDatatableChecks?offset=0&limit=15"
      operationId: retrieveAll_6
      parameters:
      - name: status
        in: query
        description: status
        schema:
          type: integer
          format: int64
      - name: entity
        in: query
        description: entity
        schema:
          type: string
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEntityDatatableChecksResponse'
    post:
      tags:
      - Entity Data Table
      summary: Create Entity-Datatable Checks
      description: "Mandatory Fields : \nentity, status, datatableName\n\nNon-Mandatory\
        \ Fields : \nproductId"
      operationId: createEntityDatatableCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEntityDatatableChecksTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEntityDatatableChecksTemplateResponse'
  /entityDatatableChecks/template:
    get:
      tags:
      - Entity Data Table
      summary: Retrieve Entity-Datatable Checks Template
      description: |-
        This is a convenience resource useful for building maintenance user interface screens for Entity-Datatable Checks applications. The template data returned consists of:

        Allowed description Lists
        Example Request:

        entityDatatableChecks/template
      operationId: getTemplate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntityDatatableChecksTemplateResponse'
  /entityDatatableChecks/{entityDatatableCheckId}:
    delete:
      tags:
      - Entity Data Table
      summary: Delete Entity-Datatable Checks
      description: Deletes an existing Entity-Datatable Check
      operationId: deleteDatatable_1
      parameters:
      - name: entityDatatableCheckId
        in: path
        description: entityDatatableCheckId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEntityDatatableChecksTemplateResponse'
  /reports:
    get:
      tags:
      - Reports
      summary: List Reports
      description: |-
        Lists all reports and their parameters.

        Example Request:

        reports
      operationId: retrieveReportList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetReportsResponse'
    post:
      tags:
      - Reports
      summary: Create a Report
      operationId: createReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRepostRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReportsResponse'
  /reports/{id}:
    get:
      tags:
      - Reports
      summary: |
        Retrieve a Report
      description: |-
        Example Requests:

        reports/1


        reports/1?template=true
      operationId: retrieveReport
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportsResponse'
    put:
      tags:
      - Reports
      summary: Update a Report
      description: Only the useReport description can be updated for core reports.
      operationId: updateReport
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutReportRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutReportResponse'
    delete:
      tags:
      - Reports
      summary: Delete a Report
      description: Only non-core reports can be deleted.
      operationId: deleteReport
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReportsResponse'
  /reports/template:
    get:
      tags:
      - Reports
      summary: Retrieve Report Template
      description: "This is a convenience resource. It can be useful when building\
        \ maintenance user interface screens for client applications. The template\
        \ data returned consists of any or all of:\n\nField Defaults\nAllowed description\
        \ Lists\n\nExample Request : \n\nreports/template"
      operationId: retrieveOfficeTemplate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportsTemplateResponse'
  /runreports/{reportName}:
    get:
      tags:
      - Run Reports
      summary: Running a Report
      description: "This resource allows you to run and receive output from pre-defined\
        \ Apache Fineract reports.\n\nReports can also be used to provide data for\
        \ searching and workflow functionality.\n\nThe default output is a JSON formatted\
        \ \"Generic Resultset\". The Generic Resultset contains Column Heading as\
        \ well as Data information. However, you can export to CSV format by simply\
        \ adding \"&exportCSV=true\" to the end of your URL.\n\nIf Pentaho reports\
        \ have been pre-defined, they can also be run through this resource. Pentaho\
        \ reports can return HTML, PDF or CSV formats.\n\nThe Apache Fineract reference\
        \ application uses a JQuery plugin called stretchy reporting which, itself,\
        \ uses this reports resource to provide a pretty flexible reporting User Interface\
        \ (UI).\n\n\n\nExample Requests:\n\nrunreports/Client%20Listing?R_officeId=1\n\
        \n\nrunreports/Client%20Listing?R_officeId=1&exportCSV=true\n\n\nrunreports/OfficeIdSelectOne?R_officeId=1&parameterType=true\n\
        \n\nrunreports/OfficeIdSelectOne?R_officeId=1&parameterType=true&exportCSV=true\n\
        \n\nrunreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=HTML&R_officeId=1\n\
        \n\nrunreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=XLS&R_officeId=1\n\
        \n\nrunreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=CSV&R_officeId=1\n\
        \n\nrunreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=PDF&R_officeId=1"
      operationId: runReport
      parameters:
      - name: reportName
        in: path
        description: reportName
        required: true
        schema:
          type: string
      - name: isSelfServiceUserReport
        in: query
        description: isSelfServiceUserReport
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
  /{entityType}/{entityId}/documents/{documentId}:
    get:
      tags:
      - Documents
      summary: Retrieve a Document
      description: "Example Requests:\n\nclients/1/documents/1\n\n\nloans/1/documents/1\n\
        \n\nclient_identifiers/1/documents/1?fields=name,description"
      operationId: getDocument
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        description: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'
    put:
      tags:
      - Documents
      summary: Update a Document
      description: "Note: A document is updated using a Multi-part form upload \n\
        Body Parts\nname\nName or summary of the document\ndescription\nDescription\
        \ of the document\nfile\nThe file to be uploaded"
      operationId: updateDocument
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        description: documentId
        required: true
        schema:
          type: integer
          format: int64
      - name: Content-Length
        in: header
        description: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataBodyPart'
                name:
                  type: string
                description:
                  type: string
      responses:
        "200":
          description: Not Shown (multi-part form data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponse'
    delete:
      tags:
      - Documents
      summary: Remove a Document
      operationId: deleteDocument
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        description: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEntityTypeEntityIdDocumentsResponse'
  /{entityType}/{entityId}/documents:
    get:
      tags:
      - Documents
      summary: List documents
      description: "Example Requests:\n\nclients/1/documents\n\nclient_identifiers/1/documents\n\
        \nloans/1/documents?fields=name,description"
      operationId: retreiveAllDocuments
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'
    post:
      tags:
      - Documents
      summary: Create a Document
      description: "Note: A document is created using a Multi-part form upload \n\n\
        Body Parts\n\nname : \nName or summary of the document\n\ndescription : \n\
        Description of the document\n\nfile : \nThe file to be uploaded\n\nMandatory\
        \ Fields : \nfile and description"
      operationId: createDocument
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: Content-Length
        in: header
        description: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataBodyPart'
                name:
                  type: string
                description:
                  type: string
      responses:
        "200":
          description: Not Shown (multi-part form data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEntityTypeEntityIdDocumentsResponse'
  /{entityType}/{entityId}/documents/{documentId}/attachment:
    get:
      tags:
      - Documents
      summary: Retrieve Binary File associated with Document
      description: |-
        Request used to download the file associated with the document

        Example Requests:

        clients/1/documents/1/attachment


        loans/1/documents/1/attachment
      operationId: downloadFile
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        description: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Not Shown: The corresponding Binary file"
  /{entity}/{entityId}/images:
    get:
      operationId: downloadClientImage
      parameters:
      - name: entity
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: maxWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: maxHeight
        in: query
        schema:
          type: integer
          format: int32
      - name: output
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
    put:
      operationId: updateClientImage_1
      parameters:
      - name: entity
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Content-Length
        in: header
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataBodyPart'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: addNewClientImage_1
      parameters:
      - name: entity
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Content-Length
        in: header
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataBodyPart'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: deleteClientImage
      parameters:
      - name: entity
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /entitytoentitymapping/{mapId}:
    get:
      operationId: retrieveOne_4
      parameters:
      - name: mapId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateMap
      parameters:
      - name: mapId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: delete_4
      parameters:
      - name: mapId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /entitytoentitymapping/{mapId}/{fromId}/{toId}:
    get:
      operationId: getEntityToEntityMappings
      parameters:
      - name: mapId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fromId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: toId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /entitytoentitymapping:
    get:
      operationId: retrieveAll_7
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /entitytoentitymapping/{relId}:
    post:
      operationId: createMap
      parameters:
      - name: relId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/device/registration:
    get:
      operationId: retrieveAllDeviceRegistrations
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: registerDevice
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/device/registration/client/{clientId}:
    get:
      operationId: retrieveDeviceRegistrationByClientId
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/device/registration/{id}:
    get:
      operationId: retrieveDeviceRegiistration
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateDeviceRegistration
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /hooks:
    get:
      tags:
      - Hooks
      summary: Retrieve Hooks
      description: |-
        Returns the list of hooks.

        Example Requests:

        hooks
      operationId: retrieveHooks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetHookResponse'
    post:
      tags:
      - Hooks
      summary: Create a Hook
      description: |-
        The following parameters can be passed for the creation of a hook :-

        name - string - Required. The name of the template that is being called. (See /hooks/template for the list of valid hook names.)

        isActive - boolean - Determines whether the hook is actually triggered.

        events - array - Determines what events the hook is triggered for.

        config - hash - Required. Key/value pairs to provide settings for this hook. These settings vary between the templates.

        templateId - Optional. The UGD template ID associated with the same entity (client or loan).
      operationId: createHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHookRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHookResponse'
  /hooks/{hookId}:
    get:
      tags:
      - Hooks
      summary: Retrieve a Hook
      description: |-
        Returns the details of a Hook.

        Example Requests:

        hooks/1
      operationId: retrieveHook
      parameters:
      - name: hookId
        in: path
        description: hookId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHookResponse'
    put:
      tags:
      - Hooks
      summary: Update a Hook
      description: Updates the details of a hook.
      operationId: updateHook
      parameters:
      - name: hookId
        in: path
        description: hookId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHookRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutHookResponse'
    delete:
      tags:
      - Hooks
      summary: Delete a Hook
      description: Deletes a hook.
      operationId: deleteHook
      parameters:
      - name: hookId
        in: path
        description: hookId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHookResponse'
  /hooks/template:
    get:
      tags:
      - Hooks
      summary: Retrieve Hooks Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        hooks/template
      operationId: template_3
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHookTemplateResponse'
  /scheduler:
    get:
      tags:
      - Scheduler
      summary: Retrieve Scheduler Status
      description: |-
        Returns the scheduler status.

        Example Requests:

        scheduler
      operationId: retrieveStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchedulerResponse'
    post:
      tags:
      - Scheduler
      summary: Activate Scheduler Jobs | Suspend Scheduler Jobs
      description: Activates the scheduler job service. | Suspends the scheduler job
        service.
      operationId: changeSchedulerStatus
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        "200":
          description: "POST :  scheduler?command=start\n\n\nPOST : scheduler?command=stop"
  /jobs/{jobId}:
    get:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Retrieve a Job
      description: |-
        Returns the details of a Job.

        Example Requests:

        jobs/5
      operationId: retrieveOne_5
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsResponse'
    put:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Update a Job
      description: Updates the details of a job.
      operationId: updateJobDetail
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutJobsJobIDRequest'
        required: true
      responses:
        "200":
          description: OK
    post:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Run a Job
      description: Manually Execute Specific Job.
      operationId: executeJob
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        "200":
          description: "POST: jobs/1?command=executeJob"
  /jobs/{jobId}/runhistory:
    get:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Retrieve Job Run History
      description: |-
        Example Requests:

        jobs/5/runhistory?offset=0&limit=200
      operationId: retrieveHistory
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsJobIDJobRunHistoryResponse'
  /jobs:
    get:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Retrieve Scheduler Jobs
      description: |-
        Returns the list of jobs.

        Example Requests:

        jobs
      operationId: retrieveAll_8
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetJobsResponse'
  /reportmailingjobs:
    get:
      tags:
      - Report Mailing Jobs
      summary: List Report Mailing Jobs
      description: |-
        Example Requests:

        reportmailingjobs
      operationId: retrieveAllReportMailingJobs
      parameters:
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetReportMailingJobsResponse'
    post:
      tags:
      - Report Mailing Jobs
      summary: Create a Report Mailing Job
      description: "Mandatory Fields: name, startDateTime, stretchyReportId, emailRecipients,\
        \ emailSubject, emailMessage, emailAttachmentFileFormatId, recurrence, isActive\n\
        \nOptional Fields: description, stretchyReportParamMap"
      operationId: createReportMailingJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportMailingJobsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReportMailingJobsResponse'
  /reportmailingjobs/{entityId}:
    get:
      tags:
      - Report Mailing Jobs
      summary: Retrieve a Report Mailing Job
      description: |-
        Example Requests:

        reportmailingjobs/1


        reportmailingjobs/1?template=true
      operationId: retrieveReportMailingJob
      parameters:
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportMailingJobsResponse'
    put:
      tags:
      - Report Mailing Jobs
      summary: |
        Update a Report Mailing Job
      operationId: updateReportMailingJob
      parameters:
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutReportMailingJobsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutReportMailingJobsResponse'
    delete:
      tags:
      - Report Mailing Jobs
      summary: Delete a Report Mailing Job
      operationId: deleteReportMailingJob
      parameters:
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReportMailingJobsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReportMailingJobsResponse'
  /reportmailingjobs/template:
    get:
      tags:
      - Report Mailing Jobs
      summary: Retrieve Report Mailing Job Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for report mailing job applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        reportmailingjobs/template
      operationId: retrieveReportMailingJobTemplate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportMailingJobsTemplate'
  /reportmailingjobrunhistory:
    get:
      tags:
      - List Report Mailing Job History
      summary: List Report Mailing Job History
      description: |-
        The list capability of report mailing job history can support pagination and sorting.

        Example Requests:

        reportmailingjobrunhistory/1
      operationId: retrieveAllByReportMailingJobId
      parameters:
      - name: reportMailingJobId
        in: query
        description: reportMailingJobId
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportMailingJobRunHistoryData'
  /authentication:
    post:
      tags:
      - Authentication HTTP Basic
      summary: Verify authentication
      description: Authenticates the credentials provided and returns the set roles
        and permissions allowed.
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAuthenticationResponse'
        "400":
          description: Unauthenticated. Please login
  /twofactor:
    get:
      operationId: getOTPDeliveryMethods
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: requestToken
      parameters:
      - name: deliveryMethod
        in: query
        schema:
          type: string
      - name: extendedToken
        in: query
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /twofactor/invalidate:
    post:
      operationId: updateConfiguration_2
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /twofactor/validate:
    post:
      operationId: validate
      parameters:
      - name: token
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /twofactor/configure:
    get:
      operationId: retrieveAll_9
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateConfiguration_3
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /userdetails:
    get:
      tags:
      - Fetch authenticated user details
      summary: |
        Fetch authenticated user details
      description: checks the Authentication and returns the set roles and permissions
        allowed.
      operationId: fetchAuthenticatedUserData
      parameters:
      - name: access_token
        in: query
        description: access_token
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDetailsResponse'
  /sms/{resourceId}:
    get:
      operationId: retrieveOne_6
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: update_3
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: delete_6
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /sms/{campaignId}/messageByStatus:
    get:
      operationId: retrieveAllSmsByStatus
      parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: toDate
        in: query
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: locale
        in: query
        schema:
          type: string
      - name: dateFormat
        in: query
        schema:
          type: string
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /sms:
    get:
      operationId: retrieveAll_10
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /likelihood/{ppiName}/{likelihoodId}:
    get:
      operationId: retrieve
      parameters:
      - name: likelihoodId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: ppiName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: update_4
      parameters:
      - name: likelihoodId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: ppiName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /likelihood/{ppiName}:
    get:
      operationId: retrieveAll_11
      parameters:
      - name: ppiName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /povertyLine/{ppiName}:
    get:
      operationId: retrieveAll_12
      parameters:
      - name: ppiName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /povertyLine/{ppiName}/{likelihoodId}:
    get:
      operationId: retrieveAll_13
      parameters:
      - name: ppiName
        in: path
        required: true
        schema:
          type: string
      - name: likelihoodId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /survey:
    get:
      summary: Retrieve surveys
      description: Retrieve surveys. This allows to retrieve the list of survey tables
        registered .
      operationId: retrieveSurveys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSurveyResponse'
  /survey/{surveyName}:
    get:
      summary: Retrieve survey
      description: Lists a registered survey table details and the Apache Fineract
        Core application table they are registered to.
      operationId: retrieveSurvey
      parameters:
      - name: surveyName
        in: path
        description: surveyName
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSurveyResponse'
  /survey/{surveyName}/{clientId}:
    get:
      operationId: getClientSurveyOverview
      parameters:
      - name: surveyName
        in: path
        required: true
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /survey/{surveyName}/{clientId}/{entryId}:
    get:
      operationId: getSurveyEntry
      parameters:
      - name: surveyName
        in: path
        required: true
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: entryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /survey/{surveyName}/{apptableId}:
    post:
      summary: Create an entry in the survey table
      description: "Insert and entry in a survey table (full fill the survey).\n\n\
        Refer Link for sample Body:  [ https://demo.fineract.dev/fineract-provider/api-docs/apiLive.htm#survey_create\
        \ ] "
      operationId: createDatatableEntry_1
      parameters:
      - name: surveyName
        in: path
        description: surveyName
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSurveySurveyNameApptableIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSurveySurveyNameApptableIdResponse'
  /survey/{surveyName}/{clientId}/{fulfilledId}:
    delete:
      operationId: deleteDatatableEntries_2
      parameters:
      - name: surveyName
        in: path
        required: true
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fulfilledId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /survey/register/{surveyName}/{apptable}:
    put:
      operationId: register
      parameters:
      - name: surveyName
        in: path
        required: true
        schema:
          type: string
      - name: apptable
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /interoperation/parties/{idType}/{idValue}:
    get:
      summary: Query Interoperation Account by secondary identifier
      operationId: getAccountByIdentifier
      parameters:
      - name: idType
        in: path
        description: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - name: idValue
        in: path
        description: idValue
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
    post:
      summary: Interoperation Identifier registration
      operationId: registerAccountIdentifier_1
      parameters:
      - name: idType
        in: path
        description: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - name: idValue
        in: path
        description: idValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropIdentifierRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
    delete:
      summary: Allow Interoperation Identifier registration
      operationId: deleteAccountIdentifier
      parameters:
      - name: idType
        in: path
        description: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - name: idValue
        in: path
        description: idValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropIdentifierRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
  /interoperation/parties/{idType}/{idValue}/{subIdOrType}:
    get:
      summary: Query Interoperation Account by secondary identifier
      operationId: getAccountByIdentifier_1
      parameters:
      - name: idType
        in: path
        description: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - name: idValue
        in: path
        description: idValue
        required: true
        schema:
          type: string
      - name: subIdOrType
        in: path
        description: subIdOrType
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
    post:
      summary: Interoperation Identifier registration
      operationId: registerAccountIdentifier
      parameters:
      - name: idType
        in: path
        description: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - name: idValue
        in: path
        description: idValue
        required: true
        schema:
          type: string
      - name: subIdOrType
        in: path
        description: subIdOrType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropIdentifierRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
    delete:
      summary: Allow Interoperation Identifier registration
      operationId: deleteAccountIdentifier_1
      parameters:
      - name: idType
        in: path
        description: idType
        required: true
        schema:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
      - name: idValue
        in: path
        description: idValue
        required: true
        schema:
          type: string
      - name: subIdOrType
        in: path
        description: subIdOrType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropIdentifierRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifierAccountResponseData'
  /interoperation/transactions/{transactionCode}/requests/{requestCode}:
    get:
      summary: Query Interoperation Transaction Request
      operationId: getTransactionRequest
      parameters:
      - name: transactionCode
        in: path
        description: transactionCode
        required: true
        schema:
          type: string
      - name: requestCode
        in: path
        description: requestCode
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransactionRequestResponseData'
  /interoperation/requests:
    post:
      summary: Allow Interoperation Transaction Request
      operationId: createTransactionRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropTransactionRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransactionRequestResponseData'
  /interoperation/transactions/{transactionCode}/quotes/{quoteCode}:
    get:
      summary: Query Interoperation Quote
      operationId: getQuote
      parameters:
      - name: transactionCode
        in: path
        description: transactionCode
        required: true
        schema:
          type: string
      - name: quoteCode
        in: path
        description: quoteCode
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropQuoteResponseData'
  /interoperation/quotes:
    post:
      summary: Calculate Interoperation Quote
      operationId: createQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropQuoteRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropQuoteResponseData'
  /interoperation/transactions/{transactionCode}/transfers/{transferCode}:
    get:
      summary: Query Interoperation Transfer
      operationId: getTransfer
      parameters:
      - name: transactionCode
        in: path
        description: transactionCode
        required: true
        schema:
          type: string
      - name: transferCode
        in: path
        description: transferCode
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransferResponseData'
  /interoperation/transfers:
    post:
      summary: Prepare Interoperation Transfer
      operationId: performTransfer
      parameters:
      - name: action
        in: query
        description: action
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteropTransferRequestData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransferResponseData'
  /interoperation/accounts/{accountId}/identifiers:
    get:
      summary: Query Interoperation secondary identifiers by Account Id
      operationId: getAccountIdentifiers
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropIdentifiersResponseData'
  /interoperation/health:
    get:
      summary: Query Interoperation Health Request
      operationId: health
      responses:
        "200":
          description: OK
  /interoperation/accounts/{accountId}:
    get:
      summary: Query Interoperation Account details
      operationId: getAccountDetails
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropAccountData'
  /interoperation/accounts/{accountId}/transactions:
    get:
      summary: Query transactions by Account Id
      operationId: getAccountTransactions
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: string
      - name: debit
        in: query
        description: debit
        schema:
          type: boolean
          default: true
      - name: credit
        in: query
        description: credit
        schema:
          type: boolean
          default: false
      - name: fromBookingDateTime
        in: query
        description: fromBookingDateTime
        schema:
          type: string
      - name: toBookingDateTime
        in: query
        description: toBookingDateTime
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteropTransactionsData'
  /mixreport:
    get:
      tags:
      - Mix Report
      operationId: retrieveXBRLReport
      parameters:
      - name: startDate
        in: query
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        schema:
          type: string
          format: date-time
      - name: currency
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: string
  /mixtaxonomy:
    get:
      tags:
      - Mix Taxonomy
      operationId: retrieveAll_14
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /mixmapping:
    get:
      tags:
      - Mix Mapping
      operationId: retrieveTaxonomyMapping
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - Mix Mapping
      operationId: updateTaxonomyMapping
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /notifications:
    get:
      tags:
      - Notification
      operationId: getAllNotifications
      parameters:
      - name: orderBy
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        schema:
          type: string
      - name: isRead
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - Notification
      operationId: update_5
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /holidays/{holidayId}:
    get:
      tags:
      - Holidays
      summary: Retrieve a Holiday
      description: |-
        Example Requests:

        holidays/1
      operationId: retrieveOne_7
      parameters:
      - name: holidayId
        in: path
        description: holidayId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHolidaysResponse'
    put:
      tags:
      - Holidays
      summary: Update a Holiday
      description: If a holiday is in pending state (created and not activated) then
        all fields are allowed to modify. Once holidays become active only name and
        descriptions are allowed to modify.
      operationId: update_6
      parameters:
      - name: holidayId
        in: path
        description: holidayId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHolidaysHolidayIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutHolidaysHolidayIdResponse'
    post:
      tags:
      - Holidays
      summary: Activate a Holiday
      description: |-
        Always Holidays are created in pending state. This API allows to activate a holiday.

        Only the active holidays are considered for rescheduling the loan repayment.
      operationId: handleCommands_1
      parameters:
      - name: holidayId
        in: path
        description: holidayId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHolidaysHolidayIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHolidaysHolidayIdResponse'
    delete:
      tags:
      - Holidays
      summary: Delete a Holiday
      description: This API allows to delete a holiday. This is a soft delete the
        deleted holiday status is marked as deleted.
      operationId: delete_7
      parameters:
      - name: holidayId
        in: path
        description: holidayId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHolidaysHolidayIdResponse'
  /holidays:
    get:
      tags:
      - Holidays
      summary: List Holidays
      description: |-
        Example Requests:

        holidays?officeId=1
      operationId: retrieveAllHolidays
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        description: fromDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: toDate
        in: query
        description: toDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: locale
        in: query
        description: locale
        schema:
          type: string
      - name: dateFormat
        in: query
        description: dateFormat
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetHolidaysResponse'
    post:
      tags:
      - Holidays
      summary: Create a Holiday
      description: "Mandatory Fields: name, description, fromDate, toDate, repaymentsRescheduledTo,\
        \ offices"
      operationId: createNewHoliday
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHolidaysRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHolidaysResponse'
  /holidays/template:
    get:
      tags:
      - Holidays
      operationId: retrieveRepaymentScheduleUpdationTyeOptions
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /currencies:
    get:
      tags:
      - Currency
      summary: Retrieve Currency Configuration
      description: |-
        Returns the list of currencies permitted for use AND the list of currencies not selected (but available for selection).

        Example Requests:

        currencies


        currencies?fields=selectedCurrencyOptions
      operationId: retrieveCurrencies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCurrenciesResponse'
    put:
      tags:
      - Currency
      summary: Update Currency Configuration
      description: Updates the list of currencies permitted for use.
      operationId: updateCurrencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCurrenciesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCurrenciesResponse'
  /officetransactions:
    get:
      operationId: retrieveOfficeTransactions
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: transferMoneyFrom
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /officetransactions/template:
    get:
      operationId: newOfficeTransactionDetails
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /officetransactions/{transactionId}:
    delete:
      operationId: delete_8
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /offices/{officeId}:
    get:
      tags:
      - Offices
      summary: Retrieve an Office
      description: "Example Requests:\n\noffices/1\n\n\noffices/1?template=true\n\n\
        \noffices/1?fields=id,name,parentName"
      operationId: retreiveOffice
      parameters:
      - name: officeId
        in: path
        description: officeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfficesResponse'
    put:
      tags:
      - Offices
      summary: Update Office
      operationId: updateOffice
      parameters:
      - name: officeId
        in: path
        description: officeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOfficesOfficeIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOfficesOfficeIdResponse'
  /offices:
    get:
      tags:
      - Offices
      summary: List Offices
      description: "Example Requests:\n\noffices\n\n\noffices?fields=id,name,openingDate"
      operationId: retrieveOffices
      parameters:
      - name: includeAllOffices
        in: query
        description: includeAllOffices
        schema:
          type: boolean
          default: false
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetOfficesResponse'
    post:
      tags:
      - Offices
      summary: Create an Office
      description: "Mandatory Fields\nname, openingDate, parentId"
      operationId: createOffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOfficesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOfficesResponse'
  /offices/template:
    get:
      tags:
      - Offices
      summary: Retrieve Office Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        offices/template
      operationId: retrieveOfficeTemplate_1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfficesTemplateResponse'
  /offices/downloadtemplate:
    get:
      tags:
      - Offices
      operationId: getOfficeTemplate
      parameters:
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /offices/uploadtemplate:
    post:
      tags:
      - Offices
      operationId: postOfficeTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /provisioningcategory:
    get:
      tags:
      - Provisioning Category
      operationId: retrieveAll_15
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - Provisioning Category
      operationId: createProvisioningCategory
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /provisioningcategory/{categoryId}:
    put:
      tags:
      - Provisioning Category
      operationId: updateProvisioningCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - Provisioning Category
      operationId: deleteProvisioningCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /provisioningcriteria/template:
    get:
      tags:
      - Provisioning Criteria
      operationId: retrieveTemplate_3
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /provisioningcriteria/{criteriaId}:
    get:
      tags:
      - Provisioning Criteria
      summary: Retrieves a Provisioning Criteria
      description: Retrieves a Provisioning Criteria
      operationId: retrieveProvisioningCriteria
      parameters:
      - name: criteriaId
        in: path
        description: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProvisioningCriteriaCriteriaIdResponse'
    put:
      tags:
      - Provisioning Criteria
      summary: Updates a new Provisioning Criteria
      description: "Updates a new Provisioning Criteria\n\nOptional Fields\ncriteriaName,\
        \ loanProducts, provisioningcriteria"
      operationId: updateProvisioningCriteria
      parameters:
      - name: criteriaId
        in: path
        description: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProvisioningCriteriaRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProvisioningCriteriaResponse'
    delete:
      tags:
      - Provisioning Criteria
      summary: Deletes Provisioning Criteria
      description: Deletes Provisioning Criteria
      operationId: deleteProvisioningCriteria
      parameters:
      - name: criteriaId
        in: path
        description: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisioningCriteriaResponse'
  /provisioningcriteria:
    get:
      tags:
      - Provisioning Criteria
      summary: Retrieves all created Provisioning Criterias
      description: Retrieves all created Provisioning Criterias
      operationId: retrieveAllProvisioningCriterias
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetProvisioningCriteriaResponse'
    post:
      tags:
      - Provisioning Criteria
      summary: Create a new Provisioning Criteria
      description: "Creates a new Provisioning Criteria\n\nMandatory Fields: \ncriteriaName\n\
        provisioningcriteria\n\nOptional Fields: \nloanProducts"
      operationId: createProvisioningCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProvisioningCriteriaRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProvisioningCriteriaResponse'
  /staff/{staffId}:
    get:
      tags:
      - Staff
      summary: Retrieve a Staff Member
      description: |-
        Returns the details of a Staff Member.

        Example Requests:

        staff/1
      operationId: retreiveStaff
      parameters:
      - name: staffId
        in: path
        description: staffId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStaffResponse'
    put:
      tags:
      - Staff
      summary: Update a Staff Member
      description: Updates the details of a staff member.
      operationId: updateStaff
      parameters:
      - name: staffId
        in: path
        description: staffId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStaffRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutStaffResponse'
  /staff:
    get:
      tags:
      - Staff
      summary: Retrieve Staff
      description: "Returns the list of staff members.\n\nExample Requests:\n\nstaff\n\
        \n\n\n\nRetrieve a Staff by status\n\nReturns the details of a Staff based\
        \ on status.\n\nBy default it Returns all the ACTIVE Staff.\n\nIf status=INACTIVE,\
        \ then it returns all INACTIVE Staff.\n\nand for status=ALL, it Returns both\
        \ ACTIVE and INACTIVE Staff.\n\nExample Requests:\n\nstaff?status=active"
      operationId: retrieveStaff
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: staffInOfficeHierarchy
        in: query
        description: staffInOfficeHierarchy
        schema:
          type: boolean
          default: false
      - name: loanOfficersOnly
        in: query
        description: loanOfficersOnly
        schema:
          type: boolean
          default: false
      - name: status
        in: query
        description: status
        schema:
          type: string
          default: active
      responses:
        "200":
          description: "GET https://DomainName/api/v1/staff?status={ACTIVE|INACTIVE|ALL}"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStaffResponse'
    post:
      tags:
      - Staff
      summary: Create a staff member
      description: "Creates a staff member.\n\nMandatory Fields: \nofficeId, firstname,\
        \ lastname\n\nOptional Fields: \nisLoanOfficer, isActive"
      operationId: createStaff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostStaffRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostStaffResponse'
  /staff/downloadtemplate:
    get:
      tags:
      - Staff
      operationId: getStaffTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /staff/uploadtemplate:
    post:
      tags:
      - Staff
      operationId: postStaffTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /cashiers:
    get:
      tags:
      - Cashiers
      operationId: getCashierData
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: tellerId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: date
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /tellers/{tellerId}/cashiers/template:
    get:
      tags:
      - Teller Cash Management
      summary: Find Cashiers
      operationId: getCashierTemplate
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersTemplateResponse'
  /tellers/{tellerId}/cashiers:
    get:
      tags:
      - Teller Cash Management
      summary: List Cashiers
      operationId: getCashierData_1
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: fromdate
        in: query
        description: fromdate
        schema:
          type: string
      - name: todate
        in: query
        description: todate
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersResponse'
    post:
      tags:
      - Teller Cash Management
      summary: Create Cashiers
      description: "Mandatory Fields: \nCashier/staff, Fromm Date, To Date, Full Day\
        \ or From time and To time\n\n\n\nOptional Fields: \nDescription/Notes"
      operationId: createCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersResponse'
  /tellers/{tellerId}/cashiers/{cashierId}:
    get:
      tags:
      - Teller Cash Management
      summary: Retrieve a cashier
      operationId: findCashierData
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashierIdResponse'
    put:
      tags:
      - Teller Cash Management
      summary: Update Cashier
      operationId: updateCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponse'
    delete:
      tags:
      - Teller Cash Management
      summary: Delete Cashier
      operationId: deleteCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTellersTellerIdCashiersCashierIdResponse'
  /tellers:
    get:
      tags:
      - Teller Cash Management
      summary: List all tellers
      description: Retrieves list tellers
      operationId: getTellerData
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTellersResponse'
    post:
      tags:
      - Teller Cash Management
      summary: Create teller
      description: "Mandatory Fields\nTeller name, OfficeId, Description, Start Date,\
        \ Status\nOptional Fields\nEnd Date"
      operationId: createTeller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersResponse'
  /tellers/{tellerId}:
    get:
      tags:
      - Teller Cash Management
      summary: Retrieve tellers
      operationId: findTeller
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersResponse'
    put:
      tags:
      - Teller Cash Management
      summary: Update teller
      operationId: updateTeller
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTellersRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTellersResponse'
    delete:
      tags:
      - Teller Cash Management
      operationId: deleteTeller
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions:
    get:
      tags:
      - Teller Cash Management
      summary: Transactions Wtih Summary For Cashier
      operationId: getTransactionsWtihSummaryForCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      - name: currencyCode
        in: query
        description: currencyCode
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse'
  /tellers/{tellerId}/cashiers/{cashierId}/transactions/template:
    get:
      tags:
      - Teller Cash Management
      summary: Retrieve Cashier Transaction Template
      operationId: getCashierTxnTemplate
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse'
  /tellers/{tellerId}/transactions:
    get:
      tags:
      - Teller Cash Management
      operationId: getTransactionData
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: dateRange
        in: query
        description: dateRange
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /tellers/{tellerId}/transactions/{transactionId}:
    get:
      tags:
      - Teller Cash Management
      operationId: findTransactionData
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /tellers/{tellerId}/journals:
    get:
      tags:
      - Teller Cash Management
      operationId: getJournalData
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: query
        description: cashierId
        schema:
          type: integer
          format: int64
      - name: dateRange
        in: query
        description: dateRange
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /tellers/{tellerId}/cashiers/{cashierId}/allocate:
    post:
      tags:
      - Teller Cash Management
      summary: Allocate Cash To Cashier
      description: "Mandatory Fields: \nDate, Amount, Currency, Notes/Comments"
      operationId: allocateCashToCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          text/html:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateResponse'
  /tellers/{tellerId}/cashiers/{cashierId}/settle:
    post:
      tags:
      - Teller Cash Management
      summary: Settle Cash From Cashier
      description: "Mandatory Fields\nDate, Amount, Currency, Notes/Comments"
      operationId: settleCashFromCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          text/html:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleResponse'
  /tellers/{tellerId}/cashiers/{cashierId}/transactions:
    get:
      tags:
      - Teller Cash Management
      summary: Retrieve Cashier Transaction
      operationId: getTransactionsForCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      - name: currencyCode
        in: query
        description: currencyCode
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsResponse'
  /cashiersjournal:
    get:
      tags:
      - Cashier Journals
      operationId: getJournalData_1
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: tellerId
        in: query
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateRange
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /workingdays/template:
    get:
      tags:
      - Working days
      summary: Working Days Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for working days.

        Example Request:

        workingdays/template
      operationId: template_4
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkingDaysTemplateResponse'
  /workingdays:
    get:
      tags:
      - Working days
      summary: List Working days
      description: |-
        Example Requests:

        workingdays
      operationId: retrieveAll_16
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetWorkingDaysResponse'
    put:
      tags:
      - Working days
      summary: Update a Working Day
      description: "Mandatory Fields\nrecurrence,repaymentRescheduleType,extendTermForDailyRepayments,locale"
      operationId: update_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutWorkingDaysRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutWorkingDaysResponse'
  /accounttransfers/{transferId}:
    get:
      tags:
      - Account Transfers
      summary: Retrieve account transfer
      description: |-
        Retrieves account transfer

        Example Requests :



        accounttransfers/1
      operationId: retrieveOne_8
      parameters:
      - name: transferId
        in: path
        description: transferId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransfersPageItems'
  /accounttransfers/templateRefundByTransfer:
    get:
      tags:
      - Account Transfers
      summary: Retrieve Refund of an Active Loan by Transfer Template
      description: |-
        Retrieves Refund of an Active Loan by Transfer TemplateExample Requests :



        accounttransfers/templateRefundByTransfer?fromAccountId=2&fromAccountType=1& toAccountId=1&toAccountType=2&toClientId=1&toOfficeId=1
      operationId: templateRefundByTransfer
      parameters:
      - name: fromOfficeId
        in: query
        description: fromOfficeId
        schema:
          type: integer
          format: int64
      - name: fromClientId
        in: query
        description: fromClientId
        schema:
          type: integer
          format: int64
      - name: fromAccountId
        in: query
        description: fromAccountId
        schema:
          type: integer
          format: int64
      - name: fromAccountType
        in: query
        description: fromAccountType
        schema:
          type: integer
          format: int32
      - name: toOfficeId
        in: query
        description: toOfficeId
        schema:
          type: integer
          format: int64
      - name: toClientId
        in: query
        description: toClientId
        schema:
          type: integer
          format: int64
      - name: toAccountId
        in: query
        description: toAccountId
        schema:
          type: integer
          format: int64
      - name: toAccountType
        in: query
        description: toAccountType
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferResponse'
  /accounttransfers/refundByTransfer:
    post:
      tags:
      - Account Transfers
      summary: Refund of an Active Loan by Transfer
      description: Ability to refund an active loan by transferring to a savings account.
      operationId: templateRefundByTransferPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountTransfersRefundByTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountTransfersRefundByTransferResponse'
  /accounttransfers/template:
    get:
      tags:
      - Account Transfers
      summary: Retrieve Account Transfer Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:



        Field Defaults

        Allowed Value Lists

        Example Requests:



        accounttransfers/template?fromAccountType=2&fromOfficeId=1



        accounttransfers/template?fromAccountType=2&fromOfficeId=1&fromClientId=1



        accounttransfers/template?fromClientId=1&fromAccountType=2&fromAccountId=1
      operationId: template_5
      parameters:
      - name: fromOfficeId
        in: query
        description: fromOfficeId
        schema:
          type: integer
          format: int64
      - name: fromClientId
        in: query
        description: fromClientId
        schema:
          type: integer
          format: int64
      - name: fromAccountId
        in: query
        description: fromAccountId
        schema:
          type: integer
          format: int64
      - name: fromAccountType
        in: query
        description: fromAccountType
        schema:
          type: integer
          format: int32
      - name: toOfficeId
        in: query
        description: toOfficeId
        schema:
          type: integer
          format: int64
      - name: toClientId
        in: query
        description: toClientId
        schema:
          type: integer
          format: int64
      - name: toAccountId
        in: query
        description: toAccountId
        schema:
          type: integer
          format: int64
      - name: toAccountType
        in: query
        description: toAccountType
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransfersTemplateResponse'
  /accounttransfers:
    get:
      tags:
      - Account Transfers
      summary: List account transfers
      description: |-
        Lists account's transfers

        Example Requests:



        accounttransfers
      operationId: retrieveAll_17
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
        example: limit
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: accountDetailId
        in: query
        description: accountDetailId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransfersResponse'
    post:
      tags:
      - Account Transfers
      summary: Create new Transfer
      description: Ability to create new transfer of monetary funds from one account
        to another.
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountTransfersRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountTransfersResponse'
  /standinginstructions/{standingInstructionId}:
    get:
      tags:
      - Standing Instructions
      summary: Retrieve Standing Instruction
      description: |-
        Example Requests :

        standinginstructions/1
      operationId: retrieveOne_9
      parameters:
      - name: standingInstructionId
        in: path
        description: standingInstructionId
        required: true
        schema:
          type: integer
          format: int64
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingInstructionsStandingInstructionIdResponse'
    put:
      tags:
      - Standing Instructions
      summary: Update Standing Instruction | Delete Standing Instruction
      description: |-
        Ability to modify existing instruction for transfer of monetary funds from one account to another.

        PUT https://DomainName/api/v1/standinginstructions/1?command=update


        Ability to modify existing instruction for transfer of monetary funds from one account to another.

        PUT https://DomainName/api/v1/standinginstructions/1?command=delete
      operationId: update_8
      parameters:
      - name: standingInstructionId
        in: path
        description: standingInstructionId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStandingInstructionsStandingInstructionIdRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutStandingInstructionsStandingInstructionIdResponse'
  /standinginstructions/template:
    get:
      tags:
      - Standing Instructions
      summary: Retrieve Standing Instruction Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Requests:

        standinginstructions/template?fromAccountType=2&fromOfficeId=1

        standinginstructions/template?fromAccountType=2&fromOfficeId=1&fromClientId=1&transferType=1

        standinginstructions/template?fromClientId=1&fromAccountType=2&fromAccountId=1&transferType=1
      operationId: template_6
      parameters:
      - name: fromOfficeId
        in: query
        description: fromOfficeId
        schema:
          type: integer
          format: int64
      - name: fromClientId
        in: query
        description: fromClientId
        schema:
          type: integer
          format: int64
      - name: fromAccountId
        in: query
        description: fromAccountId
        schema:
          type: integer
          format: int64
      - name: fromAccountType
        in: query
        description: fromAccountType
        schema:
          type: integer
          format: int32
      - name: toOfficeId
        in: query
        description: toOfficeId
        schema:
          type: integer
          format: int64
      - name: toClientId
        in: query
        description: toClientId
        schema:
          type: integer
          format: int64
      - name: toAccountId
        in: query
        description: toAccountId
        schema:
          type: integer
          format: int64
      - name: toAccountType
        in: query
        description: toAccountType
        schema:
          type: integer
          format: int32
      - name: transferType
        in: query
        description: transferType
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingInstructionsTemplateResponse'
  /standinginstructions:
    get:
      tags:
      - Standing Instructions
      summary: List Standing Instructions
      description: |-
        Example Requests:

        standinginstructions
      operationId: retrieveAll_18
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: transferType
        in: query
        description: transferType
        schema:
          type: integer
          format: int32
      - name: clientName
        in: query
        description: clientName
        schema:
          type: string
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int64
      - name: fromAccountId
        in: query
        description: fromAccountId
        schema:
          type: integer
          format: int64
      - name: fromAccountType
        in: query
        description: fromAccountType
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingInstructionsResponse'
    post:
      tags:
      - Standing Instructions
      summary: Create new Standing Instruction
      description: Ability to create new instruction for transfer of monetary funds
        from one account to another
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostStandingInstructionsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostStandingInstructionsResponse'
  /standinginstructionrunhistory:
    get:
      tags:
      - Standing Instructions History
      summary: Standing Instructions Logged History
      description: "The list capability of history can support pagination and sorting\
        \ \n\nExample Requests :\n\nstandinginstructionrunhistory\n\nstandinginstructionrunhistory?orderBy=name&sortOrder=DESC\n\
        \nstandinginstructionrunhistory?offset=10&limit=50"
      operationId: retrieveAll_19
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: transferType
        in: query
        description: transferType
        schema:
          type: integer
          format: int32
      - name: clientName
        in: query
        description: clientName
        schema:
          type: string
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int64
      - name: fromAccountId
        in: query
        description: fromAccountId
        schema:
          type: integer
          format: int64
      - name: fromAccountType
        in: query
        description: fromAccountType
        schema:
          type: integer
          format: int32
      - name: locale
        in: query
        description: locale
        schema:
          type: string
      - name: dateFormat
        in: query
        description: dateFormat
        schema:
          type: string
      - name: fromDate
        in: query
        description: fromDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: toDate
        in: query
        description: toDate
        schema:
          $ref: '#/components/schemas/DateParam'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingInstructionRunHistoryResponse'
  /accounts/{type}/downloadtemplate:
    get:
      tags:
      - Share Account
      operationId: getSharedAccountsTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /accounts/{type}/uploadtemplate:
    post:
      tags:
      - Share Account
      operationId: postSharedAccountsTemplate
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /accounts/{type}:
    get:
      tags:
      - Share Account
      summary: List share applications/accounts
      description: |-
        Lists share applications/accounts

        Example Requests:

        shareaccount
      operationId: retrieveAllAccounts_1
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsTypeResponse'
    post:
      tags:
      - Share Account
      summary: Submit new share application
      description: "Submits new share application\n\nMandatory Fields: clientId, productId,\
        \ submittedDate, savingsAccountId, requestedShares, applicationDate\n\nOptional\
        \ Fields: accountNo, externalId\n\nInherited from Product (if not provided):\
        \ minimumActivePeriod, minimumActivePeriodFrequencyType, lockinPeriodFrequency,\
        \ lockinPeriodFrequencyType"
      operationId: createAccount
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountsTypeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountsTypeResponse'
  /accounts/{type}/{accountId}:
    get:
      tags:
      - Share Account
      summary: Retrieve a share application/account
      description: |-
        Retrieves a share application/account

        Example Requests :

        shareaccount/1
      operationId: retrieveAccount
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsTypeAccountIdResponse'
    put:
      tags:
      - Share Account
      summary: Modify a share application
      description: "Share application can only be modified when in 'Submitted and\
        \ pending approval' state. Once the application is approved, the details cannot\
        \ be changed using this method. Specific api endpoints will be created to\
        \ allow change of interest detail such as rate, compounding period, posting\
        \ period etc"
      operationId: updateAccount
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountsTypeAccountIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountsTypeAccountIdResponse'
    post:
      tags:
      - Share Account
      summary: Approve share application | Undo approval share application | Reject
        share application | Activate a share account | Close a share account | Apply
        additional shares on a share account | Approve additional shares request on
        a share account | Reject additional shares request on a share account | Redeem
        shares on a share account
      description: "Approve share application:\n\nApproves share application so long\
        \ as its in 'Submitted and pending approval' state.\n\nUndo approval share\
        \ application:\n\nWill move 'approved' share application back to 'Submitted\
        \ and pending approval' state.\n\nReject share application:\n\nRejects share\
        \ application so long as its in 'Submitted and pending approval' state.\n\n\
        Activate a share account:\n\nResults in an approved share application being\
        \ converted into an 'active' share account.\n\nClose a share account:\n\n\
        Results in an Activated share application being converted into an 'closed'\
        \ share account.\n\nclosedDate is closure date of share account\n\nMandatory\
        \ Fields: dateFormat,locale,closedDate\n\nApply additional shares on a share\
        \ account:\n\nrequestedDate is requsted date of share purchase\n\nrequestedShares\
        \ is number of shares to be purchase\n\nMandatory Fields: dateFormat,locale,requestedDate,\
        \ requestedShares\n\nApprove additional shares request on a share account\n\
        \nrequestedShares is Share purchase transaction ids\n\nMandatory Fields: requestedShares\n\
        \nReject additional shares request on a share account:\n\nrequestedShares\
        \ is Share purchase transaction ids\n\nMandatory Fields: requestedShares\n\
        \nRedeem shares on a share account:\n\nResults redeem some/all shares from\
        \ share account.\n\nrequestedDate is requsted date of shares redeem\n\nrequestedShares\
        \ is number of shares to be redeemed\n\nMandatory Fields: dateFormat,locale,requestedDate,requestedShares\n\
        \nShowing request/response for 'Reject additional shares request on a share\
        \ account'\n\nFor more info visit this link - https://demo.fineract.dev/fineract-provider/api-docs/apiLive.htm#shareaccounts"
      operationId: handleCommands_2
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountsTypeAccountIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountsTypeAccountIdResponse'
  /accounts/{type}/template:
    get:
      tags:
      - Share Account
      summary: Retrieve Share Account Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Requests:

        accounts/share/template?clientId=1


        accounts/share/template?clientId=1&productId=1
      operationId: template_7
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsTypeTemplateResponse'
  /fieldconfiguration/{entity}:
    get:
      tags:
      - Entity Field Configuration
      summary: Retrieves the Entity Field Configuration
      description: It retrieves all the Entity Field Configuration
      operationId: getAddresses
      parameters:
      - name: entity
        in: path
        description: entity
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFieldConfigurationEntityResponse'
  /{entityType}/{entityId}/calendars/{calendarId}:
    get:
      operationId: retrieveCalendar
      parameters:
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateCalendar
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: deleteCalendar
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /{entityType}/{entityId}/calendars:
    get:
      operationId: retrieveCalendarsByEntity
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarType
        in: query
        schema:
          type: string
          default: all
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: createCalendar
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /{entityType}/{entityId}/calendars/template:
    get:
      operationId: retrieveNewCalendarDetails
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /charges/{chargeId}:
    get:
      tags:
      - Charges
      summary: Retrieve a Charge
      description: |-
        Returns the details of a defined Charge.

        Example Requests:

        charges/1
      operationId: retrieveCharge
      parameters:
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChargesResponse'
    put:
      tags:
      - Charges
      summary: Update a Charge
      description: Updates the details of a Charge.
      operationId: updateCharge
      parameters:
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChargesChargeIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChargesChargeIdResponse'
    delete:
      tags:
      - Charges
      summary: Delete a Charge
      description: Deletes a Charge.
      operationId: deleteCharge
      parameters:
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChargesChargeIdResponse'
  /charges:
    get:
      tags:
      - Charges
      summary: Retrieve Charges
      description: |-
        Returns the list of defined charges.

        Example Requests:

        charges
      operationId: retrieveAllCharges
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetChargesResponse'
    post:
      tags:
      - Charges
      summary: Create/Define a Charge
      description: Define a new charge that can later be associated with loans and
        savings through their respective product definitions or directly on each account
        instance.
      operationId: createCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChargesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostChargesResponse'
  /charges/template:
    get:
      tags:
      - Charges
      summary: Retrieve Charge Template
      description: |
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        charges/template
      operationId: retrieveNewChargeDetails
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChargesTemplateResponse'
  /client/{clientid}/addresses:
    get:
      tags:
      - Clients Address
      summary: List all addresses for a Client
      description: "Example Requests:\n\nclient/1/addresses\n\n\nclients/1/addresses?status=false,true&&type=1,2,3"
      operationId: getAddresses_1
      parameters:
      - name: status
        in: query
        description: status
        schema:
          type: string
      - name: type
        in: query
        description: type
        schema:
          type: integer
          format: int64
      - name: clientid
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetClientClientIdAddressesResponse'
    put:
      tags:
      - Clients Address
      summary: Update an address for a Client
      description: |-
        All the address fields can be updated by using update client address API

        Mandatory Fields
        type and addressId
      operationId: updateClientAddress
      parameters:
      - name: clientid
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClientClientIdAddressesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClientClientIdAddressesResponse'
    post:
      tags:
      - Clients Address
      summary: Create an address for a Client
      description: "Mandatory Fields : \ntype and clientId"
      operationId: addClientAddress
      parameters:
      - name: type
        in: query
        description: type
        schema:
          type: integer
          format: int64
      - name: clientid
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientClientIdAddressesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientClientIdAddressesResponse'
  /client/addresses/template:
    get:
      tags:
      - Clients Address
      operationId: getAddressesTemplate
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /clients/{clientId}/charges/template:
    get:
      tags:
      - Client Charges
      operationId: retrieveTemplate_4
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /clients/{clientId}/charges/{chargeId}:
    get:
      tags:
      - Client Charges
      summary: Retrieve a Client Charge
      description: "Example Requests:\nclients/1/charges/1\n\n\nclients/1/charges/1?fields=name,id"
      operationId: retrieveClientCharge
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsChargesPageItems'
    post:
      tags:
      - Client Charges
      summary: Pay a Client Charge | Waive a Client Charge
      description: |-
        Pay a Client Charge:

        Mandatory Fields:transactionDate and amount "Pay either a part of or the entire due amount for a charge.(command=paycharge)

        Waive a Client Charge:


        This API provides the facility of waiving off the remaining amount on a client charge (command=waive)

        Showing request/response for 'Pay a Client Charge'
      operationId: payOrWaiveClientCharge
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdChargesChargeIdResponse'
    delete:
      tags:
      - Client Charges
      summary: Delete a Client Charge
      description: 'Deletes a Client Charge on which no transactions have taken place
        (either payments or waivers). '
      operationId: deleteClientCharge
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClientsClientIdChargesChargeIdResponse'
  /clients/{clientId}/charges:
    get:
      tags:
      - Client Charges
      summary: List Client Charges
      description: |-
        The list capability of client charges supports pagination.Example Requests:
        clients/1/charges

        clients/1/charges?offset=0&limit=5
      operationId: retrieveAllClientCharges
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeStatus
        in: query
        description: chargeStatus
        schema:
          type: string
          default: all
      - name: pendingPayment
        in: query
        description: pendingPayment
        schema:
          type: boolean
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdChargesResponse'
    post:
      tags:
      - Client Charges
      summary: Add Client Charge
      description: " This API associates a Client charge with an implicit Client account\n\
        Mandatory Fields : \nchargeId and dueDate  \nOptional Fields : \namount"
      operationId: applyClientCharge
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdChargesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdChargesResponse'
  /clients/{clientId}/familymembers/{familyMemberId}:
    get:
      operationId: getFamilyMember
      parameters:
      - name: familyMemberId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateClientFamilyMembers
      parameters:
      - name: familyMemberId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: deleteClientFamilyMembers
      parameters:
      - name: familyMemberId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /clients/{clientId}/familymembers:
    get:
      operationId: getFamilyMembers
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: addClientFamilyMembers
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /clients/{clientId}/familymembers/template:
    get:
      operationId: getTemplate_1
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /clients/{clientId}/identifiers/{identifierId}:
    get:
      tags:
      - Client Identifier
      summary: Retrieve a Client Identifier
      description: "Example Requests:\nclients/1/identifier/2\n\n\nclients/1/identifier/2?template=true\n\
        \nclients/1/identifiers/2?fields=documentKey,documentType,description"
      operationId: retrieveClientIdentifiers
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: identifierId
        in: path
        description: identifierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdIdentifiersResponse'
    put:
      tags:
      - Client Identifier
      summary: Update a Client Identifier
      description: Updates a Client Identifier
      operationId: updateClientIdentifer
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: identifierId
        in: path
        description: identifierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClientsClientIdIdentifiersIdentifierIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClientsClientIdIdentifiersIdentifierIdResponse'
    delete:
      tags:
      - Client Identifier
      summary: Delete a Client Identifier
      description: Deletes a Client Identifier
      operationId: deleteClientIdentifier
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: identifierId
        in: path
        description: identifierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClientsClientIdIdentifiersIdentifierIdResponse'
  /clients/{clientId}/identifiers:
    get:
      tags:
      - Client Identifier
      summary: List all Identifiers for a Client
      description: "Example Requests:\nclients/1/identifiers\n\n\nclients/1/identifiers?fields=documentKey,documentType,description"
      operationId: retrieveAllClientIdentifiers
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetClientsClientIdIdentifiersResponse'
    post:
      tags:
      - Client Identifier
      summary: Create an Identifier for a Client
      description: "Mandatory Fields\ndocumentKey, documentTypeId "
      operationId: createClientIdentifier
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdIdentifiersRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdIdentifiersResponse'
  /clients/{clientId}/identifiers/template:
    get:
      tags:
      - Client Identifier
      summary: Retrieve Client Identifier Details Template
      description: |-
        This is a convenience resource useful for building maintenance user interface screens for client applications. The template data returned consists of any or all of:

         Field Defaults
         Allowed description Lists


        Example Request:
        clients/1/identifiers/template
      operationId: newClientIdentifierDetails
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdIdentifiersTemplateResponse'
  /clients/{clientId}/transactions/{transactionId}:
    get:
      tags:
      - Client Transaction
      summary: Retrieve a Client Transaction
      description: "Example Requests:\nclients/1/transactions/1\n\n\nclients/1/transactions/1?fields=id,officeName"
      operationId: retrieveClientTransaction
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdTransactionsTransactionIdResponse'
    post:
      tags:
      - Client Transaction
      summary: Undo a Client Transaction
      description: Undoes a Client Transaction
      operationId: undoClientTransaction
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdTransactionsTransactionIdResponse'
  /clients/{clientId}/transactions:
    get:
      tags:
      - Client Transaction
      summary: List Client Transactions
      description: |-
        The list capability of client transaction can support pagination.

        Example Requests:

        clients/189/transactions

        clients/189/transactions?offset=10&limit=50
      operationId: retrieveAllClientTransactions
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdTransactionsResponse'
  /clients/template:
    get:
      tags:
      - Client
      summary: Retrieve Client Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Request:

        clients/template
      operationId: retrieveTemplate_5
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: commandParam
        in: query
        description: commandParam
        schema:
          type: string
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsTemplateResponse'
  /clients/{clientId}:
    get:
      tags:
      - Client
      summary: Retrieve a Client
      description: "Example Requests:\n\nclients/1\n\n\nclients/1?template=true\n\n\
        \nclients/1?fields=id,displayName,officeName"
      operationId: retrieveOne_10
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdResponse'
    put:
      tags:
      - Client
      summary: Update a Client
      description: "Note: You can update any of the basic attributes of a client (but\
        \ not its associations) using this API.\n\nChanging the relationship between\
        \ a client and its office is not supported through this API. An API specific\
        \ to handling transfers of clients between offices is available for the same.\n\
        \nThe relationship between a client and a group must be removed through the\
        \ Groups API."
      operationId: update_9
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutClientsClientIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClientsClientIdResponse'
    post:
      tags:
      - Client
      summary: Activate a Client | Close a Client | Reject a Client | Withdraw a Client
        | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client | Assign
        a Staff | Unassign a Staff | Update Default Savings Account | Propose a Client
        Transfer | Withdraw a Client Transfer | Reject a Client Transfer | Accept
        a Client Transfer | Propose and Accept a Client Transfer
      description: "Activate a Client:\n\nClients can be created in a Pending state.\
        \ This API exists to enable client activation (for when a client becomes an\
        \ approved member of the financial Institution).\n\nIf the client happens\
        \ to be already active this API will result in an error.\n\nClose a Client:\n\
        \nClients can be closed if they do not have any non-closed loans/savingsAccount.\
        \ This API exists to close a client .\n\nIf the client have any active loans/savingsAccount\
        \ this API will result in an error.\n\nReject a Client:\n\nClients can be\
        \ rejected when client is in pending for activation status.\n\nIf the client\
        \ is any other status, this API throws an error.\n\nMandatory Fields: rejectionDate,\
        \ rejectionReasonId\n\nWithdraw a Client:\n\nClient applications can be withdrawn\
        \ when client is in a pending for activation status.\n\nIf the client is any\
        \ other status, this API throws an error.\n\nMandatory Fields: withdrawalDate,\
        \ withdrawalReasonId\n\nReactivate a Client: Clients can be reactivated after\
        \ they have been closed.\n\nTrying to reactivate a client in any other state\
        \ throws an error.\n\nMandatory Fields: reactivationDate\n\nUndoReject a Client:\n\
        \nClients can be reactivated after they have been rejected.\n\nTrying to reactivate\
        \ a client in any other state throws an error.\n\nMandatory Fields: reopenedDateUndoWithdraw\
        \ a Client:\n\nClients can be reactivated after they have been withdrawn.\n\
        \nTrying to reactivate a client in any other state throws an error.\n\nMandatory\
        \ Fields: reopenedDate\n\nAssign a Staff:\n\nAllows you to assign a Staff\
        \ for existed Client.\n\nThe selected Staff should belong to the same office\
        \ (or an officer higher up in the hierarchy) as the Client he manages.\n\n\
        Unassign a Staff:\n\nAllows you to unassign the Staff assigned to a Client.\n\
        \nUpdate Default Savings Account:\n\nAllows you to modify or assign a default\
        \ savings account for an existing Client.\n\nThe selected savings account\
        \ should be one among the existing savings account for a particular customer.\n\
        \nPropose a Client Transfer:\n\nAllows you to propose the transfer of a Client\
        \ to a different Office.\n\nWithdraw a Client Transfer:\n\nAllows you to withdraw\
        \ the proposed transfer of a Client to a different Office.\n\nWithdrawal can\
        \ happen only if the destination Branch (to which the transfer was proposed)\
        \ has not already accepted the transfer proposal\n\nReject a Client Transfer:\n\
        \nAllows the Destination Branch to reject the proposed Client Transfer.\n\n\
        Accept a Client Transfer:\n\nAllows the Destination Branch to accept the proposed\
        \ Client Transfer.\n\nThe destination branch may also choose to link this\
        \ client to a group (in which case, any existing active JLG loan of the client\
        \ is rescheduled to match the meeting frequency of the group) and loan Officer\
        \ at the time of accepting the transfer\n\nPropose and Accept a Client Transfer:\n\
        \nAbstraction over the Propose and Accept Client Transfer API's which enable\
        \ a user with Data Scope over both the Target and Destination Branches to\
        \ directly transfer a Client to the destination Office.\n\nShowing request/response\
        \ for 'Reject a Client Transfer'"
      operationId: activate_1
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsClientIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsClientIdResponse'
    delete:
      tags:
      - Client
      summary: Delete a Client
      description: "If a client is in Pending state, you are allowed to Delete it.\
        \ The delete is a 'hard delete' and cannot be recovered from. Once clients\
        \ become active or have loans or savings associated with them, you cannot\
        \ delete the client but you may Close the client if they have left the program."
      operationId: delete_9
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClientsClientIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClientsClientIdResponse'
  /clients/{clientId}/accounts:
    get:
      tags:
      - Client
      summary: Retrieve client accounts overview
      description: "An example of how a loan portfolio summary can be provided. This\
        \ is requested in a specific use case of the community application.\nIt is\
        \ quite reasonable to add resources like this to simplify User Interface development.\n\
        \nExample Requests:\n \nclients/1/accounts\n\nclients/1/accounts?fields=loanAccounts,savingsAccounts"
      operationId: retrieveAssociatedAccounts
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsClientIdAccountsResponse'
        "400":
          description: Bad Request
  /clients/downloadtemplate:
    get:
      tags:
      - Client
      operationId: getClientTemplate
      parameters:
      - name: legalFormType
        in: query
        schema:
          type: string
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /clients/uploadtemplate:
    post:
      tags:
      - Client
      operationId: postClientTemplate
      parameters:
      - name: legalFormType
        in: query
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /clients/{clientId}/obligeedetails:
    get:
      tags:
      - Client
      operationId: retrieveObligeeDetails
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /clients/{clientId}/transferproposaldate:
    get:
      tags:
      - Client
      operationId: retrieveTransferTemplate
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /clients:
    get:
      tags:
      - Client
      summary: List Clients
      description: "The list capability of clients can support pagination and sorting.\n\
        \nExample Requests:\n\nclients\n\nclients?fields=displayName,officeName,timeline\n\
        \nclients?offset=10&limit=50\n\nclients?orderBy=displayName&sortOrder=DESC"
      operationId: retrieveAll_20
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: displayName
        in: query
        description: displayName
        schema:
          type: string
      - name: firstName
        in: query
        description: firstName
        schema:
          type: string
      - name: lastName
        in: query
        description: lastName
        schema:
          type: string
      - name: status
        in: query
        description: status
        schema:
          type: string
      - name: underHierarchy
        in: query
        description: underHierarchy
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: orphansOnly
        in: query
        description: orphansOnly
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClientsResponse'
    post:
      tags:
      - Client
      summary: Create a Client
      description: "Note:\n\n1. You can enter either:firstname/middlename/lastname\
        \ - for a person (middlename is optional) OR fullname - for a business or\
        \ organisation (or person known by one name).\n\n2.If address is enable(enable-address=true),\
        \ then additional field called address has to be passed.\n\nMandatory Fields:\
        \ firstname and lastname OR fullname, officeId, active=true and activationDate\
        \ OR active=false, if(address enabled) address\n\nOptional Fields: groupId,\
        \ externalId, accountNo, staffId, mobileNo, savingsProductId, genderId, clientTypeId,\
        \ clientClassificationId"
      operationId: create_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClientsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClientsResponse'
  /loans/{loanId}/collaterals/template:
    get:
      tags:
      - Loan Collateral
      summary: Retrieve Collateral Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        loans/1/collaterals/template
      operationId: newCollateralTemplate
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdCollateralsTemplateResponse'
  /loans/{loanId}/collaterals:
    get:
      tags:
      - Loan Collateral
      summary: List Loan Collaterals
      description: "Example Requests:\n\nloans/1/collaterals\n\n\nloans/1/collaterals?fields=value,description"
      operationId: retrieveCollateralDetails
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoansLoanIdCollateralsResponse'
    post:
      tags:
      - Loan Collateral
      summary: Create a Collateral
      description: "Note: Currently, Collaterals may be added only before a Loan is\
        \ approved"
      operationId: createCollateral
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdCollateralsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdCollateralsResponse'
  /loans/{loanId}/collaterals/{collateralId}:
    get:
      tags:
      - Loan Collateral
      summary: Retrieve a Collateral
      description: "Example Requests:\n\n/loans/1/collaterals/1\n\n\n/loans/1/collaterals/1?fields=description,description"
      operationId: retrieveCollateralDetails_1
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: collateralId
        in: path
        description: collateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdCollateralsResponse'
    put:
      tags:
      - Loan Collateral
      summary: Update a Collateral
      operationId: updateCollateral
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: collateralId
        in: path
        description: collateralId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoandIdCollateralsCollateralIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdCollateralsCollateralIdResponse'
    delete:
      tags:
      - Loan Collateral
      summary: Remove a Collateral
      description: "Note: A collateral can only be removed from Loans that are not\
        \ yet approved."
      operationId: deleteCollateral
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: collateralId
        in: path
        description: collateralId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdCollateralsCollateralIdResponse'
  /collectionsheet:
    post:
      summary: Generate Individual Collection Sheet | Save Collection Sheet
      description: |-
        Generate Individual Collection Sheet:

        This Api retrieves repayment details of all individual loans under a office as on a specified meeting date.

        Save Collection Sheet:

        This Api allows the loan officer to perform bulk repayments of individual loans and deposit of mandatory savings on a given meeting date.
      operationId: generateCollectionSheet
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCollectionSheetRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCollectionSheetResponse'
  /floatingrates/{floatingRateId}:
    get:
      tags:
      - Floating Rates
      summary: Retrieve Floating Rate
      description: Retrieves Floating Rate
      operationId: retrieveOne_11
      parameters:
      - name: floatingRateId
        in: path
        description: floatingRateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFloatingRatesFloatingRateIdResponse'
    put:
      tags:
      - Floating Rates
      summary: Update Floating Rate
      description: Updates new Floating Rate. Rate Periods in the past cannot be modified.
        All the future rateperiods would be replaced with the new ratePeriods data
        sent.
      operationId: updateFloatingRate
      parameters:
      - name: floatingRateId
        in: path
        description: floatingRateId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFloatingRatesFloatingRateIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFloatingRatesFloatingRateIdResponse'
  /floatingrates:
    get:
      tags:
      - Floating Rates
      summary: List Floating Rates
      description: Lists Floating Rates
      operationId: retrieveAll_21
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFloatingRatesResponse'
    post:
      tags:
      - Floating Rates
      summary: Create a new Floating Rate
      description: "Creates a new Floating Rate\nMandatory Fields: name\nOptional\
        \ Fields: isBaseLendingRate, isActive, ratePeriods"
      operationId: createFloatingRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFloatingRatesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFloatingRatesResponse'
  /funds/{fundId}:
    get:
      summary: Retrieve a Fund
      description: |-
        Returns the details of a Fund.

        Example Requests:

        funds/1
      operationId: retreiveFund
      parameters:
      - name: fundId
        in: path
        description: fundId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFundsResponse'
    put:
      summary: Update a Fund
      description: Updates the details of a fund.
      operationId: updateFund
      parameters:
      - name: fundId
        in: path
        description: fundId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFundsFundIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFundsFundIdResponse'
  /funds:
    get:
      summary: Retrieve Funds
      description: |-
        Returns the list of funds.

        Example Requests:

        funds
      operationId: retrieveFunds
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFundsResponse'
    post:
      summary: Create a Fund
      description: Creates a Fund
      operationId: createFund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFundsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFundsResponse'
  /centers/template:
    get:
      tags:
      - Centers
      summary: Retrieve a Center Template
      description: |-
        Retrieves a Center Template

        Example Requests:



        centers/template



        centers/template?officeId=2
      operationId: retrieveTemplate_6
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCentersTemplateResponse'
  /centers/{centerId}:
    get:
      tags:
      - Centers
      summary: Retrieve a Center
      description: |-
        Retrieves a Center

        Example Requests:



        centers/1



        centers/1?associations=groupMembers
      operationId: retrieveOne_12
      parameters:
      - name: centerId
        in: path
        description: centerId
        required: true
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCentersCenterIdResponse'
    put:
      tags:
      - Centers
      summary: Update a Center
      description: Updates a Center
      operationId: update_10
      parameters:
      - name: centerId
        in: path
        description: centerId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCentersCenterIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCentersCenterIdResponse'
    post:
      tags:
      - Centers
      summary: Activate a Center | Generate Collection Sheet | Save Collection Sheet
        | Close a Center | Associate Groups | Disassociate Groups
      description: "Activate a Center:\n\nCenters can be created in a Pending state.\
        \ This API exists to enable center activation. If the center happens to be\
        \ already active, this API will result in an error.\n\nClose a Center:\n\n\
        Centers can be closed if they don't have any non-closed groups or saving accounts.\
        \ If the Center has any active groups or savings accounts, this API will result\
        \ in an error.\n\nAssociate Groups:\n\nThis API allows associating existing\
        \ groups to a center. The groups are listed from the office to which the center\
        \ is associated. If group(s) is already associated with a center, this API\
        \ will result in an error.\n\nDisassociate Groups:\n\nThis API allows to disassociate\
        \ groups from a center.\n\nGenerate Collection Sheet:\n\nThis Api retrieves\
        \ repayment details of all jlg loans under a center as on a specified meeting\
        \ date.\n\nSave Collection Sheet:\n\nThis Api allows the loan officer to perform\
        \ bulk repayments of JLG loans for a center on a given meeting date.\n\nShowing\
        \ Request/Response for Close a Center"
      operationId: activate_2
      parameters:
      - name: centerId
        in: path
        description: centerId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCentersCenterIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCentersCenterIdResponse'
    delete:
      tags:
      - Centers
      summary: Delete a Center
      description: "A Center can be deleted if it is in pending state and has no association\
        \ - groups, loans or savings"
      operationId: delete_10
      parameters:
      - name: centerId
        in: path
        description: centerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCentersCenterIdResponse'
  /centers/downloadtemplate:
    get:
      tags:
      - Centers
      operationId: getCentersTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /centers/uploadtemplate:
    post:
      tags:
      - Centers
      operationId: postCentersTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /centers/{centerId}/accounts:
    get:
      tags:
      - Centers
      summary: Retrieve Center accounts overview
      description: |-
        An example of how a savings summary for a Center can be provided. This is requested in a specific use case of the reference application.

        It is quite reasonable to add resources like this to simplify User Interface development.



        Example Requests:



        centers/9/accounts
      operationId: retrieveGroupAccount
      parameters:
      - name: centerId
        in: path
        description: centerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCentersCenterIdAccountsResponse'
  /centers:
    get:
      tags:
      - Centers
      summary: List Centers
      description: "The default implementation supports pagination and sorting with\
        \ the default pagination size set to 200 records. The parameter limit with\
        \ description -1 will return all entries.\n\nExample Requests:\n\n\n\ncenters\n\
        \n\n\ncenters?fields=name,officeName,joinedDate\n\n\n\ncenters?offset=10&limit=50\n\
        \n\n\ncenters?orderBy=name&sortOrder=DESC"
      operationId: retrieveAll_22
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        description: staffId
        schema:
          type: integer
          format: int64
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: name
        in: query
        description: name
        schema:
          type: string
      - name: underHierarchy
        in: query
        description: underHierarchy
        schema:
          type: string
      - name: paged
        in: query
        description: paged
        schema:
          type: boolean
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: meetingDate
        in: query
        description: meetingDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: dateFormat
        in: query
        description: dateFormat
        schema:
          type: string
      - name: locale
        in: query
        description: locale
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCentersResponse'
    post:
      tags:
      - Centers
      summary: Create a Center
      description: "Creates a Center\n\nMandatory Fields: name, officeId, active,\
        \ activationDate (if active=true)\n\nOptional Fields: externalId, staffId,\
        \ groupMembers"
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCentersRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCentersResponse'
  /groups/template:
    get:
      tags:
      - Groups
      summary: Retrieve Group Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:



        Field Defaults

        Allowed Value Lists

        Example Requests:



        groups/template



        groups/template?officeId=2



        groups/template?centerId=1



        groups/template?centerId=1&staffInSelectedOfficeOnly=true
      operationId: retrieveTemplate_7
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: center
        in: query
        description: center
        schema:
          type: boolean
      - name: centerId
        in: query
        description: centerId
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsTemplateResponse'
  /groups/{groupId}:
    get:
      tags:
      - Groups
      summary: Retrieve a Group
      description: |-
        Retrieve group information.

        Example Requests:



        groups/1



        groups/1?associations=clientMembers
      operationId: retrieveOne_13
      parameters:
      - name: groupId
        in: path
        description: groupId
        required: true
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - name: roleId
        in: query
        description: roleId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsGroupIdResponse'
    put:
      tags:
      - Groups
      summary: Update a Group
      description: Updates a Group
      operationId: update_11
      parameters:
      - name: groupId
        in: path
        description: groupId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGroupsGroupIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGroupsGroupIdResponse'
    post:
      tags:
      - Groups
      summary: Activate a Group | Associate Clients | Disassociate Clients | Transfer
        Clients across groups | Generate Collection Sheet | Save Collection Sheet
        | Unassign a Staff | Assign a Staff | Close a Group | Unassign a Role | Update
        a Role
      description: "Activate a Group:\n\nGroups can be created in a Pending state.\
        \ This API exists to enable group activation.\n\n\n\nIf the group happens\
        \ to be already active this API will result in an error.\n\nMandatory Fields:\
        \ activationDate\n\nAssociate Clients:\n\nThis API allows to associate existing\
        \ clients to a group.\n\n\n\nThe clients are listed from the office to which\
        \ the group is associated.\n\n\n\nIf client(s) is already associated with\
        \ group then API will result in an error.\n\nMandatory Fields: clientMembers\n\
        \nDisassociate Clients:\n\nThis API allows to disassociate clients from a\
        \ group.\n\n\n\nDisassociating a client with active joint liability group\
        \ loans results in an error.\n\nMandatory Fields: clientMembers\n\nTransfer\
        \ Clients across groups:\n\nThis API allows to transfer clients from one group\
        \ to another\n\nMandatory Fields: destinationGroupId and clients\n\nOptional\
        \ Fields: inheritDestinationGroupLoanOfficer (defaults to true) and transferActiveLoans\
        \ (defaults to true)\n\nGenerate Collection Sheet:\n\nThis API retrieves repayment\
        \ details of all jlg loans of all members of a group on a specified meeting\
        \ date.\n\nMandatory Fields: calendarId and transactionDate\n\nSave Collection\
        \ Sheet:\n\nThis api allows the loan officer to perform bulk repayments of\
        \ JLG loans for a group on its meeting date.\n\nMandatory Fields: calendarId,\
        \ transactionDate, actualDisbursementDate\n\nOptional Fields: clientsAttendance,\
        \ bulkRepaymentTransaction, bulkDisbursementTransactions\n\nUnassign a Staff:\n\
        \nAllows you to unassign the Staff.\n\nMandatory Fields: staffId\n\nAssign\
        \ a Staff:\n\nAllows you to assign Staff to an existing Group.\n\n\n\nThe\
        \ selected Staff should be belong to the same office (or an office higher\
        \ up in the hierarchy) as this groupMandatory Fields: staffId\n\nOptional\
        \ Fields: inheritStaffForClientAccounts (Optional: Boolean if true all members\
        \ of the group (i.e all clients with active loans and savings ) will inherit\
        \ the staffId)\n\nClose a Group:\n\nThis API exists to close a group. Groups\
        \ can be closed if they don't have any non-closed clients/loans/savingsAccounts.\n\
        \n\n\nIf the group has any active clients/loans/savingsAccount, this API will\
        \ result in an error.Assign a Role:\n\nAllows you to assign a Role to an existing\
        \ member of a group.\n\n\n\nWe can define the different roles applicable to\
        \ group members by adding code values to the pre-defined system code GROUPROLE.\
        \ Example:Group leader etc.\n\nMandatory Fields: clientId, role\n\nUnassign\
        \ a Role:\n\nAllows you to unassign Roles associated tp Group members.\n\n\
        Update a Role:\n\nAllows you to update the member Role.\n\nMandatory Fields:\
        \ role\n\nShowing request/response for Transfer Clients across groups"
      operationId: activateOrGenerateCollectionSheet
      parameters:
      - name: groupId
        in: path
        description: groupId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      - name: roleId
        in: query
        description: roleId
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGroupsGroupIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGroupsGroupIdResponse'
    delete:
      tags:
      - Groups
      summary: Delete a Group
      description: "A group can be deleted if it is in pending state and has no associations\
        \ - clients, loans or savings"
      operationId: delete_11
      parameters:
      - name: groupId
        in: path
        description: groupId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupsGroupIdResponse'
  /groups/{groupId}/command/unassign_staff:
    post:
      tags:
      - Groups
      summary: Unassign a Staff
      description: "Allows you to unassign the Staff.\n\nMandatory Fields: staffId"
      operationId: unassignLoanOfficer
      parameters:
      - name: groupId
        in: path
        description: groupId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGroupsGroupIdCommandUnassignStaffRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGroupsGroupIdCommandUnassignStaffResponse'
  /groups/{groupId}/accounts:
    get:
      tags:
      - Groups
      summary: Retrieve Group accounts overview
      description: "Retrieves details of all Loan and Savings accounts associated\
        \ with this group.\n\n\n\nExample Requests:\n\n\n\ngroups/1/accounts\n\n\n\
        \n\n\ngroups/1/accounts?fields=loanAccounts,savingsAccounts,memberLoanAccounts,\n\
        \nmemberSavingsAccounts"
      operationId: retrieveAccounts
      parameters:
      - name: groupId
        in: path
        description: groupId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsGroupIdAccountsResponse'
  /groups/downloadtemplate:
    get:
      tags:
      - Groups
      operationId: getGroupsTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /groups/uploadtemplate:
    post:
      tags:
      - Groups
      operationId: postGroupTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /groups/{groupId}/glimaccounts:
    get:
      tags:
      - Groups
      operationId: retrieveglimAccounts
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: parentLoanAccountNo
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /groups/{groupId}/gsimaccounts:
    get:
      tags:
      - Groups
      operationId: retrieveGsimAccounts
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: parentGSIMAccountNo
        in: query
        schema:
          type: string
      - name: parentGSIMId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /groups:
    get:
      tags:
      - Groups
      summary: List Groups
      description: "The default implementation of listing Groups returns 200 entries\
        \ with support for pagination and sorting. Using the parameter limit with\
        \ description -1 returns all entries.\n\nExample Requests:\n\n\n\ngroups\n\
        \n\n\ngroups?fields=name,officeName,joinedDate\n\n\n\ngroups?offset=10&limit=50\n\
        \n\n\ngroups?orderBy=name&sortOrder=DESC"
      operationId: retrieveAll_23
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        description: staffId
        schema:
          type: integer
          format: int64
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: name
        in: query
        description: name
        schema:
          type: string
      - name: underHierarchy
        in: query
        description: underHierarchy
        schema:
          type: string
      - name: paged
        in: query
        description: paged
        schema:
          type: boolean
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: orphansOnly
        in: query
        description: orphansOnly
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsResponse'
    post:
      tags:
      - Groups
      summary: Create a Group
      description: "Creates a Group\n\nMandatory Fields: name, officeId, active, activationDate\
        \ (if active=true)\n\nOptional Fields: externalId, staffId, clientMembers"
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGroupsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGroupsResponse'
  /grouplevels:
    get:
      operationId: retrieveAllGroups
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /interestratecharts/{chartId}/chartslabs/{chartSlabId}:
    get:
      tags:
      - Interest Rate Slab (A.K.A interest bands)
      summary: Retrieve a Slab
      description: |
        Retrieve a slab associated with an Interest rate chart

        Example Requests:

        interestratecharts/1/chartslabs/1
      operationId: retrieveOne_14
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      - name: chartSlabId
        in: path
        description: chartSlabId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsResponse'
    put:
      tags:
      - Interest Rate Slab (A.K.A interest bands)
      summary: Update a Slab
      description: It updates the Slab from chart
      operationId: update_12
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      - name: chartSlabId
        in: path
        description: chartSlabId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse'
    delete:
      tags:
      - Interest Rate Slab (A.K.A interest bands)
      summary: Delete a Slab
      description: Delete a Slab from a chart
      operationId: delete_12
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      - name: chartSlabId
        in: path
        description: chartSlabId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInterestRateChartsChartIdChartSlabsResponse'
  /interestratecharts/{chartId}/chartslabs/template:
    get:
      tags:
      - Interest Rate Slab (A.K.A interest bands)
      operationId: template_8
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /interestratecharts/{chartId}/chartslabs:
    get:
      tags:
      - Interest Rate Slab (A.K.A interest bands)
      summary: Retrieve all Slabs
      description: |-
        Retrieve list of slabs associated with a chart

        Example Requests:

        interestratecharts/1/chartslabs
      operationId: retrieveAll_24
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsResponse'
    post:
      tags:
      - Interest Rate Slab (A.K.A interest bands)
      summary: Create a Slab
      description: "Creates a new interest rate slab for an interest rate chart.\n\
        Mandatory Fields\nperiodType, fromPeriod, annualInterestRate\nOptional Fields\n\
        toPeriod and description\nExample Requests:\n\ninterestratecharts/1/chartslabs"
      operationId: create_8
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInterestRateChartsChartIdChartSlabsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInterestRateChartsChartIdChartSlabsResponse'
  /interestratecharts/{chartId}:
    get:
      tags:
      - Interest Rate Chart
      summary: Retrieve a Chart
      description: |-
        It retrieves the Interest Rate Chart
        Example Requests:

        interestratecharts/1
      operationId: retrieveOne_15
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterestRateChartsResponse'
    put:
      tags:
      - Interest Rate Chart
      summary: Update a Chart
      description: It updates the chart
      operationId: update_13
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInterestRateChartsChartIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInterestRateChartsChartIdResponse'
    delete:
      tags:
      - Interest Rate Chart
      summary: Delete a Chart
      description: It deletes the chart
      operationId: delete_13
      parameters:
      - name: chartId
        in: path
        description: chartId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInterestRateChartsChartIdResponse'
  /interestratecharts/template:
    get:
      tags:
      - Interest Rate Chart
      summary: Retrieve Chart Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for creating a chart. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        interestratecharts/template
      operationId: template_9
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterestRateChartsTemplateResponse'
  /interestratecharts:
    get:
      tags:
      - Interest Rate Chart
      summary: Retrieve all Charts
      description: |-
        Retrieve list of charts associated with a term deposit product(FD or RD).
        Example Requests:

        interestratecharts?productId=1
      operationId: retrieveAll_25
      parameters:
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetInterestRateChartsResponse'
    post:
      tags:
      - Interest Rate Chart
      summary: Create a Chart
      description: Creates a new chart which can be attached to a term deposit products
        (FD or RD).
      operationId: create_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInterestRateChartsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInterestRateChartsResponse'
  /loans/loanreassignment/template:
    get:
      operationId: loanReassignmentTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: fromLoanOfficerId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/loanreassignment:
    post:
      operationId: loanReassignment
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/{loanId}/charges/{chargeId}:
    get:
      tags:
      - Loan Charges
      summary: Retrieve a Loan Charge
      description: "Retrieves Loan Charge according to the Loan ID and Charge IDExample\
        \ Requests:\n\n/loans/1/charges/1\n\n\n/loans/1/charges/1?fields=name,amountOrPercentage"
      operationId: retrieveLoanCharge
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdChargesChargeIdResponse'
    put:
      tags:
      - Loan Charges
      summary: Update a Loan Charge
      description: Currently Loan Charges may be updated only if the Loan is not yet
        approved
      operationId: updateLoanCharge
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdResponse'
    post:
      tags:
      - Loan Charges
      summary: Pay Loan Charge
      description: Loan Charge will be paid if the loan is linked with a savings account
      operationId: executeLoanCharge_1
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdChargesChargeIdResponse'
    delete:
      tags:
      - Loan Charges
      summary: Delete a Loan Charge
      description: "Note: Currently, A Loan Charge may only be removed from Loans\
        \ that are not yet approved."
      operationId: deleteLoanCharge
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdChargesChargeIdResponse'
  /loans/{loanId}/charges/template:
    get:
      tags:
      - Loan Charges
      summary: Retrieve Loan Charges Template
      description: |+
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        loans/1/charges/template

      operationId: retrieveTemplate_8
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdChargesTemplateResponse'
  /loans/{loanId}/charges:
    get:
      tags:
      - Loan Charges
      summary: List Loan Charges
      description: "It lists all the Loan Charges specific to a Loan \n\nExample Requests:\n\
        \nloans/1/charges\n\n\nloans/1/charges?fields=name,amountOrPercentage"
      operationId: retrieveAllLoanCharges
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoansLoanIdChargesChargeIdResponse'
    post:
      tags:
      - Loan Charges
      summary: Create a Loan Charge
      description: It Creates a Loan Charge
      operationId: executeLoanCharge
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdChargesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdChargesResponse'
  /loans/{loanId}/disbursements/{disbursementId}:
    get:
      operationId: retriveDetail
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: disbursementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateDisbursementDate
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: disbursementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/{loanId}/disbursements/editDisbursements:
    put:
      operationId: addAndDeleteDisbursementDetail
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/{loanId}/schedule:
    post:
      tags:
      - Loan Rescheduling
      summary: Calculate loan repayment schedule based on Loan term variations | Updates
        loan repayment schedule based on Loan term variations | Updates loan repayment
        schedule by removing Loan term variations
      description: "Calculate loan repayment schedule based on Loan term variations:\n\
        \nMandatory Fields: exceptions,locale,dateFormat\n\nUpdates loan repayment\
        \ schedule based on Loan term variations:\n\nMandatory Fields: exceptions,locale,dateFormat\n\
        \nUpdates loan repayment schedule by removing Loan term variations:\n\nIt\
        \ updates the loan repayment schedule by removing Loan term variations\n\n\
        Showing request/response for 'Updates loan repayment schedule by removing\
        \ Loan term variations'"
      operationId: calculateLoanScheduleOrSubmitVariableSchedule
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdScheduleRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdScheduleResponse'
  /loans/{loanId}/transactions/{transactionId}:
    get:
      tags:
      - Loan Transactions
      summary: Retrieve a Transaction Details
      description: |-
        Retrieves a Transaction Details

        Example Request:

        loans/5/transactions/3
      operationId: retrieveTransaction
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdTransactionsTransactionIdResponse'
    post:
      tags:
      - Loan Transactions
      summary: Adjust a Transaction
      description: "Note: there is no need to specify command={transactionType} parameter.\n\
        \nMandatory Fields: transactionDate, transactionAmount"
      operationId: adjustLoanTransaction
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdTransactionsTransactionIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdTransactionsTransactionIdResponse'
  /loans/{loanId}/transactions/template:
    get:
      tags:
      - Loan Transactions
      summary: Retrieve Loan Transaction Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Request:

        loans/1/transactions/template?command=repayment
      operationId: retrieveTransactionTemplate
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      - name: dateFormat
        in: query
        description: dateFormat
        schema:
          type: string
      - name: transactionDate
        in: query
        description: transactionDate
        schema:
          $ref: '#/components/schemas/DateParam'
      - name: locale
        in: query
        description: locale
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdTransactionsTemplateResponse'
  /loans/{loanId}/transactions:
    post:
      tags:
      - Loan Transactions
      summary: Make a Repayment | Make a Refund of an Active Loan by Cash | Foreclosure
        of an Active Loan | Waive Interest | Write-off Loan | Make Recovery Payment
        | Undo Loan Write-off Transaction
      description: |-
        Make Recovery Payment:

        This API allows collecting recovery payments for written-off loans
      operationId: executeLoanTransaction
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdTransactionsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdTransactionsResponse'
  /loans:
    get:
      tags:
      - Loans
      summary: List Loans
      description: |-
        The list capability of loans can support pagination and sorting.
        Example Requests:

        loans

        loans?fields=accountNo

        loans?offset=10&limit=50

        loans?orderBy=accountNo&sortOrder=DESC
      operationId: retrieveAll_26
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: accountNo
        in: query
        description: accountNo
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansResponse'
    post:
      tags:
      - Loans
      summary: Calculate loan repayment schedule | Submit a new Loan Application
      description: "It calculates the loan repayment Schedule\nSubmits a new loan\
        \ application\nMandatory Fields: clientId, productId, principal, loanTermFrequency,\
        \ loanTermFrequencyType, loanType, numberOfRepayments, repaymentEvery, repaymentFrequencyType,\
        \ interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType,\
        \ transactionProcessingStrategyId, expectedDisbursementDate, submittedOnDate,\
        \ loanType\nOptional Fields: graceOnPrincipalPayment, graceOnInterestPayment,\
        \ graceOnInterestCharged, linkAccountId, allowPartialPeriodInterestCalcualtion,\
        \ fixedEmiAmount, maxOutstandingLoanBalance, disbursementData, graceOnArrearsAgeing,\
        \ createStandingInstructionAtDisbursement (requires linkedAccountId if set\
        \ to true)\nAdditional Mandatory Fields if interest recalculation is enabled\
        \ for product and Rest frequency not same as repayment period: recalculationRestFrequencyDate\n\
        Additional Mandatory Fields if interest recalculation with interest/fee compounding\
        \ is enabled for product and compounding frequency not same as repayment period:\
        \ recalculationCompoundingFrequencyDate\nAdditional Mandatory Field if Entity-Datatable\
        \ Check is enabled for the entity of type loan: datatables"
      operationId: calculateLoanScheduleOrSubmitLoanApplication
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansResponse'
  /loans/{loanId}:
    get:
      tags:
      - Loans
      summary: Retrieve a Loan
      description: "Note: template=true parameter doesn't apply to this resource.Example\
        \ Requests:\n\nloans/1\n\n\nloans/1?fields=id,principal,annualInterestRate\n\
        \n\nloans/1?associations=all\n\nloans/1?associations=all&exclude=guarantors\n\
        \n\nloans/1?fields=id,principal,annualInterestRate&associations=repaymentSchedule,transactions"
      operationId: retrieveLoan
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansLoanIdResponse'
    put:
      tags:
      - Loans
      summary: Modify a loan application
      description: "Loan application can only be modified when in 'Submitted and pending\
        \ approval' state. Once the application is approved, the details cannot be\
        \ changed using this method."
      operationId: modifyLoanApplication
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoansLoanIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoansLoanIdResponse'
    post:
      tags:
      - Loans
      summary: Approve Loan Application | Recover Loan Guarantee | Undo Loan Application
        Approval | Assign a Loan Officer | Unassign a Loan Officer | Reject Loan Application
        | Applicant Withdraws from Loan Application | Disburse Loan Disburse Loan
        To Savings Account | Undo Loan Disbursal
      description: "Approve Loan Application:\nMandatory Fields: approvedOnDate\n\
        Optional Fields: approvedLoanAmount and expectedDisbursementDate\nApproves\
        \ the loan application\n\nRecover Loan Guarantee:\nRecovers the loan guarantee\n\
        \nUndo Loan Application Approval:\nUndoes the Loan Application Approval\n\n\
        Assign a Loan Officer:\nAllows you to assign Loan Officer for existing Loan.\n\
        \nUnassign a Loan Officer:\nAllows you to unassign the Loan Officer.\n\nReject\
        \ Loan Application:\nMandatory Fields: rejectedOnDate\nAllows you to reject\
        \ the loan application\n\nApplicant Withdraws from Loan Application:\nMandatory\
        \ Fields: withdrawnOnDate\nAllows the applicant to withdraw the loan application\n\
        \nDisburse Loan:\nMandatory Fields: actualDisbursementDate\nOptional Fields:\
        \ transactionAmount and fixedEmiAmount\nDisburses the Loan\n\nDisburse Loan\
        \ To Savings Account:\nMandatory Fields: actualDisbursementDate\nOptional\
        \ Fields: transactionAmount and fixedEmiAmount\nDisburses the loan to Saving\
        \ Account\n\nUndo Loan Disbursal:\nUndoes the Loan Disbursal\nShowing request\
        \ and response for Assign a Loan Officer"
      operationId: stateTransitions
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdResponse'
    delete:
      tags:
      - Loans
      summary: Delete a Loan Application
      description: "Note: Only loans in \"Submitted and awaiting approval\" status\
        \ can be deleted."
      operationId: deleteLoanApplication
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoansLoanIdResponse'
  /loans/downloadtemplate:
    get:
      tags:
      - Loans
      operationId: getLoansTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /loans/glimAccount/{glimId}:
    get:
      tags:
      - Loans
      operationId: getGlimRepaymentTemplate
      parameters:
      - name: glimId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - Loans
      summary: Approve GLIM Application | Undo GLIM Application Approval | Reject
        GLIM Application | Disburse Loan Disburse Loan To Savings Account | Undo Loan
        Disbursal
      description: "Approve GLIM Application:\nMandatory Fields: approvedOnDate\n\
        Optional Fields: approvedLoanAmount and expectedDisbursementDate\nApproves\
        \ the GLIM application\n\nUndo GLIM Application Approval:\nUndoes the GLIM\
        \ Application Approval\n\nReject GLIM Application:\nMandatory Fields: rejectedOnDate\n\
        Allows you to reject the GLIM application\n\nDisburse Loan:\nMandatory Fields:\
        \ actualDisbursementDate\nOptional Fields: transactionAmount and fixedEmiAmount\n\
        Disburses the Loan\n\nDisburse Loan To Savings Account:\nMandatory Fields:\
        \ actualDisbursementDate\nOptional Fields: transactionAmount and fixedEmiAmount\n\
        Disburses the loan to Saving Account\n\nUndo Loan Disbursal:\nUndoes the Loan\
        \ Disbursal\n"
      operationId: glimStateTransitions
      parameters:
      - name: glimId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoansLoanIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoansLoanIdResponse'
  /loans/repayments/downloadtemplate:
    get:
      tags:
      - Loans
      operationId: getLoanRepaymentTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /loans/uploadtemplate:
    post:
      tags:
      - Loans
      operationId: postLoanTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /loans/repayments/uploadtemplate:
    post:
      tags:
      - Loans
      operationId: postLoanRepaymentTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /loans/{loanId}/template:
    get:
      tags:
      - Loans
      operationId: retrieveApprovalTemplate
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: templateType
        in: query
        description: templateType
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/template:
    get:
      tags:
      - Loans
      summary: Retrieve Loan Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Requests:

        loans/template?templateType=individual&clientId=1


        loans/template?templateType=individual&clientId=1&productId=1
      operationId: template_10
      parameters:
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int64
      - name: groupId
        in: query
        description: groupId
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      - name: templateType
        in: query
        description: templateType
        schema:
          type: string
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - name: activeOnly
        in: query
        description: activeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoansTemplateResponse'
  /loans/{loanId}/guarantors/{guarantorId}:
    get:
      operationId: retrieveGuarantorDetails
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: guarantorId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateGuarantor
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: guarantorId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: deleteGuarantor
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: guarantorId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: guarantorFundingId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/{loanId}/guarantors/template:
    get:
      operationId: newGuarantorTemplate
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/{loanId}/guarantors:
    get:
      operationId: retrieveGuarantorDetails_1
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: createGuarantor
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/{loanId}/guarantors/accounts/template:
    get:
      operationId: accountsTemplate
      parameters:
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loans/{loanId}/guarantors/downloadtemplate:
    get:
      operationId: getGuarantorTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /loans/{loanId}/guarantors/uploadtemplate:
    post:
      operationId: postGuarantorTemplate
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /rescheduleloans/template:
    get:
      operationId: retrieveTemplate_9
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /rescheduleloans/{scheduleId}:
    get:
      operationId: readLoanRescheduleRequest
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: updateLoanRescheduleRequest
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /rescheduleloans:
    get:
      operationId: retrieveAllRescheduleRequest
      parameters:
      - name: command
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: createLoanRescheduleRequest
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /loanproducts/{productId}:
    get:
      tags:
      - Loan Products
      summary: Retrieve a Loan Product
      description: "Retrieves a Loan Product\n\nExample Requests:\n\nloanproducts/1\n\
        \n\nloanproducts/1?template=true\n\n\nloanproducts/1?fields=name,description,numberOfRepayments"
      operationId: retrieveLoanProductDetails
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoanProductsProductIdResponse'
    put:
      tags:
      - Loan Products
      summary: Update a Loan Product
      description: Updates a Loan Product
      operationId: updateLoanProduct
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoanProductsProductIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoanProductsProductIdResponse'
  /loanproducts/template:
    get:
      tags:
      - Loan Products
      summary: Retrieve Loan Product Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        loanproducts/template
      operationId: retrieveTemplate_10
      parameters:
      - name: isProductMixTemplate
        in: query
        description: isProductMixTemplate
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoanProductsTemplateResponse'
  /loanproducts:
    get:
      tags:
      - Loan Products
      summary: List Loan Products
      description: "Lists Loan Products\n\nExample Requests:\n\nloanproducts\n\n\n\
        loanproducts?fields=name,description,interestRateFrequencyType,amortizationType"
      operationId: retrieveAllLoanProducts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetLoanProductsResponse'
    post:
      tags:
      - Loan Products
      summary: Create a Loan Product
      description: "Depending of the Accounting Rule (accountingRule) selected, additional\
        \ fields with details of the appropriate Ledger Account identifiers would\
        \ need to be passed in.\n\nRefer MifosX Accounting Specs Draft for more details\
        \ regarding the significance of the selected accounting rule\n\nMandatory\
        \ Fields: name, shortName, currencyCode, digitsAfterDecimal, inMultiplesOf,\
        \ principal, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod,\
        \ interestRateFrequencyType, amortizationType, interestType, interestCalculationPeriodType,\
        \ transactionProcessingStrategyId, accountingRule, isInterestRecalculationEnabled,\
        \ daysInYearType, daysInMonthType\n\nOptional Fields: inArrearsTolerance,\
        \ graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged,\
        \ graceOnArrearsAgeing, charges, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings,\
        \ penaltyToIncomeAccountMappings, includeInBorrowerCycle, useBorrowerCycle,principalVariationsForBorrowerCycle,\
        \ numberOfRepaymentVariationsForBorrowerCycle, interestRateVariationsForBorrowerCycle,\
        \ multiDisburseLoan,maxTrancheCount, outstandingLoanBalance,overdueDaysForNPA,holdGuaranteeFunds,\
        \ principalThresholdForLastInstalment, accountMovesOutOfNPAOnlyOnArrearsCompletion,\
        \ canDefineInstallmentAmount, installmentAmountInMultiplesOf, allowAttributeOverrides,\
        \ allowPartialPeriodInterestCalcualtion\n\nAdditional Mandatory Fields for\
        \ Cash(2) based accounting: fundSourceAccountId, loanPortfolioAccountId, interestOnLoanAccountId,\
        \ incomeFromFeeAccountId, incomeFromPenaltyAccountId, writeOffAccountId, transfersInSuspenseAccountId,\
        \ overpaymentLiabilityAccountId\n\nAdditional Mandatory Fields for periodic\
        \ (3) and upfront (4)accrual accounting: fundSourceAccountId, loanPortfolioAccountId,\
        \ interestOnLoanAccountId, incomeFromFeeAccountId, incomeFromPenaltyAccountId,\
        \ writeOffAccountId, receivableInterestAccountId, receivableFeeAccountId,\
        \ receivablePenaltyAccountId, transfersInSuspenseAccountId, overpaymentLiabilityAccountId\n\
        \nAdditional Mandatory Fields if interest recalculation is enabled(true):\
        \ interestRecalculationCompoundingMethod, rescheduleStrategyMethod, recalculationRestFrequencyType\n\
        \nAdditional Optional Fields if interest recalculation is enabled(true): isArrearsBasedOnOriginalSchedule,\
        \ preClosureInterestCalculationStrategy\n\nAdditional Optional Fields if interest\
        \ recalculation is enabled(true) and recalculationRestFrequencyType is not\
        \ same as repayment period: recalculationRestFrequencyInterval, recalculationRestFrequencyDate\n\
        \nAdditional Optional Fields if interest recalculation is enabled(true) and\
        \ interestRecalculationCompoundingMethod is enabled: recalculationCompoundingFrequencyType\n\
        \nAdditional Optional Fields if interest recalculation is enabled(true) and\
        \ interestRecalculationCompoundingMethod is enabled and recalculationCompoundingFrequencyType\
        \ is not same as repayment period: recalculationCompoundingFrequencyInterval,\
        \ recalculationCompoundingFrequencyDate\n\nAdditional Mandatory Fields if\
        \ Hold Guarantee funds is enabled(true): mandatoryGuarantee\n\nAdditional\
        \ Optional Fields if Hold Guarantee funds is enabled(true): minimumGuaranteeFromOwnFunds,minimumGuaranteeFromGuarantor"
      operationId: createLoanProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoanProductsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoanProductsResponse'
  /loanproducts/{productId}/productmix:
    get:
      operationId: retrieveTemplate_11
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateProductMix
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: createProductMix
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: deleteProductMix
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /{entityType}/{entityId}/meetings:
    get:
      operationId: retrieveMeetings
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: createMeeting
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /{entityType}/{entityId}/meetings/{meetingId}:
    get:
      operationId: retrieveMeeting
      parameters:
      - name: meetingId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateMeeting
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: meetingId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: performMeetingCommands
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: meetingId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: deleteMeeting
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: meetingId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /{entityType}/{entityId}/meetings/template:
    get:
      operationId: template_11
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: calendarId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /{resourceType}/{resourceId}/notes:
    get:
      tags:
      - Notes
      summary: Retrieve a Resource's description
      description: "Retrieves a Resource's Notes\n\nNote: Notes are returned in descending\
        \ createOn order.\n\nExample Requests:\n\nclients/2/notes\n\n\ngroups/2/notes?fields=note,createdOn,createdByUsername"
      operationId: retrieveNotesByResource
      parameters:
      - name: resourceType
        in: path
        description: resourceType
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        description: resourceId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetResourceTypeResourceIdNotesResponse'
    post:
      tags:
      - Notes
      summary: Add a Resource Note
      description: |-
        Adds a new note to a supported resource.

        Example Requests:

        clients/1/notes


        groups/1/notes
      operationId: addNewNote
      parameters:
      - name: resourceType
        in: path
        description: resourceType
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        description: resourceId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostResourceTypeResourceIdNotesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResourceTypeResourceIdNotesResponse'
  /{resourceType}/{resourceId}/notes/{noteId}:
    get:
      tags:
      - Notes
      summary: Retrieve a Resource Note
      description: "Retrieves a Resource Note\n\nExample Requests:\n\nclients/1/notes/76\n\
        \n\ngroups/1/notes/20\n\n\nclients/1/notes/76?fields=note,createdOn,createdByUsername\n\
        \n\ngroups/1/notes/20?fields=note,createdOn,createdByUsername"
      operationId: retrieveNote
      parameters:
      - name: resourceType
        in: path
        description: resourceType
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        description: resourceId
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        description: noteId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceTypeResourceIdNotesNoteIdResponse'
    put:
      tags:
      - Notes
      summary: Update a Resource Note
      description: Updates a Resource Note
      operationId: updateNote
      parameters:
      - name: resourceType
        in: path
        description: resourceType
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        description: resourceId
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        description: noteId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourceTypeResourceIdNotesNoteIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourceTypeResourceIdNotesNoteIdResponse'
    delete:
      tags:
      - Notes
      summary: Delete a Resource Note
      description: Deletes a Resource Note
      operationId: deleteNote
      parameters:
      - name: resourceType
        in: path
        description: resourceType
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        description: resourceId
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        description: noteId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourceTypeResourceIdNotesNoteIdResponse'
  /paymenttypes:
    get:
      tags:
      - Payment Type
      summary: Retrieve all Payment Types
      description: Retrieve list of payment types
      operationId: getAllPaymentTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPaymentTypesResponse'
    post:
      tags:
      - Payment Type
      summary: Create a Payment Type
      description: "Creates a new Payment type\n\nMandatory Fields: name\n\nOptional\
        \ Fields: Description, isCashPayment,Position"
      operationId: createPaymentType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPaymentTypesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPaymentTypesResponse'
  /paymenttypes/{paymentTypeId}:
    get:
      tags:
      - Payment Type
      summary: Retrieve a Payment Type
      description: Retrieves a payment type
      operationId: retrieveOnePaymentType
      parameters:
      - name: paymentTypeId
        in: path
        description: paymentTypeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentTypesPaymentTypeIdResponse'
    put:
      tags:
      - Payment Type
      summary: Update a Payment Type
      description: Updates a Payment Type
      operationId: updatePaymentType
      parameters:
      - name: paymentTypeId
        in: path
        description: paymentTypeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPaymentTypesPaymentTypeIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPaymentTypesPaymentTypeIdResponse'
    delete:
      tags:
      - Payment Type
      summary: Delete a Payment Type
      description: Deletes payment type
      operationId: deleteCode_1
      parameters:
      - name: paymentTypeId
        in: path
        description: paymentTypeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePaymentTypesPaymentTypeIdResponse'
  /products/{type}/{productId}:
    get:
      summary: Retrieve a Share Product
      description: |-
        Retrieves a Share Product

        Example Requests:

        products/share/1


        products/share/1?template=true
      operationId: retrieveProduct
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsTypeProductIdResponse'
    put:
      summary: Update a Share Product
      description: Updates a Share Product
      operationId: updateProduct
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProductsTypeProductIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProductsTypeProductIdResponse'
    post:
      operationId: handleCommands_3
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /products/{type}/template:
    get:
      operationId: retrieveTemplate_12
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /products/{type}:
    get:
      summary: List Share Products
      description: "Lists Share Products\n\nMandatory Fields: limit, offset\n\nExample\
        \ Requests:\n\nshareproducts"
      operationId: retrieveAllProducts
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsTypeResponse'
    post:
      summary: Create a Share Product
      description: "Creates a Share Product\n\nMandatory Fields: name, shortName,\
        \ description, currencyCode, digitsAfterDecimal,inMultiplesOf, locale, totalShares,\
        \ unitPrice, nominalShares,allowDividendCalculationForInactiveClients,accountingRule\n\
        \nMandatory Fields for Cash based accounting (accountingRule = 2): shareReferenceId,\
        \ shareSuspenseId, shareEquityId, incomeFromFeeAccountId\n\nOptional Fields:\
        \ sharesIssued, minimumShares, maximumShares, minimumActivePeriodForDividends,\
        \ minimumactiveperiodFrequencyType, lockinPeriodFrequency, lockinPeriodFrequencyType,\
        \ marketPricePeriods, chargesSelected"
      operationId: createProduct
      parameters:
      - name: type
        in: path
        description: type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProductsTypeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProductsTypeResponse'
  /rates/{rateId}:
    get:
      operationId: retrieveRate
      parameters:
      - name: rateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      operationId: updateRate
      parameters:
      - name: rateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /rates:
    get:
      operationId: getAllRates
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: createRate
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /savingsaccounts/{savingsId}/onholdtransactions:
    get:
      operationId: retrieveAll_27
      parameters:
      - name: savingsId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: guarantorFundingId
        in: query
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /fixeddepositaccounts/{fixedDepositAccountId}/transactions/template:
    get:
      operationId: retrieveTemplate_13
      parameters:
      - name: fixedDepositAccountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /fixeddepositaccounts/{fixedDepositAccountId}/transactions/{transactionId}:
    get:
      operationId: retrieveOne_16
      parameters:
      - name: fixedDepositAccountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: adjustTransaction
      parameters:
      - name: fixedDepositAccountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /fixeddepositaccounts/{fixedDepositAccountId}/transactions:
    post:
      operationId: transaction
      parameters:
      - name: fixedDepositAccountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /fixeddepositaccounts/{accountId}:
    get:
      tags:
      - Fixed Deposit Account
      summary: Retrieve a fixed deposit application/account
      description: |-
        Retrieves a fixed deposit application/account

        Example Requests :



        fixeddepositaccounts/1

        fixeddepositaccounts/1?associations=all
      operationId: retrieveOne_17
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - name: chargeStatus
        in: query
        description: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFixedDepositAccountsAccountIdResponse'
    put:
      tags:
      - Fixed Deposit Account
      summary: Modify a fixed deposit application
      description: "Fixed deposit application can only be modified when in 'Submitted\
        \ and pending approval' state. Once the application is approved, the details\
        \ cannot be changed using this method. Specific api endpoints will be created\
        \ to allow change of interest detail such as rate, compounding period, posting\
        \ period etc"
      operationId: update_14
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFixedDepositAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFixedDepositAccountsAccountIdResponse'
    post:
      tags:
      - Fixed Deposit Account
      summary: Approve fixed deposit application | Undo approval fixed deposit application
        | Reject fixed deposit application | Withdraw fixed deposit application |
        Activate a fixed deposit account | Close a fixed deposit account | Premature
        Close a fixed deposit account | Calculate Premature amount on Fixed deposit
        account | Calculate Interest on Fixed Deposit Account | Post Interest on Fixed
        Deposit Account
      description: |-
        Approve fixed deposit application:

        Approves fixed deposit application so long as its in 'Submitted and pending approval' state.

        Undo approval fixed deposit application:

        Will move 'approved' fixed deposit application back to 'Submitted and pending approval' state.

        Reject fixed deposit application:

        Rejects fixed deposit application so long as its in 'Submitted and pending approval' state.

        Withdraw fixed deposit application:

        Used when an applicant withdraws from the fixed deposit application. It must be in 'Submitted and pending approval' state.

        Close a fixed deposit account:

        Results in a Matured fixed deposit account being converted into a 'closed' fixed deposit account.

        Premature Close a fixed deposit account:

        Results in an Active fixed deposit account being converted into a 'Premature Closed' fixed deposit account with options to withdraw prematured amount. (premature amount is calculated using interest rate chart applicable along with penal interest if any.)

        Calculate Premature amount on Fixed deposit account:

        Calculate premature amount on fixed deposit account till premature close date. Premature amount is calculated based on interest chart and penal interest applicable.

        Calculate Interest on Fixed Deposit Account:

        Calculates interest earned on a fixed deposit account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.

        Post Interest on Fixed Deposit Account:

        Calculates and Posts interest earned on a fixed deposit account based on today's date and whether an interest posting or crediting event is due.

        Showing request/response for Calculate Interest on Fixed Deposit Account
      operationId: handleCommands_4
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFixedDepositAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFixedDepositAccountsAccountIdResponse'
    delete:
      tags:
      - Fixed Deposit Account
      summary: Delete a fixed deposit application
      description: "At present we support hard delete of fixed deposit application\
        \ so long as its in 'Submitted and pending approval' state. One the application\
        \ is moves past this state, it is not possible to do a 'hard' delete of the\
        \ application or the account. An API endpoint will be added to close/de-activate\
        \ the fixed deposit account."
      operationId: delete_14
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFixedDepositAccountsAccountIdResponse'
  /fixeddepositaccounts:
    get:
      tags:
      - Fixed Deposit Account
      summary: List Fixed deposit applications/accounts
      description: |-
        Lists Fixed Deposit Accounts

        Example Requests:



        fixeddepositaccounts



        fixeddepositaccounts?fields=name
      operationId: retrieveAll_28
      parameters:
      - name: paged
        in: query
        description: paged
        schema:
          type: boolean
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFixedDepositAccountsResponse'
    post:
      tags:
      - Fixed Deposit Account
      summary: Submit new fixed deposit application
      description: "Submits a new fixed deposit applicationMandatory Fields: clientId\
        \ or groupId, productId, submittedOnDate, depositAmount, depositPeriod, depositPeriodFrequencyId\n\
        \nOptional Fields: accountNo, externalId, fieldOfficerId,linkAccountId(if\
        \ provided initial deposit amount will be collected from this account),transferInterestToSavings(By\
        \ enabling this flag all interest postings will be transferred to linked saving\
        \ account )"
      operationId: submitApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFixedDepositAccountsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFixedDepositAccountsResponse'
  /fixeddepositaccounts/{accountId}/template:
    get:
      tags:
      - Fixed Deposit Account
      operationId: accountClosureTemplate
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /fixeddepositaccounts/downloadtemplate:
    get:
      tags:
      - Fixed Deposit Account
      operationId: getFixedDepositTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /fixeddepositaccounts/uploadtemplate:
    post:
      tags:
      - Fixed Deposit Account
      operationId: postFixedDepositTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /fixeddepositaccounts/transaction/downloadtemplate:
    get:
      tags:
      - Fixed Deposit Account
      operationId: getFixedDepositTransactionTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /fixeddepositaccounts/transaction/uploadtemplate:
    post:
      tags:
      - Fixed Deposit Account
      operationId: postFixedDepositTransactionTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /fixeddepositaccounts/template:
    get:
      tags:
      - Fixed Deposit Account
      summary: Retrieve Fixed Deposit Account Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for fixed deposit applications. The template data returned consists of any or all of:



        Field Defaults

        Allowed Value ListsExample Requests:



        fixeddepositaccounts/template?clientId=1
      operationId: template_12
      parameters:
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int64
      - name: groupId
        in: query
        description: groupId
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFixedDepositAccountsTemplateResponse'
  /fixeddepositproducts/template:
    get:
      tags:
      - Fixed Deposit Product
      operationId: retrieveTemplate_14
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /fixeddepositproducts/{productId}:
    get:
      tags:
      - Fixed Deposit Product
      summary: Retrieve a Fixed Deposit Product
      description: "Retrieves a Fixed Deposit Product\n\nExample Requests:\n\nfixeddepositproducts/1\n\
        \n\nfixeddepositproducts/1?template=true\n\n\nfixeddepositproducts/1?fields=name,description"
      operationId: retrieveOne_18
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFixedDepositProductsProductIdResponse'
    put:
      tags:
      - Fixed Deposit Product
      summary: Update a Fixed Deposit Product
      description: Updates a Fixed Deposit Product
      operationId: update_15
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFixedDepositProductsProductIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFixedDepositProductsProductIdResponse'
    delete:
      tags:
      - Fixed Deposit Product
      summary: Delete a Fixed Deposit Product
      description: Deletes a Fixed Deposit Product
      operationId: delete_15
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFixedDepositProductsProductIdResponse'
  /fixeddepositproducts:
    get:
      tags:
      - Fixed Deposit Product
      summary: List Fixed Deposit Products
      description: |-
        Lists Fixed Deposit Products

        Example Requests:

        fixeddepositproducts


        fixeddepositproducts?fields=name
      operationId: retrieveAll_29
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFixedDepositProductsResponse'
    post:
      tags:
      - Fixed Deposit Product
      summary: Create a Fixed Deposit Product
      description: "Creates a Fixed Deposit Product\n\nMandatory Fields: name, shortName,\
        \ description, currencyCode, digitsAfterDecimal,inMultiplesOf, interestCompoundingPeriodType,\
        \ interestCalculationType, interestCalculationDaysInYearType, minDepositTerm,\
        \ minDepositTermTypeId, accountingRule\n\nOptional Fields: lockinPeriodFrequency,\
        \ lockinPeriodFrequencyType, maxDepositTerm, maxDepositTermTypeId, inMultiplesOfDepositTerm,\
        \ inMultiplesOfDepositTermTypeId, preClosurePenalApplicable, preClosurePenalInterest,\
        \ preClosurePenalInterestOnTypeId, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings,\
        \ charges, charts, , withHoldTax, taxGroupId\n\n\nMandatory Fields for Cash\
        \ based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId,\
        \ interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId,\
        \ incomeFromPenaltyAccountId"
      operationId: create_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFixedDepositProductsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFixedDepositProductsResponse'
  /recurringdepositaccounts/{recurringDepositAccountId}/transactions/template:
    get:
      tags:
      - Recurring Deposit Account Transactions
      summary: Retrieve Recurring Deposit Account Transaction Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Requests:

        recurringdepositaccounts/1/transactions/template?command=deposit

        recurringdepositaccounts/1/transactions/template?command=withdrawal
      operationId: retrieveTemplate_15
      parameters:
      - name: recurringDepositAccountId
        in: path
        description: recurringDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse'
  /recurringdepositaccounts/{recurringDepositAccountId}/transactions/{transactionId}:
    get:
      tags:
      - Recurring Deposit Account Transactions
      summary: Retrieve Recurring Deposit Account Transaction
      description: |-
        Retrieves Recurring Deposit Account Transaction

        Example Requests:

        recurringdepositaccounts/1/transactions/1
      operationId: retrieveOne_19
      parameters:
      - name: recurringDepositAccountId
        in: path
        description: recurringDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse'
    post:
      tags:
      - Recurring Deposit Account Transactions
      summary: Adjust Transaction | Undo transaction
      description: |-
        Adjust Transaction:

        This command modifies the given transaction.

        Undo transaction:

        This command reverses the given transaction.

        Showing request/response for 'Adjust Transaction'
      operationId: handleTransactionCommands
      parameters:
      - name: recurringDepositAccountId
        in: path
        description: recurringDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse'
  /recurringdepositaccounts/{recurringDepositAccountId}/transactions:
    post:
      tags:
      - Recurring Deposit Account Transactions
      summary: Deposit Transaction | Withdrawal Transaction
      description: |-
        Deposit Transaction:

        Used for a deposit transaction

        Withdrawal Transaction:

        Used for a Withdrawal Transaction

        Showing request/response for Deposit Transaction
      operationId: transaction_1
      parameters:
      - name: recurringDepositAccountId
        in: path
        description: recurringDepositAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse'
  /recurringdepositaccounts/{accountId}:
    get:
      tags:
      - Recurring Deposit Account
      summary: Retrieve a recurring deposit application/account
      description: |-
        Retrieves a recurring deposit application/account

        Example Requests :

        recurringdepositaccounts/1


        recurringdepositaccounts/1?associations=all
      operationId: retrieveOne_20
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - name: chargeStatus
        in: query
        description: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositAccountsAccountIdResponse'
    put:
      tags:
      - Recurring Deposit Account
      summary: Modify a recurring deposit application
      description: "Recurring deposit application can only be modified when in 'Submitted\
        \ and pending approval' state. Once the application is approved, the details\
        \ cannot be changed using this method. Specific api endpoints will be created\
        \ to allow change of interest detail such as rate, compounding period, posting\
        \ period etc"
      operationId: update_16
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecurringDepositAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecurringDepositAccountsAccountIdResponse'
    post:
      tags:
      - Recurring Deposit Account
      summary: Approve recurring deposit application | Undo approval recurring deposit
        application | Reject recurring deposit application | Withdraw recurring deposit
        application | Activate a recurring deposit account | Update the recommended
        deposit amount for a recurring deposit account | Close a recurring deposit
        account | Premature Close a recurring deposit account | Calculate Premature
        amount on Recurring deposit account | Calculate Interest on recurring Deposit
        Account | Post Interest on recurring Deposit Account
      description: |-
        Approve recurring deposit application:

        Approves recurring deposit application so long as its in 'Submitted and pending approval' state.

        Undo approval recurring deposit application:

        Will move 'approved' recurring deposit application back to 'Submitted and pending approval' state.

        Reject recurring deposit application

        Rejects recurring deposit application so long as its in 'Submitted and pending approval' state.

        Withdraw recurring deposit application:

        Used when an applicant withdraws from the recurring deposit application. It must be in 'Submitted and pending approval' state.

        Activate a recurring deposit account:

        Results in an approved recurring deposit application being converted into an 'active' recurring deposit account.

        Update the recommended deposit amount for a recurring deposit account:

        Updates the recommended deposit amount for a RD account as on the effective date.

        Close a recurring deposit account

        Results in a Matured recurring deposit account being converted into a 'closed' recurring deposit account.

        On account close allowed actions are.Premature Close a recurring deposit account:

        Results in an Active recurring deposit account being converted into a 'Premature Closed' recurring deposit account with options to withdraw prematured amount. (premature amount is calculated using interest rate chart applicable along with penal interest if any.)

        On account premature closure allowed actions are.

        Calculate Premature amount on Recurring deposit account:

        Calculate premature amount on recurring deposit till premature close date. Premature amount is calculated based on interest chart and penal interest applicable if any.

        Calculate Interest on recurring Deposit Account:

        Calculates interest earned on a recurring deposit account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.

        Post Interest on recurring Deposit Account:

        Calculates and Posts interest earned on a recurring deposit account based on todays date and whether an interest posting or crediting event is due.

        Showing request/response for 'Post Interest on recurring Deposit Account'
      operationId: handleCommands_5
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositAccountsAccountIdResponse'
    delete:
      tags:
      - Recurring Deposit Account
      summary: Delete a recurring deposit application
      description: "At present we support hard delete of recurring deposit application\
        \ so long as its in 'Submitted and pending approval' state. One the application\
        \ is moves past this state, it is not possible to do a 'hard' delete of the\
        \ application or the account. An API endpoint will be added to close/de-activate\
        \ the recurring deposit account."
      operationId: delete_16
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecurringDepositAccountsResponse'
  /recurringdepositaccounts:
    get:
      tags:
      - Recurring Deposit Account
      summary: List Recurring deposit applications/accounts
      description: |-
        Lists Recurring deposit applications/accounts

        Example Requests:

        recurringdepositaccounts


        recurringdepositaccounts?fields=name
      operationId: retrieveAll_30
      parameters:
      - name: paged
        in: query
        description: paged
        schema:
          type: boolean
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetRecurringDepositAccountsResponse'
    post:
      tags:
      - Recurring Deposit Account
      summary: Submit new recurring deposit application
      description: "Submits new recurring deposit application\n\nMandatory Fields:\
        \ clientId or groupId, productId, submittedOnDate, depositAmount, depositPeriod,\
        \ depositPeriodFrequencyId\n\nOptional Fields: accountNo, externalId, fieldOfficerId,linkAccountId(if\
        \ provided initial deposit amount will be collected from this account),transferInterestToSavings(By\
        \ enabling this flag all interest postings will be transferred to linked saving\
        \ account )\n\nInherited from Product (if not provided): interestCompoundingPeriodType,\
        \ interestCalculationType, interestCalculationDaysInYearType, lockinPeriodFrequency,\
        \ lockinPeriodFrequencyType, preClosurePenalApplicable, preClosurePenalInterest,\
        \ preClosurePenalInterestOnTypeId, charts, withHoldTax"
      operationId: submitApplication_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositAccountsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositAccountsResponse'
  /recurringdepositaccounts/uploadtemplate:
    post:
      tags:
      - Recurring Deposit Account
      operationId: postRecurringDepositTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /recurringdepositaccounts/{accountId}/template:
    get:
      tags:
      - Recurring Deposit Account
      operationId: accountClosureTemplate_1
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /recurringdepositaccounts/transactions/downloadtemplate:
    get:
      tags:
      - Recurring Deposit Account
      operationId: getRecurringDepositTransactionTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /recurringdepositaccounts/transactions/uploadtemplate:
    post:
      tags:
      - Recurring Deposit Account
      operationId: postRecurringDepositTransactionsTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /recurringdepositaccounts/downloadtemplate:
    get:
      tags:
      - Recurring Deposit Account
      operationId: getRecurringDepositTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /recurringdepositaccounts/template:
    get:
      tags:
      - Recurring Deposit Account
      summary: Retrieve recurring Deposit Account Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for recurring deposit applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Requests:

        recurringdepositaccounts/template?clientId=1


        recurringdepositaccounts/template?clientId=1&productId=1
      operationId: template_13
      parameters:
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int64
      - name: groupId
        in: query
        description: groupId
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositAccountsTemplateResponse'
  /recurringdepositproducts/template:
    get:
      tags:
      - Recurring Deposit Product
      operationId: retrieveTemplate_16
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /recurringdepositproducts/{productId}:
    get:
      tags:
      - Recurring Deposit Product
      summary: Retrieve a Recurring Deposit Product
      description: "Retrieves a Recurring Deposit Product\n\nExample Requests:\n\n\
        recurringdepositproducts/1\n\n\nrecurringdepositproducts/1?template=true\n\
        \n\nrecurringdepositproducts/1?fields=name,description"
      operationId: retrieveOne_21
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringDepositProductsProductIdResponse'
    put:
      tags:
      - Recurring Deposit Product
      summary: Update a Recurring Deposit Product
      description: Updates a Recurring Deposit Product
      operationId: update_17
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecurringDepositProductsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecurringDepositProductsResponse'
    delete:
      tags:
      - Recurring Deposit Product
      summary: Delete a Recurring Deposit Product
      description: Deletes a Recurring Deposit Product
      operationId: delete_17
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecurringDepositProductsProductIdResponse'
  /recurringdepositproducts:
    get:
      tags:
      - Recurring Deposit Product
      summary: List Recuring Deposit Products
      description: |-
        Lists Recuring Deposit Products

        Example Requests:

        recurringdepositproducts


        recurringdepositproducts?fields=name
      operationId: retrieveAll_31
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetRecurringDepositProductsResponse'
    post:
      tags:
      - Recurring Deposit Product
      summary: Create a Recurring Deposit Product
      description: "Creates a Recurring Deposit Product\n\nMandatory Fields: name,\
        \ shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf,\
        \ interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,\
        \ minDepositTerm, minDepositTermTypeId, recurringDepositFrequency, recurringDepositFrequencyTypeId,\
        \ accountingRule, depositAmount\n\nMandatory Fields for Cash based accounting\
        \ (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId,\
        \ interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId,\
        \ incomeFromPenaltyAccountId\n\nOptional Fields: lockinPeriodFrequency, lockinPeriodFrequencyType,\
        \ maxDepositTerm, maxDepositTermTypeId, inMultiplesOfDepositTerm, inMultiplesOfDepositTermTypeId,\
        \ preClosurePenalApplicable, preClosurePenalInterest, preClosurePenalInterestOnTypeId,\
        \ feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, charts,\
        \ minDepositAmount, maxDepositAmount, withHoldTax, taxGroupId"
      operationId: create_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRecurringDepositProductsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRecurringDepositProductsResponse'
  /savingsaccounts/{savingsAccountId}/charges/template:
    get:
      tags:
      - Savings Charges
      summary: Retrieve Savings Charges Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        savingsaccounts/1/charges/template
      operationId: retrieveTemplate_17
      parameters:
      - name: savingsAccountId
        in: path
        description: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsSavingsAccountIdChargesTemplateResponse'
  /savingsaccounts/{savingsAccountId}/charges/{savingsAccountChargeId}:
    get:
      tags:
      - Savings Charges
      summary: Retrieve a Savings account Charge
      description: "Retrieves a Savings account Charge\n\nExample Requests:\n\n/savingsaccounts/1/charges/5\n\
        \n\n/savingsaccounts/1/charges/5?fields=name,amountOrPercentage"
      operationId: retrieveSavingsAccountCharge
      parameters:
      - name: savingsAccountId
        in: path
        description: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: savingsAccountChargeId
        in: path
        description: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse'
    put:
      tags:
      - Savings Charges
      summary: Update a Savings account Charge
      description: Currently Savings account Charges may be updated only if the Savings
        account is not yet approved.
      operationId: updateSavingsAccountCharge
      parameters:
      - name: savingsAccountId
        in: path
        description: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: savingsAccountChargeId
        in: path
        description: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse'
    post:
      tags:
      - Savings Charges
      summary: Pay a Savings account Charge | Waive off a Savings account Charge |
        Inactivate a Savings account Charge
      description: "Pay a Savings account Charge:\n\nAn active charge will be paid\
        \ when savings account is active and having sufficient balance.\n\nWaive off\
        \ a Savings account Charge:\n\nOutstanding charge amount will be waived off.\n\
        \nInactivate a Savings account Charge:\n\nA charge will be allowed to inactivate\
        \ when savings account is active and not having any dues as of today. If charge\
        \ is overpaid, corresponding charge payment transactions will be reversed.\n\
        \nShowing request/response for 'Pay a Savings account Charge'"
      operationId: payOrWaiveSavingsAccountCharge
      parameters:
      - name: savingsAccountId
        in: path
        description: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: savingsAccountChargeId
        in: path
        description: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse'
    delete:
      tags:
      - Savings Charges
      summary: Delete a Savings account Charge
      description: "Note: Currently, A Savings account Charge may only be removed\
        \ from Savings that are not yet approved."
      operationId: deleteSavingsAccountCharge
      parameters:
      - name: savingsAccountId
        in: path
        description: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: savingsAccountChargeId
        in: path
        description: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse'
  /savingsaccounts/{savingsAccountId}/charges:
    get:
      tags:
      - Savings Charges
      summary: List Savings Charges
      description: "Lists Savings Charges\n\nExample Requests:\n\nsavingsaccounts/1/charges\n\
        \nsavingsaccounts/1/charges?chargeStatus=all\n\nsavingsaccounts/1/charges?chargeStatus=inactive\n\
        \nsavingsaccounts/1/charges?chargeStatus=active\n\nsavingsaccounts/1/charges?fields=name,amountOrPercentage"
      operationId: retrieveAllSavingsAccountCharges
      parameters:
      - name: savingsAccountId
        in: path
        description: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeStatus
        in: query
        description: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSavingsAccountsSavingsAccountIdChargesResponse'
    post:
      tags:
      - Savings Charges
      summary: Create a Savings account Charge
      description: "Creates a Savings account Charge\n\nMandatory Fields for Savings\
        \ account Charges: chargeId, amount\n\nchargeId, amount, dueDate, dateFormat,\
        \ locale\n\nchargeId, amount, feeOnMonthDay, monthDayFormat, locale"
      operationId: addSavingsAccountCharge
      parameters:
      - name: savingsAccountId
        in: path
        description: savingsAccountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsSavingsAccountIdChargesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsSavingsAccountIdChargesResponse'
  /savingsaccounts/{savingsId}/transactions/template:
    get:
      operationId: retrieveTemplate_18
      parameters:
      - name: savingsId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /savingsaccounts/{savingsId}/transactions/{transactionId}:
    get:
      operationId: retrieveOne_22
      parameters:
      - name: savingsId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      operationId: adjustTransaction_1
      parameters:
      - name: savingsId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /savingsaccounts/{savingsId}/transactions:
    post:
      operationId: transaction_2
      parameters:
      - name: savingsId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /savingsaccounts/{accountId}:
    get:
      tags:
      - Savings Account
      summary: Retrieve a savings application/account
      description: |-
        Retrieves a savings application/account

        Example Requests :

        savingsaccounts/1


        savingsaccounts/1?associations=all
      operationId: retrieveOne_23
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      - name: chargeStatus
        in: query
        description: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsAccountIdResponse'
    put:
      tags:
      - Savings Account
      summary: Modify a savings application | Modify savings account withhold tax
        applicability
      description: "Modify a savings application:\n\nSavings application can only\
        \ be modified when in 'Submitted and pending approval' state. Once the application\
        \ is approved, the details cannot be changed using this method. Specific api\
        \ endpoints will be created to allow change of interest detail such as rate,\
        \ compounding period, posting period etc\n\nModify savings account withhold\
        \ tax applicability:\n\nSavings application's withhold tax can be modified\
        \ when in 'Active' state. Once the application is activated, can modify the\
        \ account withhold tax to post tax or vice-versaShowing request/response for\
        \ 'Modify a savings application'"
      operationId: update_18
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSavingsAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSavingsAccountsAccountIdResponse'
    post:
      tags:
      - Savings Account
      summary: Approve savings application | Undo approval savings application | Assign
        Savings Officer | Unassign Savings Officer | Reject savings application |
        Withdraw savings application | Activate a savings account | Close a savings
        account | Calculate Interest on Savings Account | Post Interest on Savings
        Account | Block Savings Account | Unblock Savings Account | Block Savings
        Account Credit transactions | Unblock Savings Account Credit transactions
        | Block Savings Account Debit transactions | Unblock Savings Account debit
        transactions
      description: "Approve savings application:\n\nApproves savings application so\
        \ long as its in 'Submitted and pending approval' state.\n\nUndo approval\
        \ savings application:\n\nWill move 'approved' savings application back to\
        \ 'Submitted and pending approval' state.\n\nAssign Savings Officer:\n\nAllows\
        \ you to assign Savings Officer for existing Savings Account.\n\nUnassign\
        \ Savings Officer:\n\nAllows you to unassign the Savings Officer.\n\nReject\
        \ savings application:\n\nRejects savings application so long as its in 'Submitted\
        \ and pending approval' state.\n\nWithdraw savings application:\n\nUsed when\
        \ an applicant withdraws from the savings application. It must be in 'Submitted\
        \ and pending approval' state.\n\nActivate a savings account:\n\nResults in\
        \ an approved savings application being converted into an 'active' savings\
        \ account.\n\nClose a savings account:\n\nResults in an Activated savings\
        \ application being converted into an 'closed' savings account.\n\nclosedOnDate\
        \ is closure date of savings account\n\nwithdrawBalance is a boolean description,\
        \ true value of this field performs a withdrawal transaction with account's\
        \ running balance.\n\nMandatory Fields: dateFormat,locale,closedOnDate\n\n\
        Optional Fields: note, withdrawBalance, paymentTypeId, accountNumber, checkNumber,\
        \ routingCode, receiptNumber, bankNumber\n\nCalculate Interest on Savings\
        \ Account:\n\nCalculates interest earned on a savings account based on todays\
        \ date. It does not attempt to post or credit the interest on the account.\
        \ That is responsibility of the Post Interest API that will likely be called\
        \ by overnight process.\n\nPost Interest on Savings Account:\n\nCalculates\
        \ and Posts interest earned on a savings account based on today's date and\
        \ whether an interest posting or crediting event is due.\n\nBlock Savings\
        \ Account:\n\nBlocks Savings account from all types of credit and debit transactions\n\
        \nUnblock Savings Account:\n\nUnblock a blocked account. On unblocking account,\
        \ user can perform debit and credit transactions\n\nBlock Savings Account\
        \ Credit transactions:\n\nSavings account will be blocked from all types of\
        \ credit transactions.\n\nUnblock Savings Account Credit transactions:\n\n\
        It unblocks the Saving account's credit operations. Now all types of credits\
        \ can be transacted to Savings account\n\nBlock Savings Account Debit transactions:\n\
        \nAll types of debit operations from Savings account wil be blocked\n\nUnblock\
        \ Savings Account debit transactions:\n\nIt unblocks the Saving account's\
        \ debit operations. Now all types of debits can be transacted from Savings\
        \ account\n\nShowing request/response for 'Unassign Savings Officer'"
      operationId: handleCommands_6
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsAccountIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsAccountIdResponse'
    delete:
      tags:
      - Savings Account
      summary: Delete a savings application
      description: "At present we support hard delete of savings application so long\
        \ as its in 'Submitted and pending approval' state. One the application is\
        \ moves past this state, it is not possible to do a 'hard' delete of the application\
        \ or the account. An API endpoint will be added to close/de-activate the savings\
        \ account."
      operationId: delete_18
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSavingsAccountsAccountIdResponse'
  /savingsaccounts:
    get:
      tags:
      - Savings Account
      summary: List savings applications/accounts
      description: |-
        Lists savings applications/accounts

        Example Requests:

        savingsaccounts


        savingsaccounts?fields=name
      operationId: retrieveAll_32
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: externalId
        in: query
        description: externalId
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsResponse'
    post:
      tags:
      - Savings Account
      summary: Submit new savings application
      description: "Submits new savings application\n\nMandatory Fields: clientId\
        \ or groupId, productId, submittedOnDate\n\nOptional Fields: accountNo, externalId,\
        \ fieldOfficerId\n\nInherited from Product (if not provided): nominalAnnualInterestRate,\
        \ interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,\
        \ minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType,\
        \ withdrawalFeeForTransfers, allowOverdraft, overdraftLimit, withHoldTax\n\
        \nAdditional Mandatory Field if Entity-Datatable Check is enabled for the\
        \ entity of type Savings: datatables"
      operationId: submitApplication_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsAccountsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsAccountsResponse'
  /savingsaccounts/gsim:
    post:
      tags:
      - Savings Account
      operationId: submitGSIMApplication
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /savingsaccounts/gsim/{parentAccountId}:
    put:
      tags:
      - Savings Account
      operationId: updateGsim
      parameters:
      - name: parentAccountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /savingsaccounts/gsimcommands/{parentAccountId}:
    post:
      tags:
      - Savings Account
      operationId: handleGSIMCommands
      parameters:
      - name: parentAccountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /savingsaccounts/downloadtemplate:
    get:
      tags:
      - Savings Account
      operationId: getSavingsTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /savingsaccounts/uploadtemplate:
    post:
      tags:
      - Savings Account
      operationId: postSavingsTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /savingsaccounts/transactions/downloadtemplate:
    get:
      tags:
      - Savings Account
      operationId: getSavingsTransactionTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /savingsaccounts/transactions/uploadtemplate:
    post:
      tags:
      - Savings Account
      operationId: postSavingsTransactionTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /savingsaccounts/template:
    get:
      tags:
      - Savings Account
      summary: Retrieve Savings Account Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Requests:

        savingsaccounts/template?clientId=1


        savingsaccounts/template?clientId=1&productId=1
      operationId: template_14
      parameters:
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int64
      - name: groupId
        in: query
        description: groupId
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        description: staffInSelectedOfficeOnly
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsAccountsTemplateResponse'
  /savingsproducts/template:
    get:
      tags:
      - Savings Product
      summary: Retrieve Savings Product Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        savingsproducts/template
      operationId: retrieveTemplate_19
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsProductsTemplateResponse'
  /savingsproducts/{productId}:
    get:
      tags:
      - Savings Product
      summary: Retrieve a Savings Product
      description: "Retrieves a Savings Product\n\nExample Requests:\n\nsavingsproducts/1\n\
        \nsavingsproducts/1?template=true\n\nsavingsproducts/1?fields=name,description"
      operationId: retrieveOne_24
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsProductsProductIdResponse'
    put:
      tags:
      - Savings Product
      summary: Update a Savings Product
      description: Updates a Savings Product
      operationId: update_19
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSavingsProductsProductIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSavingsProductsProductIdResponse'
    delete:
      tags:
      - Savings Product
      summary: Delete a Savings Product
      description: Deletes a Savings Product
      operationId: delete_19
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSavingsProductsProductIdResponse'
  /savingsproducts:
    get:
      tags:
      - Savings Product
      summary: List Savings Products
      description: |-
        Lists Savings Products

        Example Requests:

        savingsproducts

        savingsproducts?fields=name
      operationId: retrieveAll_33
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSavingsProductsResponse'
    post:
      tags:
      - Savings Product
      summary: Create a Savings Product
      description: "Creates a Savings Product\n\nMandatory Fields: name, shortName,\
        \ description, currencyCode, digitsAfterDecimal,inMultiplesOf, nominalAnnualInterestRate,\
        \ interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,accountingRule\n\
        \nMandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId,\
        \ savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId,\
        \ transfersInSuspenseAccountId, incomeFromPenaltyAccountId\n\nOptional Fields:\
        \ minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType,\
        \ withdrawalFeeForTransfers, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings,\
        \ penaltyToIncomeAccountMappings, charges, allowOverdraft, overdraftLimit,\
        \ minBalanceForInterestCalculation,withHoldTax,taxGroupId"
      operationId: create_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSavingsProductsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSavingsProductsResponse'
  /search:
    get:
      tags:
      - Search API
      summary: Search Resources
      description: "Example Requests:\n\nsearch?query=000000001\n\n\nsearch?query=Petra&resource=clients,groups\n\
        \n\nsearch?query=Petra&resource=clients,groups&exactMatch=true"
      operationId: searchData
      parameters:
      - name: query
        in: query
        description: query
        schema:
          type: string
      - name: resource
        in: query
        description: resource
        schema:
          type: string
      - name: exactMatch
        in: query
        description: exactMatch
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchResponse'
  /search/template:
    get:
      tags:
      - Search API
      summary: Retrive Adhoc Search query template
      description: |
        Mandatory Fields

        search?query=000000001
      operationId: retrieveAdHocSearchQueryTemplate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchResponse'
  /search/advance:
    post:
      tags:
      - Search API
      summary: Adhoc query search
      description: "AdHocQuery search has more search options, it is a POST request,\
        \ it uses request body to send search parameters\n\n\nMandatory fields:entities\n\
        \nOptional fields:loanStatus, loanProducts, offices, loanDateOption, loanFromDate,\
        \ loanToDate, \nincludeOutStandingAmountPercentage, outStandingAmountPercentageCondition,\
        \ \nminOutStandingAmountPercentage and maxOutStandingAmountPercentage OR outStandingAmountPercentage,\
        \ \nincludeOutstandingAmount, outstandingAmountCondition, \nminOutstandingAmount\
        \ and maxOutstandingAmount OR outstandingAmount"
      operationId: advancedSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAdhocQuerySearchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAdhocQuerySearchResponse'
  /self/accounttransfers/template:
    get:
      tags:
      - Self Account transfer
      summary: Retrieve Account Transfer Template
      description: |
        Returns list of loan/savings accounts that can be used for account transfer


        Example Requests:

        self/accounttransfers/template
      operationId: template_15
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountTransferTemplateResponse'
  /self/accounttransfers:
    post:
      tags:
      - Self Account transfer
      summary: Create new Transfer
      description: |
        Ability to create new transfer of monetary funds from one account to another.


        Example Requests:

         self/accounttransfers/
      operationId: create_13
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: ""
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostNewTransferResponse'
  /self/beneficiaries/tpt/template:
    get:
      tags:
      - Self Third Party Transfer
      summary: Beneficiary Third Party Transfer Template
      description: |-
        Returns Account Type enumerations. Self User is expected to know office name and account number to be able to add beneficiary.

        Example Requests:

        /self/beneficiaries/tpt/template
      operationId: template_16
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfBeneficiariesTPTTemplateResponse'
  /self/beneficiaries/tpt:
    get:
      tags:
      - Self Third Party Transfer
      summary: Get All TPT Beneficiary
      description: |-
        Api to get all third party beneficiary linked to current user.

        Example Requests:

        /self/beneficiaries/tpt
      operationId: retrieveAll_34
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSelfBeneficiariesTPTResponse'
    post:
      tags:
      - Self Third Party Transfer
      summary: Add TPT Beneficiary
      description: "Api to add third party beneficiary linked to current user.\n\n\
        Parameter Definitions\n\nname : Nick name for beneficiary, should be unique\
        \ for an self service user\n\nofficeName : Office Name of beneficiary(not\
        \ id)\n\naccountNumber : Account Number of beneficiary(not id)\n\ntransferLimit\
        \ : Each transfer initiated to this account will not exceed this amount\n\n\
        Example Requests:\n\n/self/beneficiaries/tpt\n\nMandatory Fields: name, officeName,\
        \ accountNumber, accountType\n\nOptional Fields: transferLimit"
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSelfBeneficiariesTPTRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSelfBeneficiariesTPTResponse'
  /self/beneficiaries/tpt/{beneficiaryId}:
    put:
      tags:
      - Self Third Party Transfer
      summary: Update TPT Beneficiary
      description: "Api to update third party beneficiary linked to current user.\n\
        \nExample Requests:\n\n/self/beneficiaries/tpt/{beneficiaryId}\n\nOptional\
        \ Fields: name, transferLimit"
      operationId: update_20
      parameters:
      - name: beneficiaryId
        in: path
        description: beneficiaryId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSelfBeneficiariesTPTBeneficiaryIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSelfBeneficiariesTPTBeneficiaryIdResponse'
    delete:
      tags:
      - Self Third Party Transfer
      summary: Delete TPT Beneficiary
      description: "Api to delete third party beneficiary linked to current user.\n\
        \nExample Requests:\n\n/self/beneficiaries/tpt/{beneficiaryId}"
      operationId: delete_20
      parameters:
      - name: beneficiaryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSelfBeneficiariesTPTBeneficiaryIdResponse'
  /self/clients/{clientId}:
    get:
      tags:
      - Self Client
      summary: Retrieve a Client
      description: "Retrieves a Client\n\nExample Requests:\n\nself/clients/1\n\n\
        self/clients/1?fields=id,displayName,officeName"
      operationId: retrieveOne_25
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdResponse'
  /self/clients/{clientId}/images:
    get:
      tags:
      - Self Client
      summary: Retrieve Client Image
      description: |-
        Optional arguments are identical to those of Get Image associated with an Entity (Binary file)

        Example Requests:

        self/clients/1/images
      operationId: retrieveImage
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: maxWidth
        in: query
        schema:
          type: integer
          format: int32
        example: maxWidth
      - name: maxHeight
        in: query
        schema:
          type: integer
          format: int32
        example: maxHeight
      - name: output
        in: query
        schema:
          type: string
        example: output
      responses:
        "200":
          description: OK
    post:
      tags:
      - Self Client
      operationId: addNewClientImage_2
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Content-Length
        in: header
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataBodyPart'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - Self Client
      operationId: deleteClientImage_1
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/clients/{clientId}/charges/{chargeId}:
    get:
      tags:
      - Self Client
      summary: Retrieve a Client Charge
      description: "Retrieves a Client Charge\n\nExample Requests:\n\nself/clients/1/charges/1\n\
        \n\nself/clients/1/charges/1?fields=name,id"
      operationId: retrieveClientCharge_1
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdChargesChargeIdResponse'
  /self/clients/{clientId}/transactions/{transactionId}:
    get:
      tags:
      - Self Client
      summary: Retrieve a Client Transaction
      description: "Retrieves a Client TransactionExample Requests:\n\nself/clients/1/transactions/1\n\
        \n\nself/clients/1/transactions/1?fields=id,officeName"
      operationId: retrieveClientTransaction_1
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsTransactionIdResponse'
  /self/clients/{clientId}/accounts:
    get:
      tags:
      - Self Client
      summary: Retrieve client accounts overview
      description: "An example of how a loan portfolio summary can be provided. This\
        \ is requested in a specific use case of the community application.\nIt is\
        \ quite reasonable to add resources like this to simplify User Interface development.\n\
        \nExample Requests:\n\nself/clients/1/accounts\n\n\nself/clients/1/accounts?fields=loanAccounts,savingsAccounts"
      operationId: retrieveAssociatedAccounts_1
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdAccountsResponse'
  /self/clients/{clientId}/obligeedetails:
    get:
      tags:
      - Self Client
      operationId: retrieveObligeeDetails_1
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/clients/{clientId}/transactions:
    get:
      tags:
      - Self Client
      summary: List Client Transactions
      description: |-
        The list capability of client transaction can support pagination.

        Example Requests:

        self/clients/189/transactions

        self/clients/189/transactions?offset=10&limit=50
      operationId: retrieveAllClientTransactions_1
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsResponse'
  /self/clients/{clientId}/charges:
    get:
      tags:
      - Self Client
      summary: List Client Charges
      description: |-
        The list capability of client charges supports pagination.

        Example Requests:

        self/clients/1/charges

        self/clients/1/charges?offset=0&limit=5
      operationId: retrieveAllClientCharges_1
      parameters:
      - name: clientId
        in: path
        description: clientId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeStatus
        in: query
        description: chargeStatus
        schema:
          type: string
          default: all
      - name: pendingPayment
        in: query
        description: pendingPayment
        schema:
          type: boolean
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsClientIdChargesResponse'
  /self/clients:
    get:
      tags:
      - Self Client
      summary: List Clients associated to the user
      description: "The list capability of clients can support pagination and sorting.\n\
        \nExample Requests:\n\nself/clients\n\nself/clients?fields=displayName,officeName\n\
        \nself/clients?offset=10&limit=50\n\nself/clients?orderBy=displayName&sortOrder=DESC"
      operationId: retrieveAll_35
      parameters:
      - name: displayName
        in: query
        description: displayName
        schema:
          type: string
      - name: firstName
        in: query
        description: firstName
        schema:
          type: string
      - name: lastName
        in: query
        description: lastName
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        description: status
        schema:
          type: string
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfClientsResponse'
  /self/loans/{loanId}/transactions/{transactionId}:
    get:
      tags:
      - Self Loans
      summary: Retrieve a Loan Transaction Details
      description: |-
        Retrieves a Loan Transaction DetailsExample Request:

        self/loans/5/transactions/3
      operationId: retrieveTransaction_1
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfLoansLoanIdTransactionsTransactionIdResponse'
  /self/loans/{loanId}/charges/{chargeId}:
    get:
      tags:
      - Self Loans
      summary: Retrieve a Loan Charge
      description: "Retrieves a Loan Charge\n\nExample Requests:\n\nself/loans/1/charges/1\n\
        \n\nself/loans/1/charges/1?fields=name,amountOrPercentage"
      operationId: retrieveLoanCharge_1
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        description: chargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfLoansLoanIdChargesResponse'
  /self/loans:
    post:
      tags:
      - Self Loans
      summary: Calculate Loan Repayment Schedule | Submit a new Loan Application
      description: "Calculate Loan Repayment Schedule:\n\nCalculates Loan Repayment\
        \ Schedule\n\nMandatory Fields: productId, principal, loanTermFrequency, loanTermFrequencyType,\
        \ numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod,\
        \ amortizationType, interestType, interestCalculationPeriodType, expectedDisbursementDate,\
        \ transactionProcessingStrategyId\n\nSubmit a new Loan Application:\n\nMandatory\
        \ Fields: clientId, productId, principal, loanTermFrequency, loanTermFrequencyType,\
        \ loanType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod,\
        \ amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyId,\
        \ expectedDisbursementDate, submittedOnDate, loanType\n\nAdditional Mandatory\
        \ Fields if interest recalculation is enabled for product and Rest frequency\
        \ not same as repayment period: recalculationRestFrequencyDate\n\nAdditional\
        \ Mandatory Fields if interest recalculation with interest/fee compounding\
        \ is enabled for product and compounding frequency not same as repayment period:\
        \ recalculationCompoundingFrequencyDate\n\nAdditional Mandatory Field if Entity-Datatable\
        \ Check is enabled for the entity of type loan: datatables\n\nOptional Fields:\
        \ graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged,\
        \ linkAccountId, allowPartialPeriodInterestCalcualtion, fixedEmiAmount, maxOutstandingLoanBalance,\
        \ disbursementData, graceOnArrearsAgeing, createStandingInstructionAtDisbursement\
        \ (requires linkedAccountId if set to true)\n\nShowing request/response for\
        \ 'Submit a new Loan Application'"
      operationId: calculateLoanScheduleOrSubmitLoanApplication_1
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSelfLoansRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSelfLoansResponse'
  /self/loans/{loanId}:
    get:
      tags:
      - Self Loans
      summary: Retrieve a Loan
      description: "Retrieves a Loan\n\nExample Requests:\n\nself/loans/1\n\n\nself/loans/1?fields=id,principal,annualInterestRate\n\
        \n\nself/loans/1?fields=id,principal,annualInterestRate&associations=repaymentSchedule,transactions"
      operationId: retrieveLoan_1
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfLoansLoanIdResponse'
    put:
      tags:
      - Self Loans
      summary: Update a Loan Application
      description: "Loan application can only be modified when in 'Submitted and pending\
        \ approval' state. Once the application is approved, the details cannot be\
        \ changed using this method."
      operationId: modifyLoanApplication_1
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSelfLoansLoanIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSelfLoansLoanIdResponse'
    post:
      tags:
      - Self Loans
      summary: Applicant Withdraws from Loan Application
      description: "Applicant Withdraws from Loan Application\n\nMandatory Fields:\
        \ withdrawnOnDate"
      operationId: stateTransitions_1
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSelfLoansLoanIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSelfLoansLoanIdResponse'
  /self/loans/{loanId}/guarantors:
    get:
      tags:
      - Self Loans
      operationId: retrieveGuarantorDetails_2
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/loans/{loanId}/charges:
    get:
      tags:
      - Self Loans
      summary: List Loan Charges
      description: "Lists loan Charges\n\nExample Requests:\n\nself/loans/1/charges\n\
        \n\nself/loans/1/charges?fields=name,amountOrPercentage"
      operationId: retrieveAllLoanCharges_1
      parameters:
      - name: loanId
        in: path
        description: loanId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSelfLoansLoanIdChargesResponse'
  /self/loans/template:
    get:
      tags:
      - Self Loans
      summary: Retrieve Loan Details Template
      description: |-
        Retrieves Loan Details Template

        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists

        Example Requests:

        self/loans/template?templateType=individual&clientId=1


        self/loans/template?templateType=individual&clientId=1&productId=1
      operationId: template_17
      parameters:
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      - name: templateType
        in: query
        description: templateType
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfLoansTemplateResponse'
  /self/pockets:
    get:
      tags:
      - Pocket
      summary: Retrieve accounts linked to pocket
      description: |-
        All linked loan

        Example Requests:


        self/pockets
      operationId: retrieveAll_36
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsLinkedToPocketResponse'
    post:
      tags:
      - Pocket
      summary: Link/delink accounts to/from pocket
      description: "Pockets behave as favourites. An user can link his/her Loan, Savings\
        \ and Share accounts to pocket for faster access. In a similar way linked\
        \ accounts can be delinked from the pocket.\n\nExample Requests:\n\nself/pockets?command=linkAccounts\n\
        \nself/pockets?command=delinkAccounts"
      operationId: handleCommands_7
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLinkDelinkAccountsToFromPocketResponse'
  /self/loanproducts:
    get:
      tags:
      - Self Loan Products
      operationId: retrieveAllLoanProducts_1
      parameters:
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/loanproducts/{productId}:
    get:
      tags:
      - Self Loan Products
      operationId: retrieveLoanProductDetails_1
      parameters:
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/savingsproducts/{productId}:
    get:
      operationId: retrieveOne_26
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/savingsproducts:
    get:
      operationId: retrieveAll_37
      parameters:
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/products/share/{productId}:
    get:
      operationId: retrieveProduct_1
      parameters:
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/products/share:
    get:
      operationId: retrieveAllProducts_1
      parameters:
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/registration:
    post:
      tags:
      - Self Service Registration
      operationId: createSelfServiceRegistrationRequest
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/registration/user:
    post:
      tags:
      - Self Service Registration
      operationId: createSelfServiceUser
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/runreports/{reportName}:
    get:
      tags:
      - Self Run Report
      summary: Running A Report
      description: |-
        Example Requests:


        self/runreports/Client%20Details?R_officeId=1


        self/runreports/Client%20Details?R_officeId=1&exportCSV=true
      operationId: runReport_1
      parameters:
      - name: reportName
        in: path
        description: reportName
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/GetRunReportResponse'
  /self/savingsaccounts/{accountId}:
    get:
      tags:
      - Self Savings Account
      summary: Retrieve a savings account
      description: |-
        Retrieves a savings account

        Example Requests :

        self/savingsaccounts/1


        self/savingsaccounts/1?associations=transactions
      operationId: retrieveSavings
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeStatus
        in: query
        description: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfSavingsAccountsResponse'
    put:
      tags:
      - Self Savings Account
      operationId: modifySavingsAccountApplication
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/savingsaccounts:
    post:
      tags:
      - Self Savings Account
      operationId: submitSavingsAccountApplication
      parameters:
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/savingsaccounts/{accountId}/charges:
    get:
      tags:
      - Self Savings Account
      summary: List Savings Charges
      description: "Lists Savings Charges\n\nExample Requests:\n\nself/savingsaccounts/1/charges\n\
        \nself/savingsaccounts/1/charges?chargeStatus=inactive\n\nself/savingsaccounts/1/charges?fields=name,amountOrPercentage"
      operationId: retrieveAllSavingsAccountCharges_1
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeStatus
        in: query
        description: chargeStatus
        schema:
          type: string
          default: all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSelfSavingsAccountsAccountIdChargesResponse'
  /self/savingsaccounts/{accountId}/charges/{savingsAccountChargeId}:
    get:
      tags:
      - Self Savings Account
      summary: Retrieve a Savings account Charge
      description: "Retrieves a Savings account Charge\n\nExample Requests:\n\nself/savingsaccounts/1/charges/5\n\
        \n\nself/savingsaccounts/1/charges/5?fields=name,amountOrPercentage"
      operationId: retrieveSavingsAccountCharge_1
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: savingsAccountChargeId
        in: path
        description: savingsAccountChargeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse'
  /self/savingsaccounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
      - Self Savings Account
      summary: Retrieve Savings Account Transaction
      description: |-
        Retrieves Savings Account Transaction

        Example Requests:

        self/savingsaccounts/1/transactions/1
      operationId: retrieveSavingsTransaction
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse'
  /self/savingsaccounts/template:
    get:
      tags:
      - Self Savings Account
      operationId: template_18
      parameters:
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/authentication:
    post:
      tags:
      - Self Authentication
      summary: Verify authentication
      description: |-
        Authenticates the credentials provided and returns the set roles and permissions allowed.

        Please visit this link for more info - https://demo.fineract.dev/fineract-provider/api-docs/apiLive.htm#selfbasicauth
      operationId: authenticate_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSelfAuthenticationResponse'
  /self/user:
    put:
      tags:
      - Self User
      summary: Update User
      description: "This API can be used by Self Service user to update their own\
        \ user information. Currently, \"password\" and \"repeatPassword\" are the\
        \ only parameters accepted."
      operationId: update_21
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PutSelfUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PutSelfUserResponse'
  /self/userdetails:
    get:
      tags:
      - Self User Details
      summary: Fetch authenticated user details
      description: |-
        Checks the Authentication and returns the set roles and permissions allowed

        For more info visit this link - https://demo.fineract.dev/fineract-provider/api-docs/apiLive.htm#selfoauth
      operationId: fetchAuthenticatedUserData_1
      parameters:
      - name: access_token
        in: query
        description: äccess_token
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSelfUserDetailsResponse'
  /self/shareaccounts:
    post:
      tags:
      - Self Share Accounts
      summary: Submit new share application
      description: "Mandatory fields:\n\nclientId, productId, submittedDate, savingsAccountId,\
        \ requestedShares, applicationDate\n\n\nOptional Fields\n\naccountNo, externalId\n\
        \n\nInherited from Product (if not provided)\n\nminimumActivePeriod, minimumActivePeriodFrequencyType,\
        \ lockinPeriodFrequency, lockinPeriodFrequencyType."
      operationId: createAccount_1
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostNewShareApplicationResponse'
  /self/shareaccounts/{accountId}:
    get:
      tags:
      - Self Share Accounts
      summary: Retrieve a share application/account
      description: |2



        Example Requests:

        self/shareaccounts/12
      operationId: retrieveShareAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /self/shareaccounts/template:
    get:
      tags:
      - Self Share Accounts
      summary: Retrieve Share Account Template
      description: "This is a convenience resource. It can be useful when building\
        \ maintenance user interface screens for client applications. The template\
        \ data returned consists of any or all of:\nField Defaults\n\nAllowed Value\
        \ Lists\n\n\nArguments\n\nclientId:Integer mandatory\nproductId:Integer optionalIf\
        \ entered, productId, productName and selectedProduct fields are returned.\n\
        Example Requests:\n\nself/shareaccounts/template?clientId=14\n\nself/shareaccounts/template?clientId=14&productId=3\n"
      operationId: template_19
      parameters:
      - name: clientId
        in: query
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetShareAccountsClientIdProductIdResponse'
  /self/surveys/scorecards/clients/{clientId}:
    get:
      tags:
      - Self Score Card
      operationId: findByClient
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScorecardData'
  /self/surveys/scorecards/{surveyId}:
    post:
      tags:
      - Self Score Card
      operationId: createScorecard
      parameters:
      - name: surveyId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardData'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /self/surveys:
    get:
      tags:
      - Self Spm
      operationId: fetchAllSurveys
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyData'
  /shareproduct/{productId}/dividend/{dividendId}:
    get:
      tags:
      - Self Dividend
      operationId: retrieveDividendDetails
      parameters:
      - name: dividendId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      - name: accountNo
        in: query
        schema:
          type: string
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - Self Dividend
      operationId: updateDividendDetail
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: dividendId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - Self Dividend
      operationId: deleteDividendDetail
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: dividendId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /shareproduct/{productId}/dividend:
    get:
      tags:
      - Self Dividend
      operationId: retrieveAll_38
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      - name: status
        in: query
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - Self Dividend
      operationId: createDividendDetail
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /taxes/component/template:
    get:
      tags:
      - Tax Components
      operationId: retrieveTemplate_20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /taxes/component:
    get:
      tags:
      - Tax Components
      summary: List Tax Components
      description: List Tax Components
      operationId: retrieveAllTaxComponents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTaxesComponentsResponse'
    post:
      tags:
      - Tax Components
      summary: Create a new Tax Component
      description: "Creates a new Tax Component\n\nMandatory Fields: name, percentage\n\
        \nOptional Fields: debitAccountType, debitAcountId, creditAccountType, creditAcountId,\
        \ startDate"
      operationId: createTaxCompoent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTaxesComponentsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTaxesComponentsResponse'
  /taxes/component/{taxComponentId}:
    get:
      tags:
      - Tax Components
      summary: Retrieve Tax Component
      description: Retrieve Tax Component
      operationId: retrieveTaxComponent
      parameters:
      - name: taxComponentId
        in: path
        description: taxComponentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxesComponentsResponse'
    put:
      tags:
      - Tax Components
      summary: Update Tax Component
      description: Updates Tax component. Debit and credit account details cannot
        be modified. All the future tax components would be replaced with the new
        percentage.
      operationId: updateTaxCompoent
      parameters:
      - name: taxComponentId
        in: path
        description: taxComponentId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTaxesComponentsTaxComponentIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTaxesComponentsTaxComponentIdResponse'
  /taxes/group/template:
    get:
      tags:
      - Tax Group
      operationId: retrieveTemplate_21
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /taxes/group:
    get:
      tags:
      - Tax Group
      summary: List Tax Group
      description: List Tax Group
      operationId: retrieveAllTaxGroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTaxesGroupResponse'
    post:
      tags:
      - Tax Group
      summary: Create a new Tax Group
      description: "Create a new Tax Group\nMandatory Fields: name and taxComponents\n\
        Mandatory Fields in taxComponents: taxComponentId\nOptional Fields in taxComponents:\
        \ id, startDate and endDate"
      operationId: createTaxGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTaxesGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTaxesGroupResponse'
  /taxes/group/{taxGroupId}:
    get:
      tags:
      - Tax Group
      summary: Retrieve Tax Group
      description: Retrieve Tax Group
      operationId: retrieveTaxGroup
      parameters:
      - name: taxGroupId
        in: path
        description: taxGroupId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxesGroupResponse'
    put:
      tags:
      - Tax Group
      summary: Update Tax Group
      description: Updates Tax Group. Only end date can be up-datable and can insert
        new tax components.
      operationId: updateTaxGroup
      parameters:
      - name: taxGroupId
        in: path
        description: taxGroupId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTaxesGroupTaxGroupIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTaxesGroupTaxGroupIdResponse'
  /surveys/{surveyId}/lookuptables:
    get:
      tags:
      - SPM API - LookUp Table
      summary: List all Lookup Table entries
      description: List all Lookup Table entries for a survey.
      operationId: fetchLookupTables
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LookupTableData'
    post:
      tags:
      - SPM API - LookUp Table
      summary: Create a Lookup Table entry
      description: "Add a new entry to a survey.\n\nMandatory Fields\nkey, score,\
        \ validFrom, validTo"
      operationId: createLookupTable
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupTableData'
      responses:
        "200":
          description: OK
  /surveys/{surveyId}/lookuptables/{key}:
    get:
      tags:
      - SPM API - LookUp Table
      summary: Retrieve a Lookup Table entry
      description: Retrieve a Lookup Table entry for a survey.
      operationId: findLookupTable
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      - name: key
        in: path
        description: Enter key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTableData'
  /surveys/scorecards/clients/{clientId}:
    get:
      tags:
      - Score Card
      operationId: findByClient_1
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScorecardData'
  /surveys/scorecards/{surveyId}:
    get:
      tags:
      - Score Card
      summary: List all Scorecard entries
      description: List all Scorecard entries for a survey.
      operationId: findBySurvey
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scorecard'
    post:
      tags:
      - Score Card
      summary: Create a Scorecard entry
      description: "Add a new entry to a survey.\n\nMandatory Fields\nclientId, createdOn,\
        \ questionId, responseId, staffId"
      operationId: createScorecard_1
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: scorecardData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardData'
      responses:
        "200":
          description: OK
  /surveys/scorecards/{surveyId}/clients/{clientId}:
    get:
      tags:
      - Score Card
      operationId: findBySurveyAndClient
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      - name: clientId
        in: path
        description: Enter clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScorecardData'
  /surveys:
    get:
      tags:
      - Spm-Surveys
      summary: List all Surveys
      operationId: fetchAllSurveys_1
      parameters:
      - name: isActive
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyData'
    post:
      tags:
      - Spm-Surveys
      summary: Create a Survey
      description: "Adds a new survey to collect client related data.\n\nMandatory\
        \ Fields\n\ncountryCode, key, name, questions, responses, sequenceNo, text,\
        \ description"
      operationId: createSurvey
      requestBody:
        description: Create survey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyData'
      responses:
        "200":
          description: OK
  /surveys/{id}:
    get:
      tags:
      - Spm-Surveys
      summary: Retrieve a Survey
      operationId: findSurvey
      parameters:
      - name: id
        in: path
        description: Enter id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyData'
    put:
      tags:
      - Spm-Surveys
      operationId: editSurvey
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyData'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - Spm-Surveys
      summary: Deactivate Survey
      operationId: activateOrDeactivateSurvey
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /templates/{templateId}:
    get:
      tags:
      - User Generated Documents
      summary: Retrieve a UGD
      description: |-
        Example Requests:

        templates/1
      operationId: retrieveOne_27
      parameters:
      - name: templateId
        in: path
        description: templateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesTemplateIdResponse'
    put:
      tags:
      - User Generated Documents
      summary: Update a UGD
      operationId: saveTemplate
      parameters:
      - name: templateId
        in: path
        description: templateId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTemplatesTemplateIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTemplatesTemplateIdResponse'
    post:
      tags:
      - User Generated Documents
      operationId: mergeTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
    delete:
      tags:
      - User Generated Documents
      summary: Delete a UGD
      operationId: deleteTemplate
      parameters:
      - name: templateId
        in: path
        description: templateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTemplatesTemplateIdResponse'
  /templates:
    get:
      tags:
      - User Generated Documents
      summary: Retrieve all UGDs
      description: "Example Requests:\n\ntemplates\n\nIt is also possible to get specific\
        \ UGDs by entity and type:\n\ntemplates?type=0&entity=0\n[Entity: Id]\n\n\n\
        \n\n\nclient: 0, loan: 1\n\n[Type: Id]\n\n\n\nDocument: 0, E-Mail (not yet):\
        \ 1,  SMS: 2"
      operationId: retrieveAll_39
      parameters:
      - name: typeId
        in: query
        description: typeId
        schema:
          type: integer
          format: int32
          default: -1
      - name: entityId
        in: query
        description: entityId
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesResponse'
    post:
      tags:
      - User Generated Documents
      summary: Add a UGD
      description: |-
        Adds a new UGD.

        Mandatory Fields
        name



        Example Requests:

        templates/1
      operationId: createTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTemplatesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTemplatesResponse'
  /templates/{templateId}/template:
    get:
      tags:
      - User Generated Documents
      operationId: getTemplateByTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /templates/template:
    get:
      tags:
      - User Generated Documents
      summary: Retrieve UGD Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for UGDs. The UGD data returned consists of any or all of:

        ARGUMENTS
        name String entity String type String text String optional mappers Mapper optional
        Example Request:

        templates/template
      operationId: template_20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesTemplateResponse'
  /passwordpreferences:
    get:
      tags:
      - Password preferences
      operationId: retrieve_1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'
    put:
      tags:
      - Password preferences
      summary: Update password preferences
      operationId: update_22
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPasswordPreferencesTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
  /passwordpreferences/template:
    get:
      tags:
      - Password preferences
      summary: List Application Password validation policies
      description: |-
        ARGUMENTS
        Example Requests:

        passwordpreferences
      operationId: template_21
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'
  /permissions:
    get:
      tags:
      - Permissions
      summary: List Application Permissions
      description: "ARGUMENTS\nmakerCheckerableoptional, Values are true, false. Default\
        \ is false.\nIf makerCheckerable=false or not supplied then a list of application\
        \ permissions is returned. The \"selected\" attribute is always true in this\
        \ case.\n\nIf makerCheckerable=true then the \"selected\" attribute shows\
        \ whether the permission is enabled for Maker Check functionality.\n\nNote:\
        \ Each Apache Fineract transaction is associated with a permission.\n\nExample\
        \ Requests:\n\npermissions\n\n\npermissions?makerCheckerable=true\n\n\npermissions?fields=grouping,code"
      operationId: retrieveAllPermissions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPermissionsResponse'
    put:
      tags:
      - Permissions
      summary: Enable/Disable Permissions for Maker Checker
      operationId: updatePermissionsDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPermissionsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /roles:
    get:
      tags:
      - Roles
      summary: List Roles
      description: |-
        Example Requests:

        roles


        roles?fields=name
      operationId: retrieveAllRoles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetRolesResponse'
    post:
      tags:
      - Roles
      summary: Create a New Role
      description: "Mandatory Fields\nname, description"
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRolesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRolesResponse'
  /roles/{roleId}:
    get:
      tags:
      - Roles
      summary: Retrieve a Role
      description: |-
        Example Requests:

        roles/1


        roles/1?fields=name
      operationId: retrieveRole
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRolesRoleIdResponse'
    put:
      tags:
      - Roles
      summary: Update a Role
      operationId: updateRole
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRolesRoleIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRolesRoleIdResponse'
    post:
      tags:
      - Roles
      summary: Enable Role | Disable Role
      description: "Description : Enable role in case role is disabled. | Disable\
        \ the role in case role is not associated with any users.\n\n\n\n\n\nExample\
        \ Request:   https://DomainName/api/v1/roles/{roleId}?command=enable\n\n\n\
        \n\n\nhttps://DomainName/api/v1/roles/{roleId}?command=disable"
      operationId: actionsOnRoles
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRolesRoleIdResponse'
    delete:
      tags:
      - Roles
      summary: Delete a Role
      description: "Description : Delete the role in case role is not associated with\
        \ any users."
      operationId: deleteRole
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRolesRoleIdResponse'
  /roles/{roleId}/permissions:
    get:
      tags:
      - Roles
      summary: Retrieve a Role's Permissions
      description: |-
        Example Requests:

        roles/1/permissions
      operationId: retrieveRolePermissions
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponse'
    put:
      tags:
      - Roles
      summary: Update a Role's Permissions
      operationId: updateRolePermissions
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRolesRoleIdPermissionsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRolesRoleIdPermissionsResponse'
  /users/{userId}:
    get:
      tags:
      - Users
      summary: Retrieve a User
      description: "Example Requests:\n\nusers/1\n\n\nusers/1?template=true\n\n\n\
        users/1?fields=username,officeName"
      operationId: retrieveOne_28
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersUserIdResponse'
    put:
      tags:
      - Users
      summary: Update a User
      description: When updating a password you must provide the repeatPassword parameter
        also.
      operationId: update_23
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUsersUserIdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutUsersUserIdResponse'
    delete:
      tags:
      - Users
      summary: Delete a User
      description: Removes the user and the associated roles and permissions.
      operationId: delete_21
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUsersUserIdResponse'
  /users/downloadtemplate:
    get:
      tags:
      - Users
      operationId: getUserTemplate
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateFormat
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.ms-excel: {}
  /users/uploadtemplate:
    post:
      tags:
      - Users
      operationId: postUsersTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataContentDisposition'
                locale:
                  type: string
                dateFormat:
                  type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /users/template:
    get:
      tags:
      - Users
      summary: Retrieve User Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed description Lists
        Example Request:

        users/template
      operationId: template_22
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersTemplateResponse'
  /users:
    get:
      tags:
      - Users
      summary: Retrieve list of users
      description: "Example Requests:\n\nusers\n\n\nusers?fields=id,username,email,officeName"
      operationId: retrieveAll_40
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUsersResponse'
    post:
      tags:
      - Users
      summary: Create a User
      description: "Adds new application user.\n\nNote: Password information is not\
        \ required (or processed). Password details at present are auto-generated\
        \ and then sent to the email account given (which is why it can take a few\
        \ seconds to complete).\n\nMandatory Fields: \nusername, firstname, lastname,\
        \ email, officeId, roles, sendPasswordToEmail\n\nOptional Fields: \nstaffId,passwordNeverExpires,isSelfServiceUser,clients"
      operationId: create_14
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUsersRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUsersResponse'
components:
  schemas:
    PostRunaccrualsRequest:
      required:
      - tillDate
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        tillDate:
          type: string
          description: which specifies periodic accruals should happen till the given
            Date
          example: 04 June 2014
      description: runaccrualsRequest
    PutGlClosuresRequest:
      type: object
      properties:
        comments:
          type: string
          example: All transactions verified by Johnny Cash
      description: PutGlClosuresRequest
    PutGlClosuresResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
        comments:
          type: string
          example: All transactions verified by Johnny Cash
      description: PutGlClosuresResponse
    GetGlClosureResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 7
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        closingDate:
          type: string
          format: date
        deleted:
          type: boolean
          example: false
        createdDate:
          type: string
          format: date
        lastUpdatedDate:
          type: string
          format: date
        createdByUserId:
          type: integer
          format: int64
          example: 1
        createdByUsername:
          type: string
          example: mifos
        lastUpdatedByUserId:
          type: integer
          format: int64
          example: 1
        lastUpdatedByUsername:
          type: string
          example: mifos
        comments:
          type: string
          example: closed
      description: GetGLClosureResponse
    DeleteGlClosuresResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
      description: DeleteGlClosuresResponse
    PostGlClosuresRequest:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        closingDate:
          type: string
          format: date
        comments:
          type: string
          example: The accountants are heading for a carribean vacation
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
      description: PostGLCLosuresRequest
    PostGlClosuresResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
      description: PostGlClosuresResponse
    CodeValueData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        active:
          type: boolean
        mandatory:
          type: boolean
    EnumOptionData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        value:
          type: string
    FinancialActivityData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        mappedGLAccountType:
          type: string
          enum:
          - ASSET
          - LIABILITY
          - EQUITY
          - INCOME
          - EXPENSE
    GLAccountData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        glCode:
          type: string
        type:
          $ref: '#/components/schemas/EnumOptionData'
        tagId:
          $ref: '#/components/schemas/CodeValueData'
        rowIndex:
          type: integer
          format: int32
        typeId:
          type: integer
          format: int32
    GetFinancialActivityAccountsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        financialActivityData:
          $ref: '#/components/schemas/FinancialActivityData'
        glAccountData:
          $ref: '#/components/schemas/GLAccountData'
      description: GetFinancialActivityAccountsResponse
    PostFinancialActivityAccountsRequest:
      type: object
      properties:
        financialActivityId:
          type: integer
          format: int64
          example: 200
        glAccountId:
          type: integer
          format: int64
          example: 2
      description: PostFinancialActivityAccountsRequest
    PutFinancialActivityAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        comments:
          $ref: '#/components/schemas/PutFinancialActivityAccountscommentsSwagger'
      description: PutFinancialActivityAccountsResponse
    PutFinancialActivityAccountscommentsSwagger:
      type: object
      properties:
        glAccountId:
          type: integer
          format: int64
          example: 1
    DeleteFinancialActivityAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteFinancialActivityAccountsResponse
    PostFinancialActivityAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostFinancialActivityAccountsResponse
    GetGLAccountsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 16
        name:
          type: string
          example: Cash
        parentId:
          type: integer
          format: int64
          example: 1
        glCode:
          type: string
          example: "100001"
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/EnumOptionData'
        usage:
          $ref: '#/components/schemas/EnumOptionData'
        description:
          type: string
          example: Desc
        nameDecorated:
          type: string
          example: '....Cash'
        tagId:
          $ref: '#/components/schemas/CodeValueData'
        organizationRunningBalance:
          type: integer
          format: int64
          example: 118437
      description: GetGLAccountsResponse
    FormDataContentDisposition:
      type: object
      properties:
        type:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        fileName:
          type: string
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int64
        name:
          type: string
    PutGLAccountsRequest:
      type: object
      properties:
        name:
          type: string
          example: Cash at Bangalore
      description: PutGLAccountsRequest
    PutGLAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutGLAccountsResponsechangesSwagger'
      description: PutGLAccountsResponse
    PutGLAccountsResponsechangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: Cash at Bangalore
    GetGLAccountsTemplateResponse:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/EnumOptionData'
        usage:
          $ref: '#/components/schemas/EnumOptionData'
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        usageOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        assetHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        liabilityHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        equityHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        expenseHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        allowedAssetsTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedLiabilitiesTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedEquityTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedIncomeTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedExpensesTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
      description: GetGLAccountsTemplateResponse
    DeleteGLAccountsRequest:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteGLAccountsRequest
    PostGLAccountsRequest:
      type: object
      properties:
        name:
          type: string
          example: Cash at Bangalore
        glCode:
          type: string
          example: "100001"
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          type: string
          example: "1"
        tagId:
          type: string
          example: "10"
        parentId:
          type: integer
          format: int64
          example: 1
        usage:
          $ref: '#/components/schemas/EnumOptionData'
        description:
          type: string
          example: Desc
      description: PostGLAccountsRequest
    PostGLAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 22
      description: PostGLAccountsResponse
    JournalEntryData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        glAccountId:
          type: integer
          format: int64
        glAccountType:
          $ref: '#/components/schemas/EnumOptionData'
        transactionDate:
          type: string
          format: date
        entryType:
          $ref: '#/components/schemas/EnumOptionData'
        amount:
          type: number
        transactionId:
          type: string
        rowIndex:
          type: integer
          format: int32
    PostJournalEntriesTransactionIdRequest:
      type: object
      properties:
        officeId:
          type: integer
          description: "1"
          format: int64
      description: PostJournalEntriesTransactionIdRequest
    PostJournalEntriesTransactionIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          description: "1"
          format: int64
      description: PostJournalEntriesTransactionIdResponse
    JournalEntryCommand:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        transactionDate:
          type: string
          format: date
        comments:
          type: string
        referenceNumber:
          type: string
        accountingRuleId:
          type: integer
          format: int64
        credits:
          type: array
          items:
            $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'
        debits:
          type: array
          items:
            $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'
    SingleDebitOrCreditEntryCommand:
      type: object
      properties:
        glAccountId:
          type: integer
          format: int64
        amount:
          type: number
        comments:
          type: string
        parametersPassedInRequest:
          uniqueItems: true
          type: array
          items:
            type: string
        glAmountChanged:
          type: boolean
        glAccountIdChanged:
          type: boolean
        commentsChanged:
          type: boolean
    PostJournalEntriesResponse:
      type: object
      properties:
        officeId:
          type: integer
          description: "1"
          format: int64
        transactionId:
          type: string
          description: RS9MCISID4WK1ZM
      description: PostJournalEntriesResponse
    DateParam:
      type: object
    PutProvisioningEntriesRequest:
      type: object
      properties:
        command:
          type: string
          example: recreateprovisioningentry
      description: PutProvisioningEntriesRequest
    PutProvisioningEntriesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PutProvisioningEntriesResponse
    PostProvisioningEntriesRequest:
      type: object
      properties:
        date:
          type: string
          example: 16 October 2015
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        createjournalentries:
          type: string
          example: "true"
        provisioningentry:
          type: string
        entries:
          type: string
      description: PostProvisioningEntriesRequest
    PostProvisioningEntriesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostProvisioningEntriesResponse
    LoanProductProvisioningEntryData:
      type: object
      properties:
        historyId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        currencyCode:
          type: string
        productId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        overdueInDays:
          type: integer
          format: int64
        percentage:
          type: number
        liablityAccount:
          type: integer
          format: int64
        expenseAccount:
          type: integer
          format: int64
        criteriaId:
          type: integer
          format: int64
        outstandingBalance:
          type: number
    ProvisioningEntryData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        entries:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/LoanProductProvisioningEntryData'
    GetAccountRulesTemplateResponse:
      type: object
      properties:
        systemDefined:
          type: boolean
          example: false
        allowedOffices:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        allowedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
      description: GetAccountRulesTemplateResponse
    OfficeData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        openingDate:
          type: string
          format: date
        hierarchy:
          type: string
        rowIndex:
          type: integer
          format: int32
    DeleteAccountingRulesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteAccountingRulesResponse
    AccountingTagRuleData:
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/CodeValueData'
    GetAccountRulesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        name:
          type: string
        description:
          type: string
        systemDefined:
          type: boolean
        allowMultipleDebitEntries:
          type: boolean
        allowMultipleCreditEntries:
          type: boolean
        creditTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
        debitTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
      description: GetAccountRulesResponse
    PutAccountingRulesRequest:
      type: object
      properties:
        name:
          type: string
          example: Employee Salary posting rule
      description: PutAccountingRulesRequest
    PutAccountingRulesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutAccountingRulesResponsechangesSwagger'
      description: PutAccountingRulesResponse
    PutAccountingRulesResponsechangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: Employee Salary posting rule
    AccountingRuleData:
      type: object
      properties:
        creditTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
        debitTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
    PostAccountingRulesRequest:
      type: object
      properties:
        name:
          type: string
          example: test
        officeId:
          type: integer
          format: int64
          example: 1
        accountToDebit:
          type: integer
          format: int64
          example: 21
        accountToCredit:
          type: integer
          format: int64
          example: 9
        description:
          type: string
          example: Employee salary
      description: PostAccountingRulesRequest
    PostAccountingRulesResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostAccountingRulesResponse
    Header:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    PostBatchesRequest:
      type: object
      properties:
        requestId:
          type: integer
          format: int64
          example: 1
        relativeUrl:
          type: string
          example: clients
        method:
          type: string
          example: POST
        headers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Header'
        reference:
          type: integer
          format: int64
          example: 1
        body:
          $ref: '#/components/schemas/PostBodyRequestSwagger'
      description: PostBatchesRequest
    PostBodyRequestSwagger:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        firstname:
          type: string
          example: '"Petra"'
        lastname:
          type: string
          example: '"Yton"'
        externalId:
          type: string
          example: '"ex_externalId1"'
        dateFormat:
          type: string
          example: '"dd MMMM yyyy"'
        locale:
          type: string
          example: '"en"'
        active:
          type: boolean
          example: true
        activationDate:
          type: string
          example: '"04 March 2009"'
        submittedOnDate:
          type: string
          example: '"04 March 2009"'
    BatchResponse:
      type: object
      properties:
        requestId:
          type: integer
          format: int64
        statusCode:
          type: integer
          format: int32
        headers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Header'
        body:
          type: string
    AppUserData:
      type: object
      properties:
        rowIndex:
          type: integer
          format: int32
        clients:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/ClientData'
        selfServiceUser:
          type: boolean
    ClientData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        activationDate:
          type: string
          format: date
        firstname:
          type: string
        lastname:
          type: string
        officeName:
          type: string
        imageId:
          type: integer
          format: int64
        imagePresent:
          type: boolean
        timeline:
          $ref: '#/components/schemas/ClientTimelineData'
        savingsAccountId:
          type: integer
          format: int64
        isAddressEnabled:
          type: boolean
        rowIndex:
          type: integer
          format: int32
    ClientTimelineData:
      type: object
    GetMakerCheckersSearchTemplateResponse:
      type: object
      properties:
        appUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppUserData'
        actionNames:
          type: array
          items:
            type: string
        entityNames:
          type: array
          items:
            type: string
        processingResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingResultLookup'
      description: GetMakerCheckersSearchTemplateResponse
    ProcessingResultLookup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        processingResult:
          type: string
    GetMakerCheckerResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        actionName:
          type: string
        entityName:
          type: string
        resourceId:
          type: integer
          format: int64
        subresourceId:
          type: integer
          format: int64
        maker:
          type: string
        madeOnDate:
          type: string
          format: date-time
        checker:
          type: string
        checkedOnDate:
          type: string
          format: date-time
        processingResult:
          type: string
        commandAsJson:
          type: string
        officeName:
          type: string
        groupLevelName:
          type: string
        groupName:
          type: string
        clientName:
          type: string
        loanAccountNo:
          type: string
        savingsAccountNo:
          type: string
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        url:
          type: string
      description: GetMakerCheckerResponse
    PostMakerCheckersResponse:
      type: object
      properties:
        auditId:
          type: integer
          format: int64
          example: 1
      description: PostMakerCheckersResponse
    GetAccountNumberFormatsResponseTemplate:
      type: object
      properties:
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        prefixTypeOptions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EnumOptionData'
      description: GetAccountNumberFormatsResponseTemplate
    GetAccountNumberFormatsIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        accountType:
          $ref: '#/components/schemas/EnumOptionData'
        prefixType:
          $ref: '#/components/schemas/EnumOptionData'
      description: GetAccountNumberFormatsIdResponse
    PutAccountNumberFormatsRequest:
      type: object
      properties:
        prefixType:
          type: integer
          format: int64
          example: 1
      description: PutAccountNumberFormatsRequest
    PutAccountNumberFormatsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 2
        changes:
          $ref: '#/components/schemas/PutAccountNumberFormatschangesSwagger'
      description: PutAccountNumberFormatsResponse
    PutAccountNumberFormatschangesSwagger:
      type: object
      properties:
        prefixType:
          type: integer
          format: int64
    DeleteAccountNumberFormatsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 2
      description: DeleteAccountNumberFormatsResponse
    PostAccountNumberFormatsRequest:
      type: object
      properties:
        accountType:
          type: integer
          format: int64
          example: 1
        prefixType:
          type: integer
          format: int64
          example: 101
      description: PostAccountNumberFormatsRequest
    PostAccountNumberFormatsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
      description: PostAccountNumberFormatsResponse
    PutCachesRequest:
      type: object
      properties:
        cacheType:
          type: integer
          format: int64
          example: 2
      description: PutCachesRequest
    PutCachechangesSwagger:
      type: object
      properties:
        cacheType:
          type: integer
          format: int64
          example: 2
    PutCachesResponse:
      type: object
      properties:
        cacheType:
          $ref: '#/components/schemas/PutCachechangesSwagger'
      description: PutCachesResponse
    GetCachesResponse:
      type: object
      properties:
        cacheType:
          $ref: '#/components/schemas/EnumOptionData'
        enabled:
          type: boolean
      description: GetCachesResponse
    CommandWrapper:
      type: object
      properties:
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        entityName:
          type: string
        taskPermissionName:
          type: string
        entityId:
          type: integer
          format: int64
        subentityId:
          type: integer
          format: int64
        href:
          type: string
        json:
          type: string
        transactionId:
          type: string
        productId:
          type: integer
          format: int64
        creditBureauId:
          type: integer
          format: int64
        organisationCreditBureauId:
          type: integer
          format: int64
        create:
          type: boolean
        createDatatable:
          type: boolean
        deleteDatatable:
          type: boolean
        updateDatatable:
          type: boolean
        datatableResource:
          type: boolean
        deleteOneToOne:
          type: boolean
        deleteMultiple:
          type: boolean
        updateOneToOne:
          type: boolean
        updateMultiple:
          type: boolean
        registerDatatable:
          type: boolean
        noteResource:
          type: boolean
        cacheResource:
          type: boolean
        updateOperation:
          type: boolean
        delete:
          type: boolean
        deleteOperation:
          type: boolean
        surveyResource:
          type: boolean
        registerSurvey:
          type: boolean
        fullFilSurvey:
          type: boolean
        workingDaysResource:
          type: boolean
        passwordPreferencesResource:
          type: boolean
        permissionResource:
          type: boolean
        userResource:
          type: boolean
        currencyResource:
          type: boolean
        loanDisburseDetailResource:
          type: boolean
        updateDisbursementDate:
          type: boolean
        update:
          type: boolean
    CommandProcessingResult:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        productId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        glimId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
    SmsCampaignData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        campaignName:
          type: string
        campaignType:
          $ref: '#/components/schemas/EnumOptionData'
        runReportId:
          type: integer
          format: int64
        reportName:
          type: string
        paramValue:
          type: string
        campaignStatus:
          $ref: '#/components/schemas/EnumOptionData'
        nextTriggerDate:
          type: string
          format: date-time
        lastTriggerDate:
          type: string
          format: date
        recurrenceStartDate:
          type: string
          format: date-time
        recurrence:
          type: string
        notification:
          type: boolean
        message:
          type: string
    PostCodeValuesDataRequest:
      type: object
      properties:
        name:
          type: string
          example: Passport
        description:
          type: string
          example: Passport information
        position:
          type: integer
          format: int32
          example: 0
      description: PostCodeValuesDataRequest
    PostCodeValueDataResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
      description: PostCodeValueDataResponse
    PutCodeValuesDataRequest:
      type: object
      properties:
        name:
          type: string
          example: Passport
        description:
          type: string
          example: Passport information
        position:
          type: integer
          format: int32
          example: 0
      description: PutCodeValuesDataRequest
    PutCodeValueDataResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
        changes:
          $ref: '#/components/schemas/PutCodeValuechangesSwagger'
      description: PutCodeValueDataResponse
    PutCodeValuechangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: Passport
        description:
          type: string
          example: Passport information
        position:
          type: integer
          format: int32
          example: 0
    DeleteCodeValueDataResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
      description: DeleteCodeValueDataResponse
    GetCodeValuesDataResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Passport
        description:
          type: string
          example: Passport information
        position:
          type: integer
          format: int32
          example: 0
      description: GetCodeValuesDataResponse
    GetCodesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Education
        systemDefined:
          type: boolean
          example: true
      description: GetCodesResponse
    PutCodesRequest:
      type: object
      properties:
        name:
          type: string
          example: MyNewCode(changed)
      description: PutCodesRequest
    PutCodesApichangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: MyNewCode(changed)
    PutCodesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
        changes:
          $ref: '#/components/schemas/PutCodesApichangesSwagger'
      description: PutCodesResponse
    DeleteCodesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
      description: DeleteCodesResponse
    PostCodesRequest:
      type: object
      properties:
        name:
          type: string
          example: MyNewCode
      description: PostCodesRequest
    PostCodesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
      description: PostCodesResponse
    ExternalServicesPropertiesData:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    PutExternalServiceRequest:
      type: object
      properties:
        username:
          type: string
          example: test@mifos.org
        password:
          type: string
          example: XXXX
      description: PutExternalServiceRequest
    GetGlobalConfigurationsResponse:
      type: object
      properties:
        globalConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/GlobalConfigurationPropertyData'
      description: GetGlobalConfigurationsResponse
    GlobalConfigurationPropertyData:
      type: object
      properties:
        name:
          type: string
        enabled:
          type: boolean
        value:
          type: integer
          format: int64
        dateValue:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        description:
          type: string
        trapDoor:
          type: boolean
    PutGlobalConfigurationsRequest:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
        description:
          type: integer
          format: int64
          example: 2
      description: PutGlobalConfigurationsRequest
    PutGlobalConfigurationsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
        changes:
          $ref: '#/components/schemas/PutGlobalConfigurationsResponsechangesSwagger'
      description: PutGlobalConfigurationsResponse
    PutGlobalConfigurationsResponsechangesSwagger:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
    PutDataTablesAppTableIdDatatableIdRequest:
      type: object
      properties:
        DateOfBirth:
          type: string
          example: 01 June 1982
        Education_cdHighest:
          type: integer
          format: int64
          example: 5
        Name:
          type: string
          example: June
        OtherNotes:
          type: string
          example: More notes
        PointsScore:
          type: integer
          format: int64
          example: 20
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
      description: PutDataTablesAppTableIdDatatableIdRequest
    PutDataTablesAppTableIdDatatableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: 'PutDataTablesAppTableIdDatatableIdResponse '
    PostDataTablesRegisterDatatableAppTable:
      type: object
      description: PostDataTablesRegisterDatatableAppTable
    PutDataTablesResponse:
      type: object
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
      description: PutDataTablesResponse
    GetDataTablesResponse:
      type: object
      properties:
        appTableName:
          type: string
          example: m_client
        datatableName:
          type: string
          example: extra_client_details
        column:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
      description: GetDataTablesResponse
    ResultsetColumnHeaderData:
      type: object
      properties:
        columnName:
          type: string
        columnType:
          type: string
        columnLength:
          type: integer
          format: int64
        columnDisplayType:
          type: string
        columnCode:
          type: string
        string:
          type: boolean
        dateDisplayType:
          type: boolean
        dateTimeDisplayType:
          type: boolean
        integerDisplayType:
          type: boolean
        decimalDisplayType:
          type: boolean
        booleanDisplayType:
          type: boolean
        codeValueDisplayType:
          type: boolean
        codeLookupDisplayType:
          type: boolean
        mandatory:
          type: boolean
        optional:
          type: boolean
    GetDataTablesAppTableIdResponse:
      type: object
      properties:
        columnHeaders:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetRowData'
      description: GetDataTablesAppTableIdResponse
    ResultsetRowData:
      type: object
      properties:
        row:
          type: array
          items:
            type: string
    PutDataTablesRequest:
      type: object
      properties:
        appTableName:
          type: string
          example: m_client
        dropColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestDropColumns'
        addColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestAddColumns'
        ChangeColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestChangeColumns'
      description: PutDataTablesRequest
    PutDataTablesRequestAddColumns:
      type: object
      properties:
        name:
          type: string
          example: Question
        type:
          type: string
          example: Dropdown
        code:
          type: string
          example: Gender
        mandatory:
          type: boolean
          example: true
    PutDataTablesRequestChangeColumns:
      type: object
      properties:
        name:
          type: string
          example: Question
        newName:
          type: string
          example: Question 2
        code:
          type: string
          example: Gender
        newCode:
          type: string
          example: Gender2
        mandatory:
          type: boolean
          example: true
    PutDataTablesRequestDropColumns:
      type: object
      properties:
        name:
          type: string
          example: Gender_cd_Question
    PostDataTablesAppTableIdRequest:
      type: object
      properties:
        BusinessDescription:
          type: string
          example: Livestock sales
        Comment:
          type: string
          example: First comment made
        Education_cv:
          type: string
          example: Primary
        Gender_cd:
          type: integer
          format: int64
          example: 6
        HighestRatePaid:
          type: number
          format: double
          example: 8.5
        NextVisit:
          type: string
          example: 01 October 2012
        YearsinBusiness:
          type: integer
          format: int64
          example: 5
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
      description: PostDataTablesAppTableIdRequest
    PostDataTablesAppTableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: 'PostDataTablesAppTableIdResponse '
    PutDataTablesAppTableIdRequest:
      type: object
      properties:
        BusinessDescription:
          type: string
          example: Livestock sales updated
      description: PutDataTablesAppTableIdRequest
    PutDataTablesAppTableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutDataTablesAppTableIdResponseChanges'
      description: PutDataTablesAppTableIdResponse
    PutDataTablesAppTableIdResponseChanges:
      type: object
      properties:
        BusinessDescription:
          type: string
          example: Livestock sales updated
    PostDataTablesRequest:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_client
        registeredTableName:
          type: string
          example: extra_client_details
        multiRow:
          type: boolean
          description: "Allows to create multiple entries in the Data Table. Optional,\
            \ defaults to false. If this property is not provided Data Table will\
            \ allow only one entry."
          example: true
        columnHeaderData:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
      description: PostDataTablesRequest
    PostDataTablesResponse:
      type: object
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
      description: PostDataTablesResponse
    DeleteDataTablesDatatableAppTableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: 'DeleteDataTablesDatatableAppTableIdResponse '
    DeleteDataTablesDatatableAppTableIdDatatableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: 'DeleteDataTablesDatatableAppTableIdDatatableIdResponse '
    DeleteDataTablesResponse:
      type: object
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
      description: DeleteDataTablesResponse
    PostEntityDatatableChecksTemplateRequest:
      type: object
      properties:
        entity:
          type: string
          example: m_loan
        status:
          type: integer
          format: int64
          example: 100
        datatableName:
          type: string
          example: Additional Details
        productId:
          type: integer
          format: int64
          example: 1
      description: PostEntityDatatableChecksTemplateRequest
    PostEntityDatatableChecksTemplateResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostEntityDatatableChecksTemplateResponse
    AppUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        username:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        password:
          type: string
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        credentialsNonExpired:
          type: boolean
        enabled:
          type: boolean
        deleted:
          type: boolean
        office:
          $ref: '#/components/schemas/Office'
        staff:
          $ref: '#/components/schemas/Staff'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        lastTimePasswordUpdated:
          type: string
          format: date-time
        passwordNeverExpires:
          type: boolean
        appUserClientMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AppUserClientMapping'
        selfServiceUser:
          type: boolean
        systemUser:
          type: boolean
        staffId:
          type: integer
          format: int64
        staffDisplayName:
          type: string
        notEnabled:
          type: boolean
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        new:
          type: boolean
    AppUserClientMapping:
      type: object
      properties:
        id:
          type: integer
          format: int64
        client:
          $ref: '#/components/schemas/Client'
        new:
          type: boolean
    Charge:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        amount:
          type: number
        currencyCode:
          type: string
        chargeTimeType:
          type: integer
          format: int32
        chargeCalculation:
          type: integer
          format: int32
        chargePaymentMode:
          type: integer
          format: int32
        feeInterval:
          type: integer
          format: int32
        penalty:
          type: boolean
        active:
          type: boolean
        deleted:
          type: boolean
        minCap:
          type: number
        maxCap:
          type: number
        account:
          $ref: '#/components/schemas/GLAccount'
        taxGroup:
          $ref: '#/components/schemas/TaxGroup'
        annualFee:
          type: boolean
        monthlyFee:
          type: boolean
        overdueInstallment:
          type: boolean
        allowedLoanChargeTime:
          type: boolean
        allowedClientChargeTime:
          type: boolean
        allowedSavingsChargeTime:
          type: boolean
        allowedSavingsChargeCalculationType:
          type: boolean
        allowedClientChargeCalculationType:
          type: boolean
        percentageOfDisbursementAmount:
          type: boolean
        loanCharge:
          type: boolean
        savingsCharge:
          type: boolean
        clientCharge:
          type: boolean
        percentageOfApprovedAmount:
          type: boolean
        feeOnMonthDay:
          $ref: '#/components/schemas/MonthDay'
        disbursementCharge:
          type: boolean
        new:
          type: boolean
    ChargeData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        penalty:
          type: boolean
        currency:
          $ref: '#/components/schemas/CurrencyData'
        overdueInstallmentCharge:
          type: boolean
    Chronology:
      type: object
      properties:
        zone:
          $ref: '#/components/schemas/DateTimeZone'
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
        office:
          $ref: '#/components/schemas/Office'
        transferToOffice:
          $ref: '#/components/schemas/Office'
        image:
          $ref: '#/components/schemas/Image'
        status:
          type: integer
          format: int32
        firstname:
          type: string
        middlename:
          type: string
        lastname:
          type: string
        displayName:
          type: string
        mobileNo:
          type: string
          writeOnly: true
        emailAddress:
          type: string
          writeOnly: true
        externalId:
          type: string
        staff:
          $ref: '#/components/schemas/Staff'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group'
        accountNumberRequiresAutoGeneration:
          type: boolean
        closureDate:
          type: string
          format: date
        withdrawalDate:
          type: string
          format: date
        submittedOnDate:
          type: string
          format: date
        legalForm:
          type: integer
          format: int32
        reopenedDate:
          type: string
          format: date
        proposedTransferDate:
          type: string
          format: date-time
        notActive:
          type: boolean
        activationLocalDate:
          type: string
          format: date
        transferInProgress:
          type: boolean
        transferOnHold:
          type: boolean
        officeJoiningLocalDate:
          type: string
          format: date
        transferInProgressOrOnHold:
          type: boolean
        notPending:
          type: boolean
        notStaff:
          type: boolean
        rejectedDate:
          type: string
          format: date
        rejected:
          type: boolean
        pending:
          type: boolean
        withdrawn:
          type: boolean
        closed:
          type: boolean
        active:
          type: boolean
        new:
          type: boolean
    CurrencyData:
      type: object
      properties:
        name:
          type: string
    DatatableCheckStatusData:
      type: object
    DatatableChecksData:
      type: object
    DateTimeField:
      type: object
      properties:
        durationField:
          $ref: '#/components/schemas/DurationField'
        rangeDurationField:
          $ref: '#/components/schemas/DurationField'
        minimumValue:
          type: integer
          format: int32
        maximumValue:
          type: integer
          format: int32
        leapDurationField:
          $ref: '#/components/schemas/DurationField'
        lenient:
          type: boolean
        name:
          type: string
        type:
          $ref: '#/components/schemas/DateTimeFieldType'
        supported:
          type: boolean
    DateTimeFieldType:
      type: object
      properties:
        rangeDurationType:
          $ref: '#/components/schemas/DurationFieldType'
        durationType:
          $ref: '#/components/schemas/DurationFieldType'
        name:
          type: string
    DateTimeZone:
      type: object
      properties:
        id:
          type: string
        fixed:
          type: boolean
    DurationField:
      type: object
      properties:
        precise:
          type: boolean
        unitMillis:
          type: integer
          format: int64
        name:
          type: string
        type:
          $ref: '#/components/schemas/DurationFieldType'
        supported:
          type: boolean
    DurationFieldType:
      type: object
      properties:
        name:
          type: string
    FloatingRate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        floatingRatePeriods:
          type: array
          items:
            $ref: '#/components/schemas/FloatingRatePeriod'
        createdBy:
          $ref: '#/components/schemas/AppUser'
        modifiedBy:
          $ref: '#/components/schemas/AppUser'
        createdOn:
          type: string
          format: date-time
        modifiedOn:
          type: string
          format: date-time
        baseLendingRate:
          type: boolean
        active:
          type: boolean
        new:
          type: boolean
    FloatingRatePeriod:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fromDate:
          type: string
          format: date-time
        interestRate:
          type: number
        createdBy:
          $ref: '#/components/schemas/AppUser'
        modifiedBy:
          $ref: '#/components/schemas/AppUser'
        createdOn:
          type: string
          format: date-time
        modifiedOn:
          type: string
          format: date-time
        differentialToBaseLendingRate:
          type: boolean
        floatingRatesId:
          $ref: '#/components/schemas/FloatingRate'
        active:
          type: boolean
        new:
          type: boolean
    FundData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    GLAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
        children:
          type: array
          items:
            $ref: '#/components/schemas/GLAccount'
        name:
          type: string
        glCode:
          type: string
        disabled:
          type: boolean
        manualEntriesAllowed:
          type: boolean
        type:
          type: integer
          format: int32
        usage:
          type: integer
          format: int32
        headerAccount:
          type: boolean
        detailAccount:
          type: boolean
        new:
          type: boolean
    GetEntityDatatableChecksTemplateResponse:
      type: object
      properties:
        entities:
          type: array
          items:
            type: string
        statusClient:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusGroup:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusSavings:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusLoans:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/DatatableChecksData'
        loanProductDatas:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        savingsProductDatas:
          type: array
          items:
            $ref: '#/components/schemas/SavingsProductData'
      description: GetEntityDatatableChecksTemplateResponse
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
        office:
          $ref: '#/components/schemas/Office'
        staff:
          $ref: '#/components/schemas/Staff'
        parent:
          $ref: '#/components/schemas/Group'
        groupLevel:
          $ref: '#/components/schemas/GroupLevel'
        groupMembers:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/Group'
        clientMembers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Client'
        submittedOnDate:
          type: string
          format: date
        accountNumberRequiresAutoGeneration:
          type: boolean
        notActive:
          type: boolean
        activationLocalDate:
          type: string
          format: date
        center:
          type: boolean
        transferInProgress:
          type: boolean
        transferOnHold:
          type: boolean
        childGroup:
          type: boolean
        activeClientMembers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Client'
        transferInProgressOrOnHold:
          type: boolean
        notPending:
          type: boolean
        group:
          type: boolean
        pending:
          type: boolean
        closed:
          type: boolean
        active:
          type: boolean
        new:
          type: boolean
    GroupLevel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        superParent:
          type: boolean
        levelName:
          type: string
        recursable:
          type: boolean
        center:
          type: boolean
        group:
          type: boolean
        new:
          type: boolean
    Image:
      type: object
      properties:
        id:
          type: integer
          format: int64
        location:
          type: string
        storageType:
          type: integer
          format: int32
        new:
          type: boolean
    LoanProduct:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shortName:
          type: string
        rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
        loanProductRelatedDetail:
          $ref: '#/components/schemas/LoanProductRelatedDetail'
        includeInBorrowerCycle:
          type: boolean
        startDate:
          type: string
          format: date
        closeDate:
          type: string
          format: date
        externalId:
          type: string
        minimumDaysBetweenDisbursalAndFirstRepayment:
          type: integer
          format: int32
        productInterestRecalculationDetails:
          $ref: '#/components/schemas/LoanProductInterestRecalculationDetails'
        loanProductGuaranteeDetails:
          $ref: '#/components/schemas/LoanProductGuaranteeDetails'
        principalThresholdForLastInstallment:
          type: number
        installmentAmountInMultiplesOf:
          type: integer
          format: int32
        floatingRates:
          $ref: '#/components/schemas/LoanProductFloatingRates'
        syncExpectedWithDisbursementDate:
          type: boolean
          writeOnly: true
        accountingType:
          type: integer
          format: int32
        cashBasedAccountingEnabled:
          type: boolean
        accrualBasedAccountingEnabled:
          type: boolean
        equalAmortization:
          type: boolean
        interestRecalculationEnabled:
          type: boolean
        numberOfRepayments:
          type: integer
          format: int32
        multiDisburseLoan:
          type: boolean
        nominalInterestRatePerPeriod:
          type: number
        interestPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - WHOLE_TERM
          - INVALID
        principalAmount:
          $ref: '#/components/schemas/Money'
        repaymentStrategy:
          $ref: '#/components/schemas/LoanTransactionProcessingStrategy'
        loanProductCharges:
          type: array
          items:
            $ref: '#/components/schemas/Charge'
        loanProductConfigurableAttributes:
          $ref: '#/components/schemas/LoanProductConfigurableAttributes'
        minPrincipalAmount:
          $ref: '#/components/schemas/Money'
        maxPrincipalAmount:
          $ref: '#/components/schemas/Money'
        minNominalInterestRatePerPeriod:
          type: number
        maxNominalInterestRatePerPeriod:
          type: number
        minNumberOfRepayments:
          type: integer
          format: int32
        maxNumberOfRepayments:
          type: integer
          format: int32
        arrearsBasedOnOriginalSchedule:
          type: boolean
        linkedToFloatingInterestRate:
          type: boolean
        upfrontAccrualAccountingEnabled:
          type: boolean
        accountingDisabled:
          type: boolean
        periodicAccrualAccountingEnabled:
          type: boolean
        holdGuaranteeFundsEnabled:
          type: boolean
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        new:
          type: boolean
    LoanProductBorrowerCycleVariationData:
      type: object
      properties:
        borrowerCycleNumber:
          type: integer
          format: int32
        paramType:
          type: string
          enum:
          - INVALID
          - PRINCIPAL
          - INTERESTRATE
          - REPAYMENT
        valueConditionType:
          type: string
          enum:
          - INVALID
          - EQUAL
          - GREATERTHAN
        defaultValue:
          type: number
    LoanProductConfigurableAttributes:
      type: object
      properties:
        id:
          type: integer
          format: int64
        loanProduct:
          $ref: '#/components/schemas/LoanProduct'
        amortizationType:
          type: boolean
          writeOnly: true
        interestType:
          type: boolean
          writeOnly: true
        transactionProcessingStrategyId:
          type: boolean
          writeOnly: true
        interestCalculationPeriodType:
          type: boolean
          writeOnly: true
        inArrearsTolerance:
          type: boolean
          writeOnly: true
        repaymentEvery:
          type: boolean
          writeOnly: true
        graceOnPrincipalAndInterestPayment:
          type: boolean
          writeOnly: true
        graceOnArrearsAgeing:
          type: boolean
          writeOnly: true
        amortizationBoolean:
          type: boolean
        interestMethodBoolean:
          type: boolean
        transactionProcessingStrategyBoolean:
          type: boolean
        interestCalcPeriodBoolean:
          type: boolean
        arrearsToleranceBoolean:
          type: boolean
        repaymentEveryBoolean:
          type: boolean
        graceOnPrincipalAndInterestPaymentBoolean:
          type: boolean
        graceOnArrearsAgingBoolean:
          type: boolean
        new:
          type: boolean
    LoanProductData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        fundId:
          type: integer
          format: int64
        fundName:
          type: string
        startDate:
          type: string
          format: date
        closeDate:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/CurrencyData'
        principal:
          type: number
        minPrincipal:
          type: number
        maxPrincipal:
          type: number
        numberOfRepayments:
          type: integer
          format: int32
        minNumberOfRepayments:
          type: integer
          format: int32
        maxNumberOfRepayments:
          type: integer
          format: int32
        repaymentEvery:
          type: integer
          format: int32
        repaymentFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        interestRatePerPeriod:
          type: number
        minInterestRatePerPeriod:
          type: number
        maxInterestRatePerPeriod:
          type: number
        interestRateFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        annualInterestRate:
          type: number
        interestRateDifferential:
          type: number
        minDifferentialLendingRate:
          type: number
        defaultDifferentialLendingRate:
          type: number
        maxDifferentialLendingRate:
          type: number
        amortizationType:
          $ref: '#/components/schemas/EnumOptionData'
        interestType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCalculationPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        allowPartialPeriodInterestCalcualtion:
          type: boolean
        inArrearsTolerance:
          type: number
        transactionProcessingStrategyId:
          type: integer
          format: int64
        transactionProcessingStrategyName:
          type: string
        graceOnPrincipalPayment:
          type: integer
          format: int32
        recurringMoratoriumOnPrincipalPeriods:
          type: integer
          format: int32
        graceOnInterestPayment:
          type: integer
          format: int32
        graceOnInterestCharged:
          type: integer
          format: int32
        graceOnArrearsAgeing:
          type: integer
          format: int32
        daysInMonthType:
          $ref: '#/components/schemas/EnumOptionData'
        daysInYearType:
          $ref: '#/components/schemas/EnumOptionData'
        interestRecalculationData:
          $ref: '#/components/schemas/LoanProductInterestRecalculationData'
        principalVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        interestRateVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        fundOptions:
          type: array
          items:
            $ref: '#/components/schemas/FundData'
        repaymentFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestRateFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        amortizationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestCalculationPeriodTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        multiDisburseLoan:
          type: boolean
        outstandingLoanBalance:
          type: number
        equalAmortization:
          type: boolean
        interestRecalculationEnabled:
          type: boolean
        floatingInterestRateCalculationAllowed:
          type: boolean
        linkedToFloatingInterestRates:
          type: boolean
        variableInstallmentsAllowed:
          type: boolean
        compoundingToBePostedAsTransaction:
          type: boolean
        getloanProductConfigurableAttributes:
          $ref: '#/components/schemas/LoanProductConfigurableAttributes'
        minimumGapBetweenInstallments:
          type: integer
          format: int32
        maximumGapBetweenInstallments:
          type: integer
          format: int32
    LoanProductFloatingRates:
      type: object
      properties:
        id:
          type: integer
          format: int64
        loanProduct:
          $ref: '#/components/schemas/LoanProduct'
        floatingRate:
          $ref: '#/components/schemas/FloatingRate'
        interestRateDifferential:
          type: number
        minDifferentialLendingRate:
          type: number
        defaultDifferentialLendingRate:
          type: number
        maxDifferentialLendingRate:
          type: number
        floatingInterestRateCalculationAllowed:
          type: boolean
        new:
          type: boolean
    LoanProductGuaranteeDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mandatoryGuarantee:
          type: number
        minimumGuaranteeFromOwnFunds:
          type: number
        minimumGuaranteeFromGuarantor:
          type: number
        new:
          type: boolean
    LoanProductInterestRecalculationData:
      type: object
      properties:
        interestRecalculationCompoundingType:
          $ref: '#/components/schemas/EnumOptionData'
        rescheduleStrategyType:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyInterval:
          type: integer
          format: int32
        recalculationRestFrequencyNthDay:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyWeekday:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyOnDay:
          type: integer
          format: int32
        recalculationCompoundingFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationCompoundingFrequencyInterval:
          type: integer
          format: int32
        recalculationCompoundingFrequencyNthDay:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationCompoundingFrequencyWeekday:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationCompoundingFrequencyOnDay:
          type: integer
          format: int32
        compoundingToBePostedAsTransaction:
          type: boolean
    LoanProductInterestRecalculationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        interestRecalculationCompoundingMethod:
          type: integer
          format: int32
        rescheduleStrategyMethod:
          type: integer
          format: int32
        restFrequencyType:
          type: string
          enum:
          - INVALID
          - SAME_AS_REPAYMENT_PERIOD
          - DAILY
          - WEEKLY
          - MONTHLY
        restInterval:
          type: integer
          format: int32
        restFrequencyNthDay:
          type: integer
          format: int32
        restFrequencyWeekday:
          type: integer
          format: int32
        restFrequencyOnDay:
          type: integer
          format: int32
        compoundingFrequencyType:
          type: string
          enum:
          - INVALID
          - SAME_AS_REPAYMENT_PERIOD
          - DAILY
          - WEEKLY
          - MONTHLY
        compoundingInterval:
          type: integer
          format: int32
        compoundingFrequencyNthDay:
          type: integer
          format: int32
        compoundingFrequencyWeekday:
          type: integer
          format: int32
        compoundingFrequencyOnDay:
          type: integer
          format: int32
        isCompoundingToBePostedAsTransaction:
          type: boolean
        arrearsBasedOnOriginalSchedule:
          type: boolean
        new:
          type: boolean
    LoanProductRelatedDetail:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        principal:
          $ref: '#/components/schemas/Money'
        nominalInterestRatePerPeriod:
          type: number
        interestPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - WHOLE_TERM
          - INVALID
        annualNominalInterestRate:
          type: number
        interestMethod:
          type: string
          enum:
          - DECLINING_BALANCE
          - FLAT
          - INVALID
        interestCalculationPeriodMethod:
          type: string
          enum:
          - DAILY
          - SAME_AS_REPAYMENT_PERIOD
          - INVALID
        allowPartialPeriodInterestCalcualtion:
          type: boolean
        repayEvery:
          type: integer
          format: int32
        repaymentPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - WHOLE_TERM
          - INVALID
        numberOfRepayments:
          type: integer
          format: int32
        graceOnPrincipalPayment:
          type: integer
          format: int32
        graceOnInterestPayment:
          type: integer
          format: int32
        amortizationMethod:
          type: string
          enum:
          - EQUAL_PRINCIPAL
          - EQUAL_INSTALLMENTS
          - INVALID
        inArrearsTolerance:
          $ref: '#/components/schemas/Money'
        graceOnArrearsAgeing:
          type: integer
          format: int32
        equalAmortization:
          type: boolean
        interestRecalculationEnabled:
          type: boolean
        graceOnDueDate:
          type: integer
          format: int32
        arrearsTolerance:
          type: number
    LoanTransactionProcessingStrategy:
      type: object
      properties:
        id:
          type: integer
          format: int64
        heavensfamilyStrategy:
          type: boolean
        earlyPaymentStrategy:
          type: boolean
        indianRBIStrategy:
          type: boolean
        principalInterestPenaltiesFeesOrderStrategy:
          type: boolean
        interestPrincipalPenaltiesFeesOrderStrategy:
          type: boolean
        creocoreStrategy:
          type: boolean
        standardStrategy:
          type: boolean
        new:
          type: boolean
    MonetaryCurrency:
      type: object
      properties:
        code:
          type: string
        digitsAfterDecimal:
          type: integer
          format: int32
        currencyInMultiplesOf:
          type: integer
          format: int32
    Money:
      type: object
      properties:
        currencyCode:
          type: string
        currencyDigitsAfterDecimal:
          type: integer
          format: int32
        amount:
          type: number
        amountDefaultedToNullIfZero:
          type: number
        currencyInMultiplesOf:
          type: integer
          format: int32
        lessThanZero:
          type: boolean
        greaterThanZero:
          type: boolean
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        zero:
          type: boolean
    MonthDay:
      type: object
      properties:
        dayOfMonth:
          type: integer
          format: int32
        fieldTypes:
          type: array
          items:
            $ref: '#/components/schemas/DateTimeFieldType'
        monthOfYear:
          type: integer
          format: int32
        chronology:
          $ref: '#/components/schemas/Chronology'
        values:
          type: array
          items:
            type: integer
            format: int32
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DateTimeField'
    Office:
      type: object
      properties:
        id:
          type: integer
          format: int64
        parent:
          $ref: '#/components/schemas/Office'
        name:
          type: string
        hierarchy:
          type: string
        openingLocalDate:
          type: string
          format: date
        new:
          type: boolean
    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        grouping:
          type: string
        code:
          type: string
        new:
          type: boolean
    Rate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        percentage:
          type: number
        productApply:
          type: integer
          format: int32
        active:
          type: boolean
        approveUser:
          $ref: '#/components/schemas/AppUser'
        new:
          type: boolean
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        disabled:
          type: boolean
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        enabled:
          type: boolean
        new:
          type: boolean
    SavingsProductData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyData'
        nominalAnnualInterestRate:
          type: number
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        interestPostingPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCalculationType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/EnumOptionData'
        minRequiredOpeningBalance:
          type: number
        lockinPeriodFrequency:
          type: integer
          format: int32
        lockinPeriodFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        withdrawalFeeForTransfers:
          type: boolean
        allowOverdraft:
          type: boolean
        overdraftLimit:
          type: number
        minRequiredBalance:
          type: number
        depositAccountType:
          type: string
    Staff:
      type: object
      properties:
        id:
          type: integer
          format: int64
        loanOfficer:
          type: boolean
        active:
          type: boolean
        image:
          $ref: '#/components/schemas/Image'
        notActive:
          type: boolean
        notLoanOfficer:
          type: boolean
        new:
          type: boolean
    TaxComponent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        percentage:
          type: number
        debitAccountType:
          type: integer
          format: int32
        debitAcount:
          $ref: '#/components/schemas/GLAccount'
        creditAccountType:
          type: integer
          format: int32
        creditAcount:
          $ref: '#/components/schemas/GLAccount'
        taxComponentHistories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaxComponentHistory'
        taxGroupMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaxGroupMappings'
        new:
          type: boolean
    TaxComponentHistory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        percentage:
          type: number
        new:
          type: boolean
    TaxGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        taxGroupMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaxGroupMappings'
        new:
          type: boolean
    TaxGroupMappings:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        taxComponent:
          $ref: '#/components/schemas/TaxComponent'
        endDate:
          type: string
          format: date-time
        new:
          type: boolean
    DeleteEntityDatatableChecksTemplateResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteEntityDatatableChecksTemplateResponse
    GetEntityDatatableChecksResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        entity:
          type: string
        status:
          $ref: '#/components/schemas/EnumOptionData'
        datatableName:
          type: string
        systemDefined:
          type: boolean
        order:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        productName:
          type: string
      description: GetEntityDatatableChecksResponse
    GetReportsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        reportName:
          type: string
          example: Client Listing
        reportType:
          type: string
          example: Table
        reportSubType:
          type: string
        reportCategory:
          type: string
          example: Client
        description:
          type: string
          example: "Individual Client Report Lists the small number of defined fields\
            \ on the client table.  Would expect to copy this report and add any one\
            \ to one additional data for specific tenant needs. Can be run for any\
            \ size MFI but you expect it only to be run within a branch for larger\
            \ ones.  Depending on how many columns are displayed, there is probably\
            \ is a limit of about 20/50k clients returned for html display (export\
            \ to excel doesnt have that client browser/memory impact)."
        reportSql:
          type: string
        coreReport:
          type: boolean
          example: true
        useReport:
          type: boolean
          example: true
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
      description: GetReportsResponse
    ReportParameterData:
      type: object
    DeleteReportsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 132
      description: DeleteReportsResponse
    PutReportRequest:
      type: object
      properties:
        reportName:
          type: string
          example: Completely New Report
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
      description: PutReportRequest
    PutReportResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 132
        changes:
          $ref: '#/components/schemas/PutReportResponseChanges'
      description: PutReportResponse
    PutReportResponseChanges:
      type: object
      properties:
        reportName:
          type: string
          example: Changed New Report
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
    GetReportsTemplateResponse:
      type: object
      properties:
        allowedReportTypes:
          type: array
          items:
            type: string
        allowedReportSubTypes:
          type: array
          items:
            type: string
        allowedParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
      description: GetReportsTemplateResponse
    PostRepostRequest:
      type: object
      properties:
        reportName:
          type: string
          example: Completely New Report
        reportType:
          type: string
          example: Table
        reportSubType:
          type: string
        reportCategory:
          type: string
          example: Loan
        description:
          type: string
          example: Just An Example
        reportSql:
          type: string
          example: select 'very good sql' as AComment
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
      description: PostRepostRequest
    PostReportsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 132
      description: PostReportsResponse
    GetReportNameResponse:
      type: object
      properties:
        columnHeaders:
          $ref: '#/components/schemas/ResultsetColumnHeaderData'
        row:
          $ref: '#/components/schemas/ResultsetRowData'
      description: GetReportNameResponse
    DeleteEntityTypeEntityIdDocumentsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 3
        changes:
          $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'
        resourceIdentifier:
          type: string
          example: "3"
      description: DeleteEntityTypeEntityIdDocumentsResponse
    PutEntityTypeEntityIdDocumentsResponseChangesSwagger:
      type: object
    PostEntityTypeEntityIdDocumentsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 3
        resourceIdentifier:
          type: string
          example: "3"
      description: PostEntityTypeEntityIdDocumentsResponse
    BodyPart:
      type: object
      properties:
        entity:
          type: object
        headers:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        parameterizedHeaders:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
    ContentDisposition:
      type: object
      properties:
        type:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        fileName:
          type: string
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int64
    FormDataBodyPart:
      type: object
      properties:
        entity:
          type: object
        headers:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        formDataContentDisposition:
          $ref: '#/components/schemas/FormDataContentDisposition'
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        simple:
          type: boolean
        name:
          type: string
        value:
          type: string
        parameterizedHeaders:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
    MultiPart:
      type: object
      properties:
        entity:
          type: object
        headers:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        bodyParts:
          type: array
          items:
            $ref: '#/components/schemas/BodyPart'
        parameterizedHeaders:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
    ParameterizedHeader:
      type: object
      properties:
        value:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
    GetEntityTypeEntityIdDocumentsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        parentEntityType:
          type: string
          example: clients
        parentEntityId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Client Details Form
        fileName:
          type: string
          example: CGAP.pdf
        size:
          type: integer
          format: int64
          example: 5246719
        type:
          type: string
          example: application/pdf
        description:
          type: string
          example: A signed form signed by new member
        location:
          type: string
        storageType:
          type: integer
          format: int32
      description: GetEntityTypeEntityIdDocumentsResponse
    PutEntityTypeEntityIdDocumentsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 3
        changes:
          $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'
        resourceIdentifier:
          type: string
          example: "3"
      description: PutEntityTypeEntityIdDocumentsResponse
    Event:
      type: object
      properties:
        actionName:
          type: string
        entityName:
          type: string
      example: 1
    Field:
      type: object
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
        fieldType:
          type: string
    GetHookResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Web
        displayName:
          type: string
          example: Kremlin
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        templateId:
          type: integer
          format: int64
          example: 1
        templateName:
          type: string
          example: My UGD
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
      description: GetHookResponse
    PostHookRequest:
      type: object
      properties:
        name:
          type: string
          example: Web
        isActive:
          type: boolean
          example: true
        displayName:
          type: string
          example: Kremlin
        templateId:
          type: integer
          format: int64
          example: 1
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
      description: PostHookRequest
    PostHookResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
      description: PostHookResponse
    PutHookRequest:
      type: object
      properties:
        name:
          type: string
          example: Web
        isActive:
          type: boolean
          example: true
        displayName:
          type: string
          example: Kremlin
        templateId:
          type: integer
          format: int64
          example: 1
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
      description: PutHookRequest
    PutHookResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
        changes:
          $ref: '#/components/schemas/PutHookResponseChangesSwagger'
      description: PutHookResponse
    PutHookResponseChangesSwagger:
      type: object
      properties:
        displayName:
          type: string
          example: Kremlin
        events:
          type: array
          example: 1
          items:
            $ref: '#/components/schemas/Event'
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    DeleteHookResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
      description: DeleteHookResponse
    Entity:
      type: object
      properties:
        name:
          type: string
        actions:
          type: array
          writeOnly: true
          items:
            type: string
    GetHookTemplateResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/HookTemplateData'
        groupings:
          type: array
          items:
            $ref: '#/components/schemas/Grouping'
      description: GetHookTemplateResponse
    Grouping:
      type: object
      properties:
        name:
          type: string
        entities:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/Entity'
    HookTemplateData:
      type: object
      properties:
        serviceId:
          type: integer
          format: int64
    GetSchedulerResponse:
      type: object
      properties:
        active:
          type: boolean
          example: true
      description: GetSchedulerResponse
    GetJobsResponse:
      type: object
      properties:
        jobId:
          type: integer
          format: int64
          example: 1
        displayName:
          type: string
          example: Update loan Summary
        nextRunTime:
          type: string
          format: date-time
        initializingError:
          type: string
        cronExpression:
          type: string
          example: 0 0 22 1/1 * ? *
        active:
          type: boolean
          example: false
        currentlyRunning:
          type: boolean
          example: false
        lastRunHistory:
          $ref: '#/components/schemas/JobDetailHistoryData'
      description: GetJobsResponse
    JobDetailHistoryData:
      type: object
    GetJobsJobIDJobRunHistoryResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 8
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/JobDetailHistoryDataSwagger'
      description: GetJobsJobIDJobRunHistoryResponse
    JobDetailHistoryDataSwagger:
      type: object
      properties:
        version:
          type: integer
          format: int64
          example: 1
        jobRunStartTime:
          type: string
          format: date-time
        jobRunEndTime:
          type: string
          format: date-time
        status:
          type: string
          example: success
        triggerType:
          type: string
          example: cron
    PutJobsJobIDRequest:
      type: object
      properties:
        displayName:
          type: string
          example: Update loan Summary
        cronExpression:
          type: string
          example: 0 0 22 1/1 * ? *
        active:
          type: boolean
          example: false
      description: PutJobsJobsIDRequest
    GetReportMailingJobsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Client Numbers Report
        description:
          type: string
          example: Client Numbers Report
        startDateTime:
          type: string
          format: date-time
        recurrence:
          type: string
        timeline:
          $ref: '#/components/schemas/ReportMailingJobTimelineData'
        emailRecipients:
          type: string
          example: info@musonisystem.com
        emailSubject:
          type: string
          example: Client Numbers Report
        emailMessage:
          type: string
          example: Client Numbers Report
        emailAttachmentFileFormat:
          $ref: '#/components/schemas/EnumOptionData'
        stretchyReport:
          $ref: '#/components/schemas/ReportData'
        stretchyReportParamMap:
          type: string
          example: "{\"startDate\":\"2016-07-01\",\"endDate\":\"2016-08-02\",\"selectOffice\"\
            :\"1\",\"environementUrl\":\"environementUrl\"}"
        nextRunDateTime:
          type: string
          format: date-time
        numberOfRuns:
          type: integer
          format: int32
          example: 0
        isActive:
          type: boolean
          example: true
        runAsUserId:
          type: integer
          format: int64
          example: 1
      description: GetReportMailingJobsResponse
    ReportData:
      type: object
    ReportMailingJobTimelineData:
      type: object
    DeleteReportMailingJobsRequest:
      type: object
      description: 'DeleteReportMailingJobsRequest '
    DeleteReportMailingJobsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteReportMailingJobsResponse
    GetReportMailingJobsTemplate:
      type: object
      properties:
        isActive:
          type: boolean
          example: true
        emailAttachmentFileFormatOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        stretchyReportParamDateOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
      description: GetReportMailingJobsTemplate
    PutReportMailingJobsRequest:
      type: object
      properties:
        locale:
          type: string
          example: en_GB
        dateFormat:
          type: string
          example: dd-MM-yyyy HH:mm:ss
        startDateTime:
          type: string
          format: date-time
      description: PutReportMailingJobsRequest
    PutReportMailingJobsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutReportMailingJobsResponseChanges'
      description: PutReportMailingJobsResponse
    PutReportMailingJobsResponseChanges:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
    PostReportMailingJobsRequest:
      type: object
      properties:
        locale:
          type: string
          example: en_GB
        dateFormat:
          type: string
          example: dd-MM-yyyy HH:mm:ss
        name:
          type: string
          example: Client Numbers Report
        description:
          type: string
          example: Client Numbers Report
        startDateTime:
          type: string
          format: date-time
        stretchyReportId:
          type: integer
          format: int64
          example: 120
        emailRecipients:
          type: string
          example: info@musonisystem.com
        emailSubject:
          type: string
          example: Client Numbers Report
        emailMessage:
          type: string
          example: Client Numbers Report
        recurrence:
          type: string
          example: "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR"
        isActive:
          type: boolean
          example: true
        stretchyReportParamMap:
          type: string
          example: "{\"startDate\":\"2016-07-01\",\"endDate\":\"2016-08-02\",\"selectOffice\"\
            :\"1\",\"environementUrl\":\"environementUrl\"}"
      description: PostReportMailingJobsRequest
    PostReportMailingJobsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostReportMailingJobsResponse
    ReportMailingJobRunHistoryData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reportMailingJobId:
          type: integer
          format: int64
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        status:
          type: string
        errorMessage:
          type: string
        errorLog:
          type: string
    PostAuthenticationResponse:
      type: object
      properties:
        username:
          type: string
          example: mifos
        userId:
          type: integer
          format: int64
          example: 1
        base64EncodedAuthenticationKey:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        authenticated:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        staffId:
          type: integer
          format: int64
          example: 1
        staffDisplayName:
          type: string
          example: "Director, Program"
        organisationalRole:
          $ref: '#/components/schemas/EnumOptionData'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
            example: ALL_FUNCTIONS
      description: PostAuthenticationResponse
    RoleData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    GetUserDetailsResponse:
      type: object
      properties:
        username:
          type: string
          example: mifos
        userId:
          type: integer
          format: int64
          example: 1
        accessToken:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        authenticated:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        staffId:
          type: integer
          format: int64
          example: 1
        staffDisplayName:
          type: string
          example: mifosStaffDisplayName
        organisationalRole:
          $ref: '#/components/schemas/EnumOptionData'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
            example: ALL_FUNCTIONS
      description: GetUserDetailsResponse
    GetSurveyResponse:
      type: object
      properties:
        datatableData:
          $ref: '#/components/schemas/GetSurveyResponseDatatableData'
        enabled:
          type: boolean
          example: false
      description: GetSurveyResponse
    GetSurveyResponseDatatableData:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_client
        registeredTableName:
          type: string
          example: ppi_kenya_2005
        columnHeaderData:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
    PostSurveySurveyNameApptableIdRequest:
      type: object
      properties:
        ppi_household_members_cd_q1_householdmembers:
          type: integer
          format: int64
          example: 167
        ppi_highestschool_cd_q2_highestschool:
          type: integer
          format: int64
          example: 174
        ppi_businessoccupation_cd_q3_businessoccupation:
          type: integer
          format: int64
          example: 180
        ppi_habitablerooms_cd_q4_habitablerooms:
          type: integer
          format: int64
          example: 184
        ppi_floortype_cd_q5_floortype:
          type: integer
          format: int64
          example: 188
        ppi_lightingsource_cd_q6_lightingsource:
          type: integer
          format: int64
          example: 190
        ppi_irons_cd_q7_irons:
          type: integer
          format: int64
          example: 193
        ppi_mosquitonets_cd_q8_mosquitonets:
          type: integer
          format: int64
          example: 195
        ppi_towels_cd_q9_towels:
          type: integer
          format: int64
          example: 198
        ppi_fryingpans_cd_q10_fryingpans:
          type: integer
          format: int64
          example: 201
        Date:
          type: string
          format: date-time
        dateFormat:
          type: string
          format: date-time
        locale:
          type: string
          example: en_GB
      description: PostSurveySurveyNameApptableIdRequest
    PostSurveySurveyNameApptableIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 2
        clientId:
          type: integer
          format: int64
          example: 87
        resourceId:
          type: integer
          format: int64
          example: 87
      description: PostSurveySurveyNameApptableIdResponse
    InteropIdentifierRequestData:
      required:
      - accountId
      - idType
      - idValue
      type: object
      properties:
        idType:
          type: string
          enum:
          - MSISDN
          - EMAIL
          - PERSONAL_ID
          - BUSINESS
          - DEVICE
          - ACCOUNT_ID
          - IBAN
          - ALIAS
        idValue:
          type: string
        subIdOrType:
          type: string
        accountId:
          type: string
    InteropIdentifierAccountResponseData:
      required:
      - accountId
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        productId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        glimId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
        accountId:
          type: string
    ExtensionData:
      required:
      - key
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    InteropTransactionRequestResponseData:
      required:
      - requestCode
      - state
      - transactionCode
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        productId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        glimId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
        transactionCode:
          type: string
        state:
          type: string
          enum:
          - ACCEPTED
          - REJECTED
        expiration:
          type: string
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        requestCode:
          type: string
    GeoCodeData:
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          type: string
        longitude:
          type: string
    InteropTransactionRequestData:
      required:
      - accountId
      - amount
      - transactionCode
      - transactionRole
      type: object
      properties:
        transactionCode:
          type: string
        requestCode:
          type: string
        accountId:
          type: string
        amount:
          $ref: '#/components/schemas/MoneyData'
        transactionRole:
          type: string
          enum:
          - PAYER
          - PAYEE
        transactionType:
          $ref: '#/components/schemas/InteropTransactionTypeData'
        note:
          type: string
        geoCode:
          $ref: '#/components/schemas/GeoCodeData'
        expiration:
          type: string
          format: date-time
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        expirationLocalDate:
          type: string
          format: date
    InteropTransactionTypeData:
      required:
      - initiator
      - initiatorType
      - scenario
      type: object
      properties:
        scenario:
          type: string
          enum:
          - DEPOSIT
          - WITHDRAWAL
          - TRANSFER
          - PAYMENT
          - REFUND
        subScenario:
          type: string
        initiator:
          type: string
          enum:
          - PAYER
          - PAYEE
        initiatorType:
          type: string
          enum:
          - CONSUMER
          - AGENT
          - BUSINESS
          - DEVICE
    MoneyData:
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
    InteropQuoteResponseData:
      required:
      - quoteCode
      - state
      - transactionCode
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        productId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        glimId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
        transactionCode:
          type: string
        state:
          type: string
          enum:
          - ACCEPTED
          - REJECTED
        expiration:
          type: string
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        quoteCode:
          type: string
        fspFee:
          $ref: '#/components/schemas/MoneyData'
        fspCommission:
          $ref: '#/components/schemas/MoneyData'
    InteropQuoteRequestData:
      required:
      - accountId
      - amount
      - amountType
      - quoteCode
      - transactionCode
      - transactionRole
      type: object
      properties:
        transactionCode:
          type: string
        requestCode:
          type: string
        accountId:
          type: string
        amount:
          $ref: '#/components/schemas/MoneyData'
        transactionRole:
          type: string
          enum:
          - PAYER
          - PAYEE
        transactionType:
          $ref: '#/components/schemas/InteropTransactionTypeData'
        note:
          type: string
        geoCode:
          $ref: '#/components/schemas/GeoCodeData'
        expiration:
          type: string
          format: date-time
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        quoteCode:
          type: string
        amountType:
          type: string
          enum:
          - SEND
          - RECEIVE
        fees:
          $ref: '#/components/schemas/MoneyData'
        expirationLocalDate:
          type: string
          format: date
    InteropTransferResponseData:
      required:
      - state
      - transactionCode
      - transferCode
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        productId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        glimId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
        transactionCode:
          type: string
        state:
          type: string
          enum:
          - ACCEPTED
          - REJECTED
        expiration:
          type: string
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        transferCode:
          type: string
        completedTimestamp:
          type: string
    InteropTransferRequestData:
      required:
      - accountId
      - amount
      - transactionCode
      - transactionRole
      - transferCode
      type: object
      properties:
        transactionCode:
          type: string
        requestCode:
          type: string
        accountId:
          type: string
        amount:
          $ref: '#/components/schemas/MoneyData'
        transactionRole:
          type: string
          enum:
          - PAYER
          - PAYEE
        transactionType:
          $ref: '#/components/schemas/InteropTransactionTypeData'
        note:
          type: string
        geoCode:
          $ref: '#/components/schemas/GeoCodeData'
        expiration:
          type: string
          format: date-time
        extensionList:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionData'
        transferCode:
          type: string
        fspFee:
          $ref: '#/components/schemas/MoneyData'
        fspCommission:
          $ref: '#/components/schemas/MoneyData'
        expirationLocalDate:
          type: string
          format: date
    InteropIdentifiersResponseData:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        productId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        glimId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
    InteropAccountData:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        productId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        glimId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
    InteropTransactionsData:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
        productId:
          type: integer
          format: int64
        gsimId:
          type: integer
          format: int64
        glimId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
    GetHolidaysResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Good Friday
        fromDate:
          type: string
          format: date
        toDate:
          type: string
          format: date
        repaymentsRescheduledTo:
          type: string
          format: date
        officeId:
          type: integer
          format: int64
          example: 1
        status:
          $ref: '#/components/schemas/EnumOptionData'
      description: GetHolidaysResponse
    PostHolidaysRequest:
      type: object
      properties:
        name:
          type: string
          example: Good Friday
        description:
          type: string
          example: Good Friday
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        fromDate:
          type: string
          format: date
        toDate:
          type: string
          format: date
        repaymentsRescheduledTo:
          type: string
          format: date
        offices:
          type: array
          items:
            $ref: '#/components/schemas/PostHolidaysRequestOffices'
      description: PostHolidaysRequest
    PostHolidaysRequestOffices:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
    PostHolidaysResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostHolidaysResponse
    PostHolidaysHolidayIdRequest:
      type: object
      description: PostHolidaysHolidayIdRequest
    PostHolidaysHolidayIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostHolidaysHolidayIdResponse
    PutHolidaysHolidayIdRequest:
      type: object
      properties:
        name:
          type: string
          example: Independence day
        description:
          type: string
          example: Holiday for Independence day celebration
      description: PutHolidaysHolidayIdRequest
    PutHolidaysHolidayIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutHolidaysHolidayIdResponseChanges'
      description: PutHolidaysHolidayIdResponse
    PutHolidaysHolidayIdResponseChanges:
      type: object
      properties:
        name:
          type: string
          example: Independence day
        description:
          type: string
          example: Holiday for Independence day celebration
    DeleteHolidaysHolidayIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteHolidaysHolidayIdResponse
    PutCurrenciesRequest:
      type: object
      properties:
        currencies:
          type: string
          example: "[\"KES\",\"BND\",\"LBP\",\"GHC\",\"USD\",\"XOF\",\"AED\",\"AMD\"\
            ]"
      description: PutCurrenciesRequest
    PutCurrenciesResponse:
      type: object
      properties:
        currencies:
          type: string
          example: "[\"KES\",\"BND\",\"LBP\",\"GHC\",\"USD\",\"XOF\",\"AED\",\"AMD\"\
            ]"
      description: PutCurrenciesResponse
    GetCurrenciesResponse:
      type: object
      properties:
        selectedCurrencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
      description: GetCurrenciesResponse
    PutOfficesOfficeIdRequest:
      type: object
      properties:
        name:
          type: string
          example: Name is updated
      description: PutOfficesOfficeIdRequest
    PutOfficesOfficeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 3
        resourceId:
          type: integer
          format: int64
          example: 3
        changes:
          $ref: '#/components/schemas/PutOfficesOfficeIdResponseChanges'
      description: PutOfficesOfficeIdResponse
    PutOfficesOfficeIdResponseChanges:
      type: object
      properties:
        name:
          type: string
          example: Name is updated
    GetOfficesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
        externalId:
          type: string
          example: "1"
        openingDate:
          type: string
          format: date
        hierarchy:
          type: string
          example: "."
      description: GetOfficesResponse
    GetOfficesTemplateResponse:
      type: object
      properties:
        openingDate:
          type: string
          format: date
        allowedParents:
          type: array
          items:
            $ref: '#/components/schemas/GetOfficesResponse'
      description: GetOfficesTemplateResponse
    PostOfficesRequest:
      type: object
      properties:
        name:
          type: string
          example: Good Friday
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        openingDate:
          type: string
          format: date
        parentId:
          type: integer
          format: int64
          example: 2
        externalId:
          type: string
          example: SYS54-88
      description: PostOfficesRequest
    PostOfficesResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 3
        resourceId:
          type: integer
          format: int64
          example: 3
      description: PostOfficesResponse
    GetProvisioningCriteriaCriteriaIdResponse:
      type: object
      properties:
        criteriaId:
          type: integer
          format: int64
          example: 1
        criteriaName:
          type: string
          example: High Risk Products Criteria
        createdBy:
          type: string
          example: mifos
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
      description: GetProvisioningCriteriaCriteriaIdResponse
    ProvisioningCriteriaDefinitionData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        categoryName:
          type: string
        minAge:
          type: integer
          format: int64
        maxAge:
          type: integer
          format: int64
        provisioningPercentage:
          type: number
        liabilityAccount:
          type: integer
          format: int64
        liabilityCode:
          type: string
        expenseAccount:
          type: integer
          format: int64
        expenseCode:
          type: string
    GetProvisioningCriteriaResponse:
      type: object
      properties:
        criteriaId:
          type: integer
          format: int64
          example: 1
        criteriaName:
          type: string
          example: High Risk Products Criteria
        createdBy:
          type: string
          example: mifos
      description: GetProvisioningCriteriaResponse
    PutProvisioningCriteriaRequest:
      type: object
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
      description: PutProvisioningCriteriaRequest
    PutProvisioningCriteriaResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutProvisioningCriteriaResponseChanges'
      description: PutProvisioningCriteriaResponse
    PutProvisioningCriteriaResponseChanges:
      type: object
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
    DeleteProvisioningCriteriaResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteProvisioningCriteriaResponse
    PostProvisioningCriteriaRequest:
      type: object
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
      description: PostProvisioningCriteriaRequest
    PostProvisioningCriteriaResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostProvisioningCriteriaResponse
    PutStaffRequest:
      type: object
      properties:
        isLoanOfficer:
          type: boolean
          example: false
        externalId:
          type: string
          example: 17Hbb
      description: PutStaffRequest
    PutStaffResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PutStaffResponse
    GetStaffResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
        displayName:
          type: string
          example: "Doe, John"
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        isLoanOfficer:
          type: boolean
          example: true
        externalId:
          type: string
          example: 17H
        isActive:
          type: boolean
          example: false
        joiningDate:
          type: string
          format: date
      description: GetStaffResponse
    PostStaffRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
        isLoanOfficer:
          type: boolean
          example: true
        externalId:
          type: string
          example: 17H
        mobileNo:
          type: string
          example: +353851239876
        isActive:
          type: boolean
          example: true
        joiningDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
      description: PostStaffRequest
    PostStaffResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostStaffResponse
    GetTellersTellerIdCashiersTemplateResponse:
      type: object
      properties:
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/StaffData'
      description: GetTellersTellerIdCashiersTemplateResponse
    StaffData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstname:
          type: string
        lastname:
          type: string
        displayName:
          type: string
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        joiningDate:
          type: string
          format: date
        rowIndex:
          type: integer
          format: int32
    PostTellersTellerIdCashiersRequest:
      type: object
      properties:
        endDate:
          type: string
          format: date
        description:
          type: string
          example: teller cash handling
        isFullDay:
          type: boolean
          example: true
        staffId:
          type: integer
          format: int64
          example: 3
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        startDate:
          type: string
          format: date
      description: PostTellersTellerIdCashiersRequest
    PostTellersTellerIdCashiersResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 2
      description: PostTellersTellerIdCashiersResponse
    PutTellersTellerIdCashiersCashierIdRequest:
      type: object
      properties:
        endDate:
          type: string
          format: date
        description:
          type: string
          example: Cashier updated.
        isFullDay:
          type: boolean
          example: true
        staffId:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        startDate:
          type: string
          format: date
      description: PutTellersTellerIdCashiersCashierIdRequest
    PutTellersTellerIdCashiersCashierIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 2
        changes:
          $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponseChanges'
      description: PutTellersTellerIdCashiersCashierIdResponse
    PutTellersTellerIdCashiersCashierIdResponseChanges:
      type: object
      properties:
        endDate:
          type: string
          format: date
        description:
          type: string
          example: Cashier updated.
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
    DeleteTellersTellerIdCashiersCashierIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteTellersTellerIdCashiersCashierIdResponse
    GetTellersResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        officeId:
          type: integer
          format: int64
          example: 1
        debitAccountId:
          type: integer
          format: int64
          example: 0
        creditAccountId:
          type: integer
          format: int64
          example: 0
        name:
          type: string
          example: Teller3
        startDate:
          type: string
          format: date
        status:
          type: string
          example: ACTIVE
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
        officeName:
          type: string
          example: Head Office
      description: GetTellersResponse
    PostTellersRequest:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Teller3
        description:
          type: string
          example: cash handling
        status:
          type: string
          example: ACTIVE
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        startDate:
          type: string
          format: date
      description: PostTellersRequest
    PostTellersResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 5
      description: PostTellersResponse
    PutTellersRequest:
      type: object
      properties:
        name:
          type: string
          example: Teller3
        officeId:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: teller cash handling
        status:
          type: string
          example: ACTIVE
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
        endDate:
          type: string
          format: date
        startDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
      description: PutTellersRequest
    PutTellersResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 5
        changes:
          $ref: '#/components/schemas/PutTellersResponseChanges'
      description: PutTellersResponse
    PutTellersResponseChanges:
      type: object
      properties:
        description:
          type: string
          example: teller cash handling
        endDate:
          type: string
          format: date
        startDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
    CashierData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tellerId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        staffId:
          type: integer
          format: int64
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        startTime:
          type: string
        endTime:
          type: string
        officeName:
          type: string
        tellerName:
          type: string
        staffName:
          type: string
        fullDay:
          type: boolean
    CashierTransactionData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cashierId:
          type: integer
          format: int64
        txnType:
          $ref: '#/components/schemas/CashierTxnType'
        txnAmount:
          type: number
        txnDate:
          type: string
          format: date-time
        entityId:
          type: integer
          format: int64
        entityType:
          type: string
        txnNote:
          type: string
        createdDate:
          type: string
          format: date-time
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        tellerId:
          type: integer
          format: int64
        tellerName:
          type: string
        cashierName:
          type: string
        cashierData:
          $ref: '#/components/schemas/CashierData'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    CashierTxnType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        value:
          type: string
    GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse:
      type: object
      properties:
        sumCashAllocation:
          type: number
          example: 7000.0
        sumInwardCash:
          type: number
          example: 0
        sumOutwardCash:
          type: number
          example: 0
        sumCashSettlement:
          type: number
          example: 50.0
        netCash:
          type: number
          example: 6950.0
        officeName:
          type: string
          example: Head Office
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
        cashierId:
          type: integer
          format: int64
          example: 1
        cashierName:
          type: string
          example: "Staff1, Test"
        cashierTransactions:
          $ref: '#/components/schemas/PageCashierTransactionData'
      description: GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse
    PageCashierTransactionData:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/CashierTransactionData'
    GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse:
      type: object
      properties:
        cashierId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        tellerId:
          type: integer
          format: int64
          example: 0
        tellerName:
          type: string
          example: Teller1
        cashierName:
          type: string
          example: "Staff1, Test"
        cashierData:
          $ref: '#/components/schemas/CashierData'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
      description: GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse
    PostTellersTellerIdCashiersCashierIdAllocateRequest:
      type: object
      properties:
        currencyCode:
          type: string
          example: USD
        txnAmount:
          type: number
          example: 5000
        txnNote:
          type: string
          example: allocating cash
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        txnDate:
          type: string
          format: date-time
      description: PostTellersTellerIdCashiersCashierIdAllocateRequest
    PostTellersTellerIdCashiersCashierIdAllocateResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 4
      description: PostTellersTellerIdCashiersCashierIdAllocateResponse
    PostTellersTellerIdCashiersCashierIdSettleRequest:
      type: object
      properties:
        currencyCode:
          type: string
          example: USD
        txnAmount:
          type: number
          example: 2000
        txnNote:
          type: string
          example: cash settlement
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        txnDate:
          type: string
          format: date-time
      description: PostTellersTellerIdCashiersCashierIdSettleRequest
    PostTellersTellerIdCashiersCashierIdSettleResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 5
      description: PostTellersTellerIdCashiersCashierIdSettleResponse
    GetTellersTellerIdCashiersCashiersIdTransactionsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 8
        cashierId:
          type: integer
          format: int64
          example: 15
        txnType:
          $ref: '#/components/schemas/CashierTxnType'
        txnAmount:
          type: number
          example: 1000
        txnDate:
          type: string
          format: date-time
        entityId:
          type: integer
          format: int64
          example: 2
        entityType:
          type: string
          example: loans
        txnNote:
          type: string
          example: "Disbursement, Loan:2-000000002,Client:1-Test 1"
        createdDate:
          type: string
          format: date-time
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        tellerId:
          type: integer
          format: int64
          example: 0
        cashierName:
          type: string
          example: "B, Ramesh"
      description: GetTellersTellerIdCashiersCashiersIdTransactionsResponse
    GetTellersTellerIdCashiersResponse:
      type: object
      properties:
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        cashiers:
          type: array
          items:
            $ref: '#/components/schemas/CashierData'
      description: GetTellersTellerIdCashiersResponse
    GetTellersTellerIdCashiersCashierIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        tellerId:
          type: integer
          format: int64
          example: 1
        staffId:
          type: integer
          format: int64
          example: 1
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        isFullDay:
          type: boolean
          example: true
        startTime:
          type: string
        endTime:
          type: string
        tellerName:
          type: string
          example: Teller1
        staffName:
          type: string
          example: "Staff1, Test"
      description: GetTellersTellerIdCashiersCashierIdResponse
    GetWorkingDaysTemplateResponse:
      type: object
      properties:
        repaymentRescheduleOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
      description: GetWorkingDaysTemplateResponse
    GetWorkingDaysResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        recurrence:
          type: string
          example: "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR"
        repaymentRescheduleType:
          $ref: '#/components/schemas/EnumOptionData'
        extendTermForDailyRepayments:
          type: boolean
          example: true
      description: GetWorkingDaysResponse
    PutWorkingDaysRequest:
      type: object
      properties:
        recurrence:
          type: string
          example: "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR"
        locale:
          type: string
          example: en
        repaymentRescheduleType:
          $ref: '#/components/schemas/EnumOptionData'
        extendTermForDailyRepayments:
          type: boolean
          example: true
      description: PutWorkingDaysRequest
    PutWorkingDaysResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PutWorkingDaysResponse
    GetAccountTransfersFromAccountType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetAccountTransfersFromClientOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        displayName:
          type: string
          example: Small shop
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: HO
    GetAccountTransfersPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        reversed:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsCurrency'
        transferAmount:
          type: number
          format: float
          example: 200
        transferDate:
          type: string
          format: date
        transferDescription:
          type: string
          example: pay off loan from savings.
        fromOffice:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsFromOffice'
        fromClient:
          $ref: '#/components/schemas/GetAccountTransfersFromClientOptions'
        fromAccountType:
          $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
        fromAccount:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsFromAccount'
        toOffice:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsFromOffice'
        toClient:
          $ref: '#/components/schemas/GetAccountTransfersFromClientOptions'
        toAccountType:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsToAccountType'
        toAccount:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsFromAccount'
    GetAccountTransfersPageItemsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetAccountTransfersPageItemsFromAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
    GetAccountTransfersPageItemsFromOffice:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: HO
    GetAccountTransfersPageItemsToAccountType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountType.loan
        description:
          type: string
          example: Loan Account
    GetAccountTransfersClientClassification:
      type: object
    GetAccountTransfersClientType:
      type: object
    GetAccountTransfersGender:
      type: object
    GetAccountTransfersGroups:
      type: object
    GetAccountTransfersStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 300
        code:
          type: string
          example: clientStatusType.active
        description:
          type: string
          example: Active
    GetAccountTransfersTemplateRefundByTransferCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 0
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetAccountTransfersTemplateRefundByTransferFromAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        accountNo:
          type: integer
          format: int64
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Daniel Owusu
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: CTRL
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        currency:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferCurrency'
        amtForTransfer:
          type: number
          format: float
          example: 130
    GetAccountTransfersTemplateRefundByTransferFromAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        accountNo:
          type: integer
          format: int64
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Daniel Owusu
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: CTRL
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        currency:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferCurrency'
    GetAccountTransfersTemplateRefundByTransferFromClient:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        status:
          $ref: '#/components/schemas/GetAccountTransfersStatus'
        active:
          type: boolean
          example: true
        activationDate:
          type: string
          format: date
        firstname:
          type: string
          example: Daniel
        lastname:
          type: string
          example: Owusu
        displayName:
          type: string
          example: Daniel Owusu
        gender:
          $ref: '#/components/schemas/GetAccountTransfersGender'
        clientType:
          $ref: '#/components/schemas/GetAccountTransfersClientType'
        clientClassification:
          $ref: '#/components/schemas/GetAccountTransfersClientClassification'
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        timeline:
          $ref: '#/components/schemas/GetAccountTransfersTimeline'
        groups:
          $ref: '#/components/schemas/GetAccountTransfersGroups'
    GetAccountTransfersTemplateRefundByTransferFromClientOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        displayName:
          type: string
          example: Daniel Owusu
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
    GetAccountTransfersTemplateRefundByTransferFromOffice:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
        externalId:
          type: integer
          format: int32
          example: 1
        openingDate:
          type: string
          format: date
        hierarchy:
          type: string
          example: "."
    GetAccountTransfersTemplateRefundByTransferFromOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetAccountTransfersTemplateRefundByTransferResponse:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferCurrency'
        transferAmount:
          type: number
          format: float
          example: 130
        transferDate:
          type: string
          format: date
        fromOffice:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromOffice'
        fromClient:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromClient'
        fromAccountType:
          $ref: '#/components/schemas/GetAccountTransfersPageItemsToAccountType'
        fromAccount:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromAccount'
        toOffice:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromOffice'
        toClient:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferToClient'
        toAccountType:
          $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
        toAccount:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferToAccount'
        fromOfficeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromOfficeOptions'
        fromClientOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromClientOptions'
        fromAccountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
        fromAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromAccountOptions'
        toOfficeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromOfficeOptions'
        toClientOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferFromClientOptions'
        toAccountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
        toAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferToAccount'
      description: GetAccountTransfersTemplateRefundByTransferResponse
    GetAccountTransfersTemplateRefundByTransferToAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Daniel Owusu
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: TEST
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        currency:
          $ref: '#/components/schemas/GetAccountTransfersTemplateRefundByTransferCurrency'
    GetAccountTransfersTemplateRefundByTransferToClient:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        displayName:
          type: string
          example: Daniel Owusu
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
    GetAccountTransfersTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
        submittedByUsername:
          type: string
          example: mifos
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        activatedOnDate:
          type: string
          format: date
        activatedByUsername:
          type: string
          example: mifos
        activatedByFirstname:
          type: string
          example: App
        activatedByLastname:
          type: string
          example: Administrator
    PostAccountTransfersRefundByTransferRequest:
      type: object
      properties:
        fromAccountId:
          type: integer
          format: int32
          example: 2
        fromAccountType:
          type: integer
          format: int32
          example: 1
        toOfficeId:
          type: integer
          format: int32
          example: 1
        toClientId:
          type: integer
          format: int32
          example: 1
        toAccountType:
          type: integer
          format: int32
          example: 2
        toAccountId:
          type: integer
          format: int32
          example: 1
        transferAmount:
          type: number
          format: float
          example: 130
        transferDate:
          type: string
          example: 31 October 2014
        transferDescription:
          type: string
          example: Transfer refund to my savings account
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromClientId:
          type: integer
          format: int32
          example: 1
        fromOfficeId:
          type: integer
          format: int32
          example: 1
      description: PostAccountTransfersRefundByTransferRequest
    PostAccountTransfersRefundByTransferResponse:
      type: object
      properties:
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostAccountTransfersRefundByTransferResponse
    GetAccountTransfersFromAccountTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetAccountTransfersFromOffice:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: HO
        nameDecorated:
          type: string
          example: HO
        externalId:
          type: integer
          format: int32
          example: 1
        openingDate:
          type: string
          format: date
        hierarchy:
          type: string
          example: "."
    GetAccountTransfersFromOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: HO
        nameDecorated:
          type: string
          example: HO
    GetAccountTransfersTemplateResponse:
      type: object
      properties:
        transferAmount:
          type: integer
          format: int64
          example: 0
        transferDate:
          type: string
          format: date
        fromOffice:
          $ref: '#/components/schemas/GetAccountTransfersFromOffice'
        fromAccountType:
          $ref: '#/components/schemas/GetAccountTransfersFromAccountType'
        fromOfficeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromOfficeOptions'
        fromClientOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromClientOptions'
        fromAccountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersFromAccountTypeOptions'
        toOfficeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersToOfficeOptions'
        toAccountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersToAccountTypeOptions'
      description: GetAccountTransfersTemplateResponse
    GetAccountTransfersToAccountTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetAccountTransfersToOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: HO
        nameDecorated:
          type: string
          example: HO
    GetAccountTransfersResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 4
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountTransfersPageItems'
      description: GetAccountTransfersResponse
    PostAccountTransfersRequest:
      type: object
      properties:
        fromOfficeId:
          type: integer
          format: int32
          example: 1
        fromClientId:
          type: integer
          format: int32
          example: 1
        fromAccountType:
          type: integer
          format: int32
          example: 2
        fromAccountId:
          type: integer
          format: int32
          example: 1
        toOfficeId:
          type: integer
          format: int32
          example: 1
        toClientId:
          type: integer
          format: int32
          example: 1
        toAccountType:
          type: integer
          format: int32
          example: 2
        toAccountId:
          type: integer
          format: int32
          example: 2
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        transferDate:
          type: string
          example: 01 August 2011
        transferAmount:
          type: number
          format: float
          example: 112.45
        transferDescription:
          type: string
          example: A description of the transfer
      description: PostAccountTransfersRequest
    PostAccountTransfersResponse:
      type: object
      properties:
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostAccountTransfersResponse
    GetFromAccountStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 14
        accountNo:
          type: integer
          format: int64
          example: 14
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: savings old
    GetFromAccountTypeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetFromClientStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        displayName:
          type: string
          example: Test test
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetFromOfficeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
    GetInstructionTypeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: standingInstructionType.fixed
        description:
          type: string
          example: Fixed
    GetPriorityStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: standingInstructionPriority.medium
        description:
          type: string
          example: Medium Priority
    GetRecurrenceFrequencyStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: frequencyperiodFrequencyType.months
        description:
          type: string
          example: Months
    GetRecurrenceTypeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountTransferRecurrenceType.periodic
        description:
          type: string
          example: Periodic Recurrence
    GetStandingInstructionsStandingInstructionIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        accountDetailId:
          type: integer
          format: int64
          example: 6
        name:
          type: string
          example: test standing
        fromOffice:
          $ref: '#/components/schemas/GetFromOfficeStandingInstructionSwagger'
        fromClient:
          $ref: '#/components/schemas/GetFromClientStandingInstructionSwagger'
        fromAccountType:
          $ref: '#/components/schemas/GetFromAccountTypeStandingInstructionSwagger'
        fromAccount:
          $ref: '#/components/schemas/GetFromAccountStandingInstructionSwagger'
        toOffice:
          $ref: '#/components/schemas/GetToOfficeStandingInstructionSwagger'
        toClient:
          $ref: '#/components/schemas/GetToClientStandingInstructionSwagger'
        toAccountType:
          $ref: '#/components/schemas/GetToAccountTypeStandingInstructionSwagger'
        toAccount:
          $ref: '#/components/schemas/GetToAccountStandingInstructionSwagger'
        transferType:
          $ref: '#/components/schemas/GetTransferTypeStandingInstructionSwagger'
        priority:
          $ref: '#/components/schemas/GetPriorityStandingInstructionSwagger'
        instructionType:
          $ref: '#/components/schemas/GetInstructionTypeStandingInstructionSwagger'
        status:
          $ref: '#/components/schemas/GetStatusStandingInstructionSwagger'
        amount:
          type: number
          format: float
          example: 150.0
        validFrom:
          type: string
          format: date
        recurrenceType:
          $ref: '#/components/schemas/GetRecurrenceTypeStandingInstructionSwagger'
        recurrenceFrequency:
          $ref: '#/components/schemas/GetRecurrenceFrequencyStandingInstructionSwagger'
        recurrenceInterval:
          type: integer
          format: int32
          example: 1
        recurrenceOnMonthDay:
          type: string
          format: date
      description: GetStandingInstructionsStandingInstructionIdResponse
    GetStatusStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: standingInstructionStatus.deleted
        description:
          type: string
          example: Deleted
    GetToAccountStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        accountNo:
          type: integer
          format: int64
          example: 3
        productId:
          type: integer
          format: int64
          example: 4
        productName:
          type: string
          example: account overdraft
    GetToAccountTypeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetToClientStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        displayName:
          type: string
          example: Test test
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetToOfficeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
    GetTransferTypeStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountTransferType.account.transfer
        description:
          type: string
          example: Account Transfer
    GetFromAccountTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetFromAccountTypeResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetFromClientOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        displayName:
          type: string
          example: Client_FirstName_2VRAG Client_LastName_9QCY
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetFromOfficeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetFromOfficeResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        decoratedName:
          type: string
          example: Head Office
        externalId:
          type: integer
          format: int32
          example: 1
        openingDate:
          type: string
          format: date
        hierarchy:
          type: string
          example: "."
    GetInstructionTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: standingInstructionType.fixed
        description:
          type: string
          example: Fixed
    GetPriorityOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: standingInstructionPriority.urgent
        description:
          type: string
          example: Urgent Priority
    GetRecurrenceFrequencyOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: frequencyperiodFrequencyType.days
        description:
          type: string
          example: Days
    GetRecurrenceTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountTransferRecurrenceType.periodic
        description:
          type: string
          example: Periodic Recurrence
    GetStandingInstructionsTemplateResponse:
      type: object
      properties:
        fromOffice:
          $ref: '#/components/schemas/GetFromOfficeResponseStandingInstructionSwagger'
        fromAccountType:
          $ref: '#/components/schemas/GetFromAccountTypeResponseStandingInstructionSwagger'
        fromOfficeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFromOfficeOptionsResponseStandingInstructionSwagger'
        fromClientOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFromClientOptionsResponseStandingInstructionSwagger'
        fromAccountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFromAccountTypeOptionsResponseStandingInstructionSwagger'
        toOfficeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetToOfficeOptionsResponseStandingInstructionSwagger'
        toAccountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetToAccountTypeOptionsResponseStandingInstructionSwagger'
        transferTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetTransferTypeOptionsResponseStandingInstructionSwagger'
        statusOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetStatusOptionsResponseStandingInstructionSwagger'
        instructionTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetInstructionTypeOptionsResponseStandingInstructionSwagger'
        priorityOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetPriorityOptionsResponseStandingInstructionSwagger'
        recurrenceTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurrenceTypeOptionsResponseStandingInstructionSwagger'
        recurrenceFrequencyOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurrenceFrequencyOptionsResponseStandingInstructionSwagger'
      description: GetStandingInstructionsTemplateResponse
    GetStatusOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: standingInstructionStatus.active
        description:
          type: string
          example: Active
    GetToAccountTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountType.loan
        description:
          type: string
          example: Loan Account
    GetToOfficeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetTransferTypeOptionsResponseStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountTransferType.account.transfer
        description:
          type: string
          example: Account Transfer
    GetPageItemsStandingInstructionSwagger:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        accountDetailId:
          type: integer
          format: int64
          example: 6
        name:
          type: string
          example: test standing
        fromOffice:
          $ref: '#/components/schemas/GetFromOfficeStandingInstructionSwagger'
        fromClient:
          $ref: '#/components/schemas/GetFromClientStandingInstructionSwagger'
        fromAccountType:
          $ref: '#/components/schemas/GetFromAccountTypeStandingInstructionSwagger'
        fromAccount:
          $ref: '#/components/schemas/GetFromAccountStandingInstructionSwagger'
        toOffice:
          $ref: '#/components/schemas/GetToOfficeStandingInstructionSwagger'
        toClient:
          $ref: '#/components/schemas/GetToClientStandingInstructionSwagger'
        toAccountType:
          $ref: '#/components/schemas/GetToAccountTypeStandingInstructionSwagger'
        toAccount:
          $ref: '#/components/schemas/GetToAccountStandingInstructionSwagger'
        transferType:
          $ref: '#/components/schemas/GetTransferTypeStandingInstructionSwagger'
        priority:
          $ref: '#/components/schemas/GetPriorityStandingInstructionSwagger'
        instructionType:
          $ref: '#/components/schemas/GetInstructionTypeStandingInstructionSwagger'
        status:
          $ref: '#/components/schemas/GetStatusStandingInstructionSwagger'
        amount:
          type: number
          format: float
          example: 150.0
        validFrom:
          type: string
          format: date
        recurrenceType:
          $ref: '#/components/schemas/GetRecurrenceTypeStandingInstructionSwagger'
        recurrenceFrequency:
          $ref: '#/components/schemas/GetRecurrenceFrequencyStandingInstructionSwagger'
        recurrenceInterval:
          type: integer
          format: int32
          example: 1
        recurrenceOnMonthDay:
          type: string
          format: date
    GetStandingInstructionsResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetPageItemsStandingInstructionSwagger'
      description: GetStandingInstructionsResponse
    PutStandingInstructionsStandingInstructionIdRequest:
      type: object
      properties:
        recurrenceInterval:
          type: integer
          format: int32
          example: 2
      description: PutStandingInstructionsStandingInstructionIdRequest
    PutStandingInstructionsStandingInstructionIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 20
        changes:
          $ref: '#/components/schemas/PutUpdateStandingInstructionChanges'
      description: PutStandingInstructionsStandingInstructionIdResponse
    PutUpdateStandingInstructionChanges:
      type: object
      properties:
        recurrenceInterval:
          type: integer
          format: int32
          example: 2
    PostStandingInstructionsRequest:
      type: object
      properties:
        fromOfficeId:
          type: integer
          format: int64
          example: 1
        fromClientId:
          type: integer
          format: int64
          example: 1
        fromAccountType:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: standing instruction
        transferType:
          type: integer
          format: int32
          example: 1
        priority:
          type: integer
          format: int32
          example: 2
        status:
          type: integer
          format: int32
          example: 1
        fromAccountId:
          type: integer
          format: int64
          example: 1
        toOfficeId:
          type: integer
          format: int64
          example: 1
        toClientId:
          type: integer
          format: int64
          example: 1
        toAccountType:
          type: integer
          format: int32
          example: 2
        toAccountId:
          type: integer
          format: int64
          example: 3
        instructionType:
          type: integer
          format: int32
          example: 1
        amount:
          type: integer
          format: int32
          example: 221
        validFrom:
          type: string
          example: 08 April 2014
        recurrenceType:
          type: integer
          format: int32
          example: 1
        recurrenceInterval:
          type: integer
          format: int32
          example: 1
        recurrenceFrequency:
          type: integer
          format: int32
          example: 2
        locale:
          type: string
          description: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        recurrenceOnMonthDay:
          type: string
          example: 02 April
        monthDayFormat:
          type: string
          example: dd MMMM
      description: PostStandingInstructionsRequest
    PostStandingInstructionsResponse:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 65
      description: PostStandingInstructionsResponse
    GetStandingInstructionHistoryFromAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        accountNo:
          type: integer
          format: int64
          example: 2
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: General Savings
    GetStandingInstructionHistoryPageItemsFromClient:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        displayName:
          type: string
          example: Test client
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetStandingInstructionHistoryPageItemsResponse:
      type: object
      properties:
        standingInstructionId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: ACC Transfer
        fromOffice:
          $ref: '#/components/schemas/GetFromOfficeStandingInstructionSwagger'
        fromClient:
          $ref: '#/components/schemas/GetStandingInstructionHistoryPageItemsFromClient'
        fromAccountType:
          $ref: '#/components/schemas/GetFromAccountTypeStandingInstructionSwagger'
        fromAccount:
          $ref: '#/components/schemas/GetStandingInstructionHistoryFromAccount'
        toAccountType:
          $ref: '#/components/schemas/GetToAccountTypeStandingInstructionSwagger'
        toAccount:
          $ref: '#/components/schemas/GetStandingInstructionHistoryToAccount'
        toOffice:
          $ref: '#/components/schemas/GetToOfficeStandingInstructionSwagger'
        toClient:
          $ref: '#/components/schemas/GetStandingInstructionHistoryToClient'
        amount:
          type: number
          format: float
          example: 10
        status:
          type: string
          example: success
        executionTime:
          type: string
          format: date
        errorLog:
          type: string
    GetStandingInstructionHistoryToAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          example: General Savings
    GetStandingInstructionHistoryToClient:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        displayName:
          type: string
          example: Test client
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
    GetStandingInstructionRunHistoryResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetStandingInstructionHistoryPageItemsResponse'
      description: GetStandingInstructionRunHistoryResponse
    PostAccountsCharges:
      type: object
      properties:
        chargeId:
          type: integer
          format: int32
          example: 20
        amount:
          type: integer
          format: int32
          example: 1
    PostAccountsTypeRequest:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 7
        productId:
          type: integer
          format: int32
          example: 1
        requestedShares:
          type: integer
          format: int32
          example: 100
        externalId:
          type: integer
          format: int32
          example: 1
        submittedDate:
          type: string
          example: 01 May 2016
        minimumActivePeriod:
          type: integer
          format: int32
          example: 1
        minimumActivePeriodFrequencyType:
          type: integer
          format: int32
          example: 0
        lockinPeriodFrequency:
          type: integer
          format: int32
          example: 1
        lockinPeriodFrequencyType:
          type: integer
          format: int32
          example: 0
        applicationDate:
          type: string
          example: 01 May 2016
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: true
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        charges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostAccountsCharges'
        savingsAccountId:
          type: integer
          format: int32
          example: 13
      description: PostAccountsTypeRequest
    PostAccountsTypeResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostAccountsTypeResponse
    PutAccountsTypeAccountIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        applicationDate:
          type: string
          example: 01 April 2016
        requestedShares:
          type: integer
          format: int32
          example: 20
      description: PutAccountsTypeAccountIdRequest
    PutAccountsChanges:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        applicationDate:
          type: string
          example: 01 April 2016
        requestedShares:
          type: integer
          format: int32
          example: 20
        locale:
          type: string
          example: en
    PutAccountsTypeAccountIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutAccountsChanges'
      description: PutAccountsTypeAccountIdResponse
    GetAccountsChargesCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetAccountsPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Client Name
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: Share Product Name
        status:
          $ref: '#/components/schemas/GetAccountsTypeStatus'
        timeline:
          $ref: '#/components/schemas/GetAccountsTypeTimeline'
        currency:
          $ref: '#/components/schemas/GetAccountsChargesCurrency'
        purchasedShares:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsTypePurchasedShares'
        summary:
          $ref: '#/components/schemas/GetAccountsTypeSummary'
    GetAccountsTypePurchasedShares:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        purchasedDate:
          type: string
          example: 01 May 2013
        numberOfShares:
          type: integer
          format: int32
          example: 10
        purchasedPrice:
          type: integer
          format: int32
          example: 5
    GetAccountsTypeResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 1
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsPageItems'
      description: GetAccountsTypeResponse
    GetAccountsTypeStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: shareAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
    GetAccountsTypeSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetAccountsChargesCurrency'
    GetAccountsTypeTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
    PostAccountsRequestedShares:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 35
    PostAccountsTypeAccountIdRequest:
      type: object
      properties:
        requestedShares:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostAccountsRequestedShares'
      description: PostAccountsTypeAccountIdRequest
    PostAccountsTypeAccountIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 5
      description: PostAccountsTypeAccountIdResponse
    GetAccountsChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetAccountsChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        code:
          type: string
          example: chargeTimeType.activation
        description:
          type: string
          example: Share Account Activate
    GetAccountsCharges:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 9
        chargeId:
          type: integer
          format: int32
          example: 20
        accountId:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Share Account Activation Flat
        chargeTimeType:
          $ref: '#/components/schemas/GetAccountsChargeTimeType'
        chargeCalculationType:
          $ref: '#/components/schemas/GetAccountsChargeCalculationType'
        percentage:
          type: number
          format: double
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        currency:
          $ref: '#/components/schemas/GetAccountsChargesCurrency'
        amount:
          type: number
          format: float
          example: 1
        amountPaid:
          type: number
          format: float
          example: 1
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        amountOutstanding:
          type: number
          format: float
          example: 0
        amountOrPercentage:
          type: number
          format: float
          example: 1
        isActive:
          type: boolean
          example: true
    GetAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 100
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetAccountsLockPeriodTypeEnum:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: savings.lockin.sharePeriodFrequencyType.days
        description:
          type: string
          example: Days
    GetAccountsPurchasedShares:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 6
        accountId:
          type: integer
          format: int32
          example: 2
        purchasedDate:
          type: string
          format: date
        numberOfShares:
          type: integer
          format: int32
          example: 10
        purchasedPrice:
          type: number
          format: double
          example: 0.5
        status:
          $ref: '#/components/schemas/GetAccountsPurchasedSharesStatus'
        type:
          $ref: '#/components/schemas/GetAccountsPurchasedSharesType'
        amount:
          type: number
          format: double
          example: 5.05
        chargeAmount:
          type: number
          format: double
          example: 0.05
        amountPaid:
          type: number
          format: double
          example: 5.05
    GetAccountsPurchasedSharesStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 300
        code:
          type: string
          example: purchasedSharesStatusType.approved
        description:
          type: string
          example: Approved
    GetAccountsPurchasedSharesType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 500
        code:
          type: string
          example: purchasedSharesType.purchased
        description:
          type: string
          example: Purchase
    GetAccountsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 300
        code:
          type: string
          example: shareAccountStatusType.active
        description:
          type: string
          example: Active
        submittedAndPendingApproval:
          type: boolean
          example: false
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        active:
          type: boolean
          example: true
        closed:
          type: boolean
          example: false
    GetAccountsSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        accountNo:
          type: integer
          format: int64
          example: 2
        totalApprovedShares:
          type: integer
          format: int32
          example: 1
        totalPendingForApprovalShares:
          type: integer
          format: int32
          example: 0
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: Conflux Share Product
        status:
          $ref: '#/components/schemas/GetAccountsStatus'
        timeline:
          $ref: '#/components/schemas/GetAccountsTimeline'
        currency:
          $ref: '#/components/schemas/GetAccountsCurrency'
    GetAccountsTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
        submittedByUsername:
          type: string
          example: mifos
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        approvedDate:
          type: string
          format: date
        approvedByUsername:
          type: string
          example: mifos
        approvedByFirstname:
          type: string
          example: App
        approvedByLastname:
          type: string
          example: Administrator
        activatedDate:
          type: string
          format: date
    GetAccountsTypeAccountIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        accountNo:
          type: integer
          format: int64
          example: 2
        savingsAccountNumber:
          type: integer
          format: int64
          example: 13
        clientId:
          type: integer
          format: int32
          example: 7
        clientName:
          type: string
          example: Client_FirstName_2KX8C Client_LastName_NWNG
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: Share Product
        status:
          $ref: '#/components/schemas/GetAccountsStatus'
        timeline:
          $ref: '#/components/schemas/GetAccountsTimeline'
        currency:
          $ref: '#/components/schemas/GetAccountsCurrency'
        summary:
          $ref: '#/components/schemas/GetAccountsSummary'
        purchasedShares:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsPurchasedShares'
        savingsAccountId:
          type: integer
          format: int32
          example: 13
        currentMarketPrice:
          type: integer
          format: int32
          example: 5
        lockinPeriod:
          type: integer
          format: int32
          example: 1
        lockPeriodTypeEnum:
          $ref: '#/components/schemas/GetAccountsLockPeriodTypeEnum'
        minimumActivePeriod:
          type: integer
          format: int32
          example: 1
        minimumActivePeriodTypeEnum:
          $ref: '#/components/schemas/GetAccountsLockPeriodTypeEnum'
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: true
        charges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsCharges'
        dividends:
          type: array
          items:
            type: string
      description: GetAccountsTypeAccountIdResponse
    GetAccountsTypeProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Share Product
        shortName:
          type: string
          example: SP
        totalShares:
          type: integer
          format: int64
          example: 100
    GetAccountsTypeTemplateResponse:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 7
        clientName:
          type: string
          example: Client Name
        productOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountsTypeProductOptions'
      description: GetAccountsTypeTemplateResponse
    GetFieldConfigurationEntityResponse:
      type: object
      properties:
        fieldConfigurationId:
          type: integer
          format: int32
          example: 1
        entity:
          type: string
          example: ADDRESS
        subentity:
          type: string
          example: CLIENT
        field:
          type: string
          example: addressType
        is_enabled:
          type: string
          example: "true"
        is_mandatory:
          type: string
          example: "false"
        validation_regex:
          type: string
      description: GetFieldConfigurationEntityResponse
    DeleteChargesChargeIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteChargesChargeIdResponse
    GetChargesAppliesToResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeAppliesTo.loan
        description:
          type: string
          example: Loan
    GetChargesCalculationTypeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetChargesCurrencyResponse:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetChargesPaymentModeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargepaymentmode.accounttransfer
        description:
          type: string
          example: Account Transfer
    GetChargesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Loan Service fee
        active:
          type: string
          example: "true"
        penalty:
          type: string
          example: "false"
        currency:
          $ref: '#/components/schemas/GetChargesCurrencyResponse'
        amount:
          type: number
          format: float
          example: 230.56
        chargeTimeType:
          $ref: '#/components/schemas/GetChargesTimeTypeResponse'
        chargeAppliesTo:
          $ref: '#/components/schemas/GetChargesAppliesToResponse'
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargesCalculationTypeResponse'
        chargePaymentMode:
          $ref: '#/components/schemas/GetChargesPaymentModeResponse'
      description: GetChargesResponse
    GetChargesTimeTypeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeTimeType.disbursement
        description:
          type: string
          example: Disbursement
    PostChargesRequest:
      type: object
      properties:
        name:
          type: string
          example: Loan Service fee
        chargeAppliesTo:
          type: integer
          format: int32
          example: 1
        currencyCode:
          type: string
          example: USD
        locale:
          type: string
          example: en
        amount:
          type: number
          format: float
          example: 230.56
        chargeTimeType:
          type: integer
          format: int32
          example: 1
        chargeCalculationType:
          type: integer
          format: int32
          example: 1
        chargePaymentMode:
          type: integer
          format: int32
          example: 1
        active:
          type: string
          example: "true"
      description: PostChargesRequest
    PostChargesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostChargesResponse
    PutChargesChargeIdRequest:
      type: object
      properties:
        name:
          type: string
          example: Loan service fee(changed)
      description: PutChargesChargeIdRequest
    PutChargesChargeIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutChargesChargeIdRequest'
      description: PutChargesChargeIdResponse
    GetChargesTemplateFeeFrequencyOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: loanTermFrequency.periodFrequencyType.days
        description:
          type: string
          example: Days
    GetChargesTemplateLoanChargeCalculationTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetChargesTemplateLoanChargeTimeTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
    GetChargesTemplateResponse:
      type: object
      properties:
        active:
          type: string
          example: "false"
        penalty:
          type: string
          example: "false"
        currencyOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesCurrencyResponse'
        chargeCalculationTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesCalculationTypeResponse'
        chargeAppliesToOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesAppliesToResponse'
        chargeTimeTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTimeTypeResponse'
        chargePaymentModeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesPaymentModeResponse'
        loanChargeCalculationTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateLoanChargeCalculationTypeOptions'
        loanChargeTimeTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateLoanChargeTimeTypeOptions'
        savingsChargeCalculationTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateLoanChargeCalculationTypeOptions'
        savingsChargeTimeTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateLoanChargeTimeTypeOptions'
        feeFrequencyOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesTemplateFeeFrequencyOptions'
      description: GetChargesTemplateResponse
    GetClientClientIdAddressesResponse:
      type: object
      properties:
        client_id:
          type: integer
          format: int64
          example: 111755
        addressType:
          type: string
          example: PERMANENT ADDRESS
        addressId:
          type: integer
          format: int32
          example: 14
        addressTypeId:
          type: integer
          format: int32
          example: 804
        isActive:
          type: boolean
          example: false
        street:
          type: string
          example: anki's home
        addressLine1:
          type: string
          example: test123
        addressLine2:
          type: string
          example: iuyt
        addressLine3:
          type: string
        townVillage:
          type: string
        city:
          type: string
          example: mumbai
        countyDistrict:
          type: string
        stateProvinceId:
          type: integer
          format: int32
          example: 801
        countryName:
          type: string
          example: UNITED STATES
        stateName:
          type: string
          example: GUJRAT
        countryId:
          type: integer
          format: int32
          example: 807
        postalCode:
          type: integer
          format: int64
          example: 400095
        createdBy:
          type: string
        updatedBy:
          type: string
      description: GetClientClientIdAddressesResponse
    PostClientClientIdAddressesRequest:
      type: object
      properties:
        street:
          type: string
          example: Ipca
        addressLine1:
          type: string
          example: Kandivali
        addressLine2:
          type: string
          example: plot47
        addressLine3:
          type: string
          example: charkop
        city:
          type: string
          example: Mumbai
        stateProvinceId:
          type: integer
          format: int32
          example: 800
        countryId:
          type: integer
          format: int32
          example: 802
        postalCode:
          type: integer
          format: int64
          example: 400064
      description: PostClientClientIdAddressesRequest
    PostClientClientIdAddressesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 15
      description: PostClientClientIdAddressesResponse
    PutClientClientIdAddressesRequest:
      type: object
      properties:
        addressId:
          type: integer
          format: int32
          example: 67
        street:
          type: string
          example: goldensource
      description: PutClientClientIdAddressesRequest
    PutClientClientIdAddressesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 67
      description: PutClientClientIdAddressesResponse
    GetClientChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetClientChargeCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetClientChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
    GetClientsChargesPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        clientId:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 5
        name:
          type: string
          example: Client Fee 1
        chargeTimeType:
          $ref: '#/components/schemas/GetClientChargeTimeType'
        dueDate:
          type: string
          format: date
        chargeCalculationType:
          $ref: '#/components/schemas/GetClientChargeCalculationType'
        currency:
          $ref: '#/components/schemas/GetClientChargeCurrency'
        amount:
          type: number
          example: 100.0
        amountPaid:
          type: number
          example: 0
        amountWaived:
          type: number
          example: 100.0
        amountWrittenOff:
          type: number
          example: 0
        amountOutstanding:
          type: number
          example: 0.0
        penalty:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        isPaid:
          type: boolean
          example: false
        isWaived:
          type: boolean
          example: true
    PostClientsClientIdChargesRequest:
      type: object
      properties:
        amount:
          type: integer
          format: int32
          example: 100
        chargeId:
          type: integer
          format: int32
          example: 226
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 01 September 2015
        locale:
          type: string
          example: en
      description: PostClientsClientIdChargesRequest
    PostClientsClientIdChargesResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 189
        resourceId:
          type: integer
          format: int32
          example: 164
      description: PostClientsClientIdChargesResponse
    PostClientsClientIdChargesChargeIdRequest:
      type: object
      properties:
        amount:
          type: integer
          format: int32
          example: 200
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        transactionDate:
          type: string
          example: 01 September 2015
      description: PostClientsClientIdChargesChargeIdRequest
    PostClientsClientIdChargesChargeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 189
        resourceId:
          type: integer
          format: int32
          example: 157
        transactionId:
          type: integer
          format: int32
          example: 221
      description: PostClientsClientIdChargesChargeIdResponse
    DeleteClientsClientIdChargesChargeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 189
        resourceId:
          type: integer
          format: int32
          example: 164
      description: DeleteClientsClientIdChargesChargeIdResponse
    GetClientsClientIdChargesResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 4
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsChargesPageItems'
      description: GetClientsClientIdChargesResponse
    DeleteClientsClientIdIdentifiersIdentifierIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 3
      description: DeleteClientsClientIdIdentifiersIdentifierIdResponse
    GetClientsClientIdIdentifiersResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        documentType:
          $ref: '#/components/schemas/GetClientsDocumentType'
        documentKey:
          type: string
          example: "12345"
        description:
          type: string
          example: Issued in the year 2--7
      description: GetClientsClientIdIdentifiersResponse
    GetClientsDocumentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: Drivers License
    GetClientsAllowedDocumentTypes:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Passport
        position:
          type: integer
          format: int32
          example: 0
    GetClientsClientIdIdentifiersTemplateResponse:
      type: object
      properties:
        allowedDocumentTypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsAllowedDocumentTypes'
      description: GetClientsClientIdIdentifiersTemplateResponse
    PostClientsClientIdIdentifiersRequest:
      type: object
      properties:
        documentTypeId:
          type: integer
          format: int32
          example: 1
        documentKey:
          type: string
          example: KA-54677
        description:
          type: string
          example: Document has been verified
      description: PostClientsClientIdIdentifiersRequest
    PostClientsClientIdIdentifiersResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 3
      description: PostClientsClientIdIdentifiersResponse
    PutClientsClientIdIdentifiersIdentifierIdRequest:
      type: object
      properties:
        documentTypeId:
          type: integer
          format: int32
          example: 4
        documentKey:
          type: string
          example: KA-94667
        description:
          type: string
          example: Document has been updated
      description: PutClientsClientIdIdentifiersIdentifierIdRequest
    PutClientsClientIdIdentifiersIdentifierIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 3
        changes:
          $ref: '#/components/schemas/PutClientsClientIdIdentifiersIdentifierIdRequest'
      description: PutClientsClientIdIdentifiersIdentifierIdResponse
    GetClientTransactionsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetClientsClientIdTransactionsTransactionIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        type:
          $ref: '#/components/schemas/GetClientsClientIdTransactionsType'
        date:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/GetClientTransactionsCurrency'
        amount:
          type: number
          example: 60.0
        submittedOnDate:
          type: string
          format: date
        reversed:
          type: boolean
          example: true
      description: GetClientsClientIdTransactionsTransactionIdResponse
    GetClientsClientIdTransactionsType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: clientTransactionType.payCharge
        description:
          type: string
          example: PAY_CHARGE
    PostClientsClientIdTransactionsTransactionIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 189
        resourceId:
          type: integer
          format: int32
          example: 222
      description: PostClientsClientIdTransactionsTransactionIdResponse
    GetClientsClientIdTransactionsResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 20
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsPageItems'
      description: GetClientsClientIdTransactionsResponse
    GetClientsPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 226
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        type:
          $ref: '#/components/schemas/GetClientsClientIdTransactionsType'
        date:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/GetClientTransactionsCurrency'
        amount:
          type: number
          format: double
          example: 22
        submittedOnDate:
          type: string
          format: date
        reversed:
          type: boolean
          example: false
    GetClientsColumnHeaderData:
      type: object
      properties:
        columnName:
          type: string
          example: client_id
        columnType:
          type: string
          example: bigint
        columnLength:
          type: integer
          format: int32
          example: 0
        columnDisplayType:
          type: string
          example: INTEGER
        isColumnNullable:
          type: boolean
          example: false
        isColumnPrimaryKey:
          type: boolean
          example: true
        columnValues:
          type: array
          example: []
          items:
            type: string
            example: "[]"
    GetClientsDataTables:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_client
        registeredTableName:
          type: string
          example: Address Details
        columnHeaderData:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsColumnHeaderData'
    GetClientsOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetClientsSavingProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: account overdraft
        withdrawalFeeForTransfers:
          type: boolean
          example: false
        allowOverdraft:
          type: boolean
          example: false
    GetClientsStaffOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        firstname:
          type: string
          example: xyz
        lastname:
          type: string
          example: sjs
        displayName:
          type: string
          example: "sjs, xyz"
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        isLoanOfficer:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
    GetClientsTemplateResponse:
      type: object
      properties:
        activationDate:
          type: string
          format: date
        officeId:
          type: integer
          format: int32
          example: 1
        officeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsOfficeOptions'
        staffOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsStaffOptions'
        savingProductOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsSavingProductOptions'
        datatables:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsDataTables'
      description: GetClientsTemplateResponse
    GetClientsClientIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 27
        accountNo:
          type: integer
          format: int64
          example: 27
        status:
          $ref: '#/components/schemas/GetClientsClientIdStatus'
        active:
          type: boolean
          example: true
        activationDate:
          type: string
          format: date
        firstname:
          type: string
          example: savings
        lastname:
          type: string
          example: test
        displayName:
          type: string
          example: savings test
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        timeline:
          $ref: '#/components/schemas/GetClientsTimeline'
        savingsProductId:
          type: integer
          format: int32
          example: 4
        savingsProductName:
          type: string
          example: account overdraft
        groups:
          type: array
          example: []
          items:
            type: string
            example: "[]"
      description: GetClientsClientIdResponse
    GetClientsClientIdStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 300
        code:
          type: string
          example: clientStatusType.active
        description:
          type: string
          example: Active
    GetClientsTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
        submittedByUsername:
          type: string
          example: mifos
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        activatedOnDate:
          type: string
          format: date
        activatedByUsername:
          type: string
          example: mifos
        activatedByFirstname:
          type: string
          example: App
        activatedByLastname:
          type: string
          example: Administrator
    GetClientsClientIdAccountsResponse:
      type: object
      properties:
        loanAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsLoanAccounts'
        savingsAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsSavingsAccounts'
      description: GetClientsClientIdAccountsResponse
    GetClientsLoanAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        externalId:
          type: integer
          format: int32
          example: 456
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: TestOne
        status:
          $ref: '#/components/schemas/GetClientsLoanAccountsStatus'
        loanType:
          $ref: '#/components/schemas/GetClientsLoanAccountsType'
        loanCycle:
          type: integer
          format: int32
          example: 1
    GetClientsLoanAccountsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 300
        code:
          type: string
          example: loanStatusType.active
        description:
          type: string
          example: Active
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: false
        active:
          type: boolean
          example: true
        closedObligationsMet:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        overpaid:
          type: boolean
          example: false
    GetClientsLoanAccountsType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: loanType.individual
        description:
          type: string
          example: Individual
    GetClientsSavingsAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 7
        accountNo:
          type: integer
          format: int64
          example: 7
        productId:
          type: integer
          format: int32
          example: 2
        productName:
          type: string
          example: Other product
        status:
          $ref: '#/components/schemas/GetClientsSavingsAccountsStatus'
        currency:
          $ref: '#/components/schemas/GetClientsSavingsAccountsCurrency'
    GetClientsSavingsAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetClientsSavingsAccountsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
    PostClientsClientIdRequest:
      type: object
      properties:
        note:
          type: string
          example: We cannot accept transfers of clients having loans with less than
            1 repayment left
      description: PostClientsClientIdRequest
    PostClientsClientIdResponse:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 2
      description: PostClientsClientIdResponse
    GetClientStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: clientStatusType.pending
        description:
          type: string
          example: Pending
    GetClientsPageItemsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        accountNo:
          type: string
          example: "000000002"
        status:
          $ref: '#/components/schemas/GetClientStatus'
        active:
          type: boolean
          example: false
        fullname:
          type: string
          example: Home Farm Produce
        displayName:
          type: string
          example: Home Farm Produce
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
    GetClientsResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientsPageItemsResponse'
      description: GetClientsResponse
    PutClientsClientIdRequest:
      type: object
      properties:
        externalId:
          type: string
          example: 786444UUUYYH7
      description: PutClientsClientIdRequest
    PutClientsClientIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutClientsClientIdRequest'
      description: PutClientsClientIdResponse
    DeleteClientsClientIdRequest:
      type: object
      description: DeleteClientsClientIdRequest
    DeleteClientsClientIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 3
        resourceId:
          type: integer
          format: int32
          example: 3
      description: DeleteClientsClientIdResponse
    PostClientsRequest:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        fullname:
          type: string
          example: Client of group
        groupId:
          type: integer
          format: int32
          example: 1
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        active:
          type: boolean
          example: true
        activationDate:
          type: string
          example: 04 March 2009
      description: PostClientsRequest
    PostClientsResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        groupId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 2
      description: PostClientsResponse
    GetCollateralsTemplateAllowedTypes:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 9
        name:
          type: string
          example: Silver
        position:
          type: integer
          format: int32
          example: 0
    GetLoansLoanIdCollateralsTemplateResponse:
      type: object
      properties:
        allowedCollateralTypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetCollateralsTemplateAllowedTypes'
      description: GetLoansLoanIdCollateralsTemplateResponse
    GetCollateralCurrencyResponse:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetCollateralTypeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        name:
          type: string
          example: Gold
    GetLoansLoanIdCollateralsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        type:
          $ref: '#/components/schemas/GetCollateralTypeResponse'
        value:
          type: integer
          format: int64
          example: 50000
        description:
          type: string
          example: 24 Carat Gold chain weighing 12 grams
        currency:
          $ref: '#/components/schemas/GetCollateralCurrencyResponse'
      description: GetLoansLoanIdCollateralsResponse
    PostLoansLoanIdCollateralsRequest:
      type: object
      properties:
        collateralTypeId:
          type: integer
          format: int32
          example: 9
      description: PostLoansLoanIdCollateralsRequest
    PostLoansLoanIdCollateralsResponse:
      type: object
      properties:
        loanId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 12
      description: PostLoansLoanIdCollateralsResponse
    PutLoansLoandIdCollateralsCollateralIdRequest:
      type: object
      properties:
        description:
          type: string
          example: 22 Carat Gold chain weighing 12 grams
      description: PutLoansLoandIdCollateralsCollateralIdRequest
    PutLoansLoanIdCollateralsCollateralIdResponse:
      type: object
      properties:
        loanId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 12
        changes:
          $ref: '#/components/schemas/PutLoansLoandIdCollateralsCollateralIdRequest'
      description: PutLoansLoanIdCollateralsCollateralIdResponse
    DeleteLoansLoanIdCollateralsCollateralIdResponse:
      type: object
      properties:
        loanId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 12
      description: DeleteLoansLoanIdCollateralsCollateralIdResponse
    PostCollectionSheetBulkRepaymentTransactions:
      type: object
      properties:
        loanId:
          type: integer
          format: int32
          example: 10
        transactionAmount:
          type: number
          format: double
          example: 1221.36
        paymentTypeId:
          type: integer
          format: int32
          example: 19
        receiptNumber:
          type: integer
          format: int64
          example: 1245356
    PostCollectionSheetRequest:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        transactionDate:
          type: string
          example: 04 May 2014
        actualDisbursementDate:
          type: string
          example: 04 May 2014
        bulkDisbursementTransactions:
          type: array
          items:
            type: integer
            format: int32
        bulkRepaymentTransactions:
          $ref: '#/components/schemas/PostCollectionSheetBulkRepaymentTransactions'
        bulkSavingsDueTransactions:
          type: array
          items:
            type: integer
            format: int32
      description: PostCollectionSheetRequest
    PostCollectionSheetChanges:
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        loanTransactions:
          type: array
          example:
          - 15
          items:
            type: integer
            format: int32
        SavingsTransactions:
          type: array
          example: []
          items:
            type: integer
            format: int32
    PostCollectionSheetResponse:
      type: object
      properties:
        groupId:
          type: integer
          format: int32
          example: 10
        resourceId:
          type: integer
          format: int32
          example: 10
        changes:
          $ref: '#/components/schemas/PostCollectionSheetChanges'
      description: PostCollectionSheetResponse
    PostFloatingRatesRatePeriods:
      type: object
      properties:
        fromDate:
          type: string
          example: 19 November 2015
        interestRate:
          type: number
          format: double
          example: 10
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
    PutFloatingRatesFloatingRateIdRequest:
      type: object
      properties:
        name:
          type: string
          example: Floating Rate 1
        isBaseLendingRate:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        ratePeriods:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostFloatingRatesRatePeriods'
      description: PutFloatingRatesFloatingRateIdRequest
    PutFloatingRatesChanges:
      type: object
      properties:
        ratePeriods:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostFloatingRatesRatePeriods'
    PutFloatingRatesFloatingRateIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutFloatingRatesChanges'
      description: PutFloatingRatesFloatingRateIdResponse
    GetFloatingRatesFloatingRateIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Floating Rate 1
        isBaseLendingRate:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        createdBy:
          type: string
          example: mifos
        createdOn:
          type: string
          example: "Nov 18, 2015"
        modifiedBy:
          type: string
          example: mifos
        modifiedOn:
          type: string
          example: "Nov 18, 2015"
        ratePeriods:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFloatingRatesRatePeriods'
      description: GetFloatingRatesFloatingRateIdResponse
    GetFloatingRatesRatePeriods:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        fromDate:
          type: string
          example: "Dec 15, 2015"
        interestRate:
          type: number
          format: double
          example: 11
        isDifferentialToBaseLendingRate:
          type: boolean
          example: false
        isActive:
          type: boolean
          example: true
        createdBy:
          type: string
          example: mifos
        createdOn:
          type: string
          example: "Nov 18, 2015"
        modifiedBy:
          type: string
          example: mifos
        modifiedOn:
          type: string
          example: "Nov 18, 2015"
    PostFloatingRatesRequest:
      type: object
      properties:
        name:
          type: string
          example: Floating Rate 1
        isBaseLendingRate:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        ratePeriods:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostFloatingRatesRatePeriods'
      description: PostFloatingRatesRequest
    PostFloatingRatesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostFloatingRatesResponse
    GetFloatingRatesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Floating Rate 1
        isBaseLendingRate:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        createdBy:
          type: string
          example: mifos
        createdOn:
          type: string
          example: "Nov 18, 2015"
        modifiedBy:
          type: string
          example: mifos
        modifiedOn:
          type: string
          example: "Nov 18, 2015"
      description: GetFloatingRatesResponse
    PutFundsFundIdRequest:
      type: object
      properties:
        name:
          type: string
          example: EU Agri Fund (2010-2020)
      description: PutFundsFundIdRequest
    PutFundsFundIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutFundsFundIdRequest'
      description: PutFundsFundIdResponse
    PostFundsRequest:
      type: object
      properties:
        name:
          type: string
          example: EU Agri Fund
      description: PostFundsRequest
    PostFundsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostFundsResponse
    GetFundsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: EU Agri Fund
      description: GetFundsResponse
    GetCentersOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetCentersStaffOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        displayName:
          type: string
          example: "D, Mary"
    GetCentersTemplateResponse:
      type: object
      properties:
        active:
          type: boolean
          example: false
        activationDate:
          type: string
          format: date
        officeId:
          type: integer
          format: int32
          example: 2
        officeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetCentersOfficeOptions'
        staffOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetCentersStaffOptions'
      description: GetCentersTemplateResponse
    GetCentersCenterIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        status:
          $ref: '#/components/schemas/GetCentersStatus'
        active:
          type: boolean
          example: false
        name:
          type: string
          example: First Center (No groups)
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        hierarchy:
          type: string
          example: .8.
      description: GetCentersCenterIdResponse
    GetCentersStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: groupingStatusType.pending
        description:
          type: string
          example: Pending
    GetCentersAccountType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.group
        description:
          type: string
          example: Group
    GetCentersCenterIdAccountsResponse:
      type: object
      properties:
        savingsAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetCentersSavingsAccounts'
      description: GetCentersCenterIdAccountsResponse
    GetCentersCenterIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetCentersCenterIdStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        prematureClosed:
          type: boolean
          example: false
        transferInProgress:
          type: boolean
          example: false
        transferOnHold:
          type: boolean
          example: false
    GetCentersDepositType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: depositAccountType.savingsDeposit
        description:
          type: string
          example: Savings
    GetCentersSavingsAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 16
        accountNo:
          type: integer
          format: int64
          example: 16
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: Voluntary savings
        status:
          $ref: '#/components/schemas/GetCentersCenterIdStatus'
        currency:
          $ref: '#/components/schemas/GetCentersCenterIdCurrency'
        accountType:
          $ref: '#/components/schemas/GetCentersAccountType'
        timeline:
          $ref: '#/components/schemas/GetCentersTimeline'
        depositType:
          $ref: '#/components/schemas/GetCentersDepositType'
    GetCentersTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
        submittedByUsername:
          type: string
          example: mifos
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
    PostCentersCenterIdRequest:
      type: object
      properties:
        closureReasonId:
          type: integer
          format: int32
          example: 32
        closureDate:
          type: string
          example: 05 May 2014
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
      description: PostCentersCenterIdRequest
    PostCentersCenterIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostCentersCenterIdResponse
    GetCentersPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        status:
          $ref: '#/components/schemas/GetCentersStatus'
        active:
          type: boolean
          example: false
        name:
          type: string
          example: Center 1
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        hierarchy:
          type: string
          example: .2.
    GetCentersResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetCentersPageItems'
      description: GetCentersResponse
    PutCentersCenterIdRequest:
      type: object
      properties:
        name:
          type: string
          example: First Center (No groups)
      description: PutCentersCenterIdRequest
    PutCentersCenterIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        groupId:
          type: integer
          format: int32
          example: 8
        resourceId:
          type: integer
          format: int32
          example: 8
        changes:
          $ref: '#/components/schemas/PutCentersChanges'
      description: PutCentersCenterIdResponse
    PutCentersChanges:
      type: object
      properties:
        name:
          type: string
          example: First Center (No groups) - modified
    DeleteCentersCenterIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/DeleteCentersChanges'
      description: DeleteCentersCenterIdResponse
    DeleteCentersChanges:
      type: object
    PostCentersRequest:
      type: object
      properties:
        name:
          type: string
          example: First Center (No groups)
        officeId:
          type: integer
          format: int32
          example: 1
        active:
          type: boolean
          example: false
      description: PostCentersRequest
    PostCentersResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        groupId:
          type: integer
          format: int32
          example: 8
        resourceId:
          type: integer
          format: int32
          example: 8
      description: PostCentersResponse
    GetGroupsTemplateClientOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        displayName:
          type: string
          example: Petra Yton
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
    GetGroupsTemplateColumnHeaderData:
      type: object
      properties:
        columnName:
          type: string
          example: group_id
        columnType:
          type: string
          example: bigint
        columnLength:
          type: integer
          format: int32
          example: 0
        columnDisplayType:
          type: string
          example: INTEGER
        isColumnNullable:
          type: boolean
          example: false
        isColumnPrimaryKey:
          type: boolean
          example: true
        columnValues:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateColumnValues'
    GetGroupsTemplateColumnValues:
      type: object
    GetGroupsTemplateDatatables:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_group
        registeredTableName:
          type: string
          example: Group Activation Data
        columnHeaderData:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateColumnHeaderData'
    GetGroupsTemplateOfficeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
    GetGroupsTemplateResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        officeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateOfficeOptions'
        staffOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateStaffOptions'
        clientOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateClientOptions'
        datatables:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsTemplateDatatables'
      description: GetGroupsTemplateResponse
    GetGroupsTemplateStaffOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        displayName:
          type: string
          example: "C, Mike"
    GetGroupsGroupIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: First Group
        externalId:
          type: string
          example: 000-1A
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        hierarchy:
          type: string
          example: .1.
        timeline:
          $ref: '#/components/schemas/GetGroupsGroupIdTimeline'
      description: GetGroupsGroupIdResponse
    GetGroupsGroupIdTimeline:
      type: object
      properties:
        activatedOnDate:
          type: string
          format: date
        activatedByUsername:
          type: string
          example: mifos
        activatedByFirstname:
          type: string
          example: App
        activatedByLastname:
          type: string
          example: Administrator
    PostGroupsGroupIdCommandUnassignStaffRequest:
      type: object
      properties:
        staffId:
          type: integer
          format: int32
          example: 1
      description: PostGroupsGroupIdCommandUnassignStaffRequest
    PostGroupsGroupIdCommandUnassignStaffChanges:
      type: object
    PostGroupsGroupIdCommandUnassignStaffResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        groupId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PostGroupsGroupIdCommandUnassignStaffChanges'
      description: PostGroupsGroupIdCommandUnassignStaffResponse
    PostGroupsGroupIdClients:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
    PostGroupsGroupIdRequest:
      type: object
      properties:
        destinationGroupId:
          type: integer
          format: int32
          example: 2
        clients:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostGroupsGroupIdClients'
      description: PostGroupsGroupIdRequest
    PostGroupsGroupIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostGroupsGroupIdResponse
    GetGroupsGroupIdAccountsLoanAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        accountNo:
          type: integer
          format: int64
          example: 3
        productId:
          type: integer
          format: int32
          example: 3
        productName:
          type: string
          example: daily product
        status:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsStatus'
        loanType:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsLoanType'
    GetGroupsGroupIdAccountsLoanType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.group
        description:
          type: string
          example: Group
    GetGroupsGroupIdAccountsMemberLoanAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        accountNo:
          type: integer
          format: int64
          example: 4
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: testLoan
        status:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberLoanStatus'
        loanType:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberLoanType'
    GetGroupsGroupIdAccountsMemberLoanStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 200
        code:
          type: string
          example: loanStatusType.approved
        description:
          type: string
          example: Approved
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: true
        active:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        overpaid:
          type: boolean
          example: false
    GetGroupsGroupIdAccountsMemberLoanType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: accountType.jlg
        description:
          type: string
          example: JLG
    GetGroupsGroupIdAccountsMemberSavingsAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        accountNo:
          type: integer
          format: int64
          example: 3
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: p_sav
        status:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingStatus'
        currency:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingCurrency'
        accountType:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberLoanType'
    GetGroupsGroupIdAccountsResponse:
      type: object
      properties:
        loanAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsGroupIdAccountsLoanAccounts'
        savingsAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingAccounts'
        memberLoanAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberLoanAccounts'
        memberSavingsAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsGroupIdAccountsMemberSavingsAccounts'
      description: GetGroupsGroupIdAccountsResponse
    GetGroupsGroupIdAccountsSavingAccountType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.group
        description:
          type: string
          example: Group
    GetGroupsGroupIdAccountsSavingAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 9
        accountNo:
          type: integer
          format: int64
          example: 9
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: p_sav
        status:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingStatus'
        currency:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingCurrency'
        accountType:
          $ref: '#/components/schemas/GetGroupsGroupIdAccountsSavingAccountType'
    GetGroupsGroupIdAccountsSavingCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetGroupsGroupIdAccountsSavingStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
    GetGroupsGroupIdAccountsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: loanStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        pendingApproval:
          type: boolean
          example: true
        waitingForDisbursal:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        overpaid:
          type: boolean
          example: false
    GetGroupsPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: AnotherGroup
        status:
          $ref: '#/components/schemas/GetGroupsStatus'
        active:
          type: boolean
          example: false
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        hierarchy:
          type: string
          example: .4.
    GetGroupsResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetGroupsPageItems'
      description: GetGroupsResponse
    GetGroupsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: clientStatusType.pending
        description:
          type: string
          example: Pending
    PutGroupsGroupIdRequest:
      type: object
      properties:
        name:
          type: string
          example: First Group (changed)
      description: PutGroupsGroupIdRequest
    PutGroupsGroupIdChanges:
      type: object
      properties:
        name:
          type: string
          example: First Group (changed)
    PutGroupsGroupIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        groupId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutGroupsGroupIdChanges'
      description: PutGroupsGroupIdResponse
    DeleteGroupsGroupIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        groupId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 2
      description: DeleteGroupsGroupIdResponse
    PostGroupsRequest:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Pending Group
        active:
          type: boolean
          example: false
      description: PostGroupsRequest
    PostGroupsResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        groupId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 2
      description: PostGroupsResponse
    GetInterestRateChartsChartIdChartSlabsAttributeName:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
    GetInterestRateChartsChartIdChartSlabsConditionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
    GetInterestRateChartsChartIdChartSlabsEntityType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
    GetInterestRateChartsChartIdChartSlabsIncentiveType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
    GetInterestRateChartsChartIdChartSlabsIncentives:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        entityType:
          $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsEntityType'
        attributeName:
          $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsAttributeName'
        conditionType:
          $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsConditionType'
        attributeValue:
          type: integer
          format: int32
          example: 11
        attributeValueDesc:
          type: string
          example: FEMALE
        incentiveType:
          $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsIncentiveType'
        amount:
          type: number
          format: float
          example: -1.0
    GetInterestRateChartsChartIdChartSlabsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: 5% interest from 1 day till 180 days of deposit
        periodTypes:
          $ref: '#/components/schemas/GetInterestRateChartsTemplatePeriodTypes'
        fromPeriod:
          type: integer
          format: int32
          example: 1
        toPeriod:
          type: integer
          format: int32
          example: 180
        annualInterestRate:
          type: number
          format: double
          example: 5
        currency:
          $ref: '#/components/schemas/GetInterestRateChartsCurrency'
        incentives:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetInterestRateChartsChartIdChartSlabsIncentives'
      description: GetInterestRateChartsChartIdChartSlabsResponse
    GetInterestRateChartsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetInterestRateChartsTemplatePeriodTypes:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
    PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest:
      type: object
      properties:
        annualInterestRate:
          type: number
          format: double
          example: 6
        description:
          type: string
          example: Interest rate changed to 6%
      description: PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest
    PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest'
      description: PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse
    DeleteInterestRateChartsChartIdChartSlabsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteInterestRateChartsChartIdChartSlabsResponse
    PostInterestRateChartsChartIdChartSlabsIncentives:
      type: object
      properties:
        entityType:
          type: integer
          format: int32
          example: 2
        attributeName:
          type: integer
          format: int32
          example: 2
        conditionType:
          type: integer
          format: int32
          example: 2
        attributeValue:
          type: integer
          format: int32
          example: 11
        incentiveType:
          type: integer
          format: int32
          example: 2
        amount:
          type: number
          format: float
          example: -1
    PostInterestRateChartsChartIdChartSlabsRequest:
      type: object
      properties:
        periodType:
          type: integer
          format: int32
          example: 0
        fromPeriod:
          type: integer
          format: int32
          example: 1
        toPeriod:
          type: integer
          format: int32
          example: 180
        annualInterestRate:
          type: number
          format: double
          example: 5
        description:
          type: string
          example: 5% interest from 1 day till 180 days of deposit
        locale:
          type: string
          example: en
        incentives:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostInterestRateChartsChartIdChartSlabsIncentives'
      description: PostInterestRateChartsChartIdChartSlabsRequest
    PostInterestRateChartsChartIdChartSlabsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostInterestRateChartsChartIdChartSlabsResponse
    GetInterestRateChartsChartSlabs:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        periodTypes:
          $ref: '#/components/schemas/GetInterestRateChartsTemplatePeriodTypes'
        fromPeriod:
          type: integer
          format: int32
          example: 1
        annualInterestRate:
          type: integer
          format: int32
          example: 6
        currency:
          $ref: '#/components/schemas/GetInterestRateChartsCurrency'
    GetInterestRateChartsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        fromDate:
          type: string
          format: date
        savingsProductId:
          type: integer
          format: int32
          example: 1
        savingsProductName:
          type: string
          example: Fixed Deposit Product 001
        chartSlabs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetInterestRateChartsChartSlabs'
      description: GetInterestRateChartsResponse
    GetInterestRateChartsTemplateResponse:
      type: object
      properties:
        periodTypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetInterestRateChartsTemplatePeriodTypes'
      description: GetInterestRateChartsTemplateResponse
    PutInterestRateChartsChartIdRequest:
      type: object
      properties:
        name:
          type: string
          example: Interest rate chart for 2014
        description:
          type: string
          example: Interest rate chart for 2014
      description: PutInterestRateChartsChartIdRequest
    PutInterestRateChartsChartIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PutInterestRateChartsChartIdResponse
    DeleteInterestRateChartsChartIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteInterestRateChartsChartIdResponse
    PostInterestRateChartsRequest:
      type: object
      properties:
        name:
          type: string
          example: Chart - 2014
        description:
          type: string
          example: This chart is applicable for year 2014
        type:
          type: string
          example: Document
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromDate:
          type: string
          example: 01 Jan 2014
      description: PostInterestRateChartsRequest
    PostInterestRateChartsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostInterestRateChartsResponse
    PutLoansLoanIdChargesChargeIdRequest:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        amount:
          type: number
          format: float
          example: 60
        dueDate:
          type: string
          example: 27 March 2013
      description: ' PutLoansLoanIdChargesChargeIdRequest'
    PutLoansLoanIdChargesChargeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 6
        changes:
          $ref: '#/components/schemas/PutLoansLoanIdChargesChargeIdRequest'
      description: PutLoansLoanIdChargesChargeIdResponse
    GetLoanChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetLoanChargeCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetLoanChargeTemplateChargeAppliesTo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeAppliesTo.loan
        description:
          type: string
          example: Loan
    GetLoanChargeTemplateChargeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Collection fee
        active:
          type: boolean
          example: true
        penalty:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetLoanChargeCurrency'
        amount:
          type: number
          format: float
          example: 100
        chargeTimeType:
          $ref: '#/components/schemas/GetLoanChargeTemplateChargeTimeType'
        chargeAppliesTo:
          $ref: '#/components/schemas/GetLoanChargeTemplateChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoanChargeCalculationType'
    GetLoanChargeTemplateChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
    GetLoansLoanIdChargesTemplateResponse:
      type: object
      properties:
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanChargeTemplateChargeOptions'
        penalty:
          type: boolean
          example: false
      description: GetLoansLoanIdChargesTemplateResponse
    PostLoansLoanIdChargesRequest:
      type: object
      properties:
        chargeId:
          type: integer
          format: int32
          example: 2
        locale:
          type: string
          example: en
        amount:
          type: number
          format: float
          example: 100
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 29 April 2013
      description: ' PostLoansLoanIdChargesRequest'
    PostLoansLoanIdChargesResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 31
      description: ' PostLoansLoanIdChargesResponse'
    PostLoansLoanIdChargesChargeIdRequest:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        transactionDate:
          type: string
          example: 19 September 2013
      description: PostLoansLoanIdChargesChargeIdRequest
    PostLoansLoanIdChargesChargeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 6
        savingsId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 12
      description: PostLoansLoanIdChargesChargeIdResponse
    DeleteLoansLoanIdChargesChargeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int64
          example: 1
        loanId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 2
      description: DeleteLoansLoanIdChargesChargeIdResponse
    GetLoanChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeTimeType.disbursement
        description:
          type: string
          example: Disbursement
    GetLoansLoanIdChargesChargeIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Loan Processing fee
        chargeTimeType:
          $ref: '#/components/schemas/GetLoanChargeTimeType'
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoanChargeCalculationType'
        percentage:
          type: number
          format: double
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        currency:
          $ref: '#/components/schemas/GetLoanChargeCurrency'
        amount:
          type: number
          format: float
          example: 100
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        amountOutstanding:
          type: number
          format: float
          example: 100
        amountOrPercentage:
          type: number
          format: float
          example: 100
        penalty:
          type: boolean
          example: false
      description: GetLoansLoanIdChargesChargeIdResponse
    PostLoansLoanIdScheduleRequest:
      type: object
      description: PostLoansLoanIdScheduleRequest
    PostLoanChanges:
      type: object
      properties:
        removedEntityIds:
          type: array
          example:
          - 21
          - 22
          items:
            type: integer
            format: int32
    PostLoansLoanIdScheduleResponse:
      type: object
      properties:
        loanId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PostLoanChanges'
      description: PostLoansLoanIdScheduleResponse
    PostLoansLoanIdTransactionsTransactionIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en_GB
        dateFormat:
          type: string
          example: dd MMMM yyyy
        transactionDate:
          type: string
          example: 25 May 2012
        transactionAmount:
          type: number
          format: double
        note:
          type: string
          example: An optional note about why your adjusting or changing the transaction.
      description: PostLoansLoanIdTransactionsTransactionIdRequest
    PostLoansLoanIdTransactionsTransactionIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 16
      description: PostLoansLoanIdTransactionsTransactionIdResponse
    GetLoansCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetLoansLoanIdTransactionsTransactionIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        type:
          $ref: '#/components/schemas/GetLoansType'
        date:
          type: string
          format: date
        manuallyReversed:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetLoansCurrency'
        amount:
          type: number
          format: double
          example: 559.88
        interestPortion:
          type: number
          format: double
          example: 559.88
      description: GetLoansLoanIdTransactionsTransactionIdResponse
    GetLoansType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: loanTransactionType.repayment
        description:
          type: string
          example: Repayment
        disbursement:
          type: boolean
          example: false
        repaymentAtDisbursement:
          type: boolean
          example: false
        repayment:
          type: boolean
          example: true
        contra:
          type: boolean
          example: false
        waiveInterest:
          type: boolean
          example: false
        waiveCharges:
          type: boolean
          example: false
        writeOff:
          type: boolean
          example: false
        recoveryRepayment:
          type: boolean
          example: false
    GetLoansLoanIdTransactionsTemplateResponse:
      type: object
      properties:
        transactionType:
          $ref: '#/components/schemas/GetLoansTransactionType'
        date:
          type: string
          format: date
        total:
          $ref: '#/components/schemas/GetLoansTotal'
      description: GetLoansLoanIdTransactionsTemplateResponse
    GetLoansTotal:
      type: object
      properties:
        currencyCode:
          type: string
          example: XOF
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 0
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        amount:
          type: number
          format: float
          example: 471
        defaultName:
          type: string
          example: CFA Franc BCEAO
        nameCode:
          type: string
          example: currency.XOF
        displaySymbol:
          type: string
          example: CFA
        zero:
          type: boolean
          example: false
        greaterThanZero:
          type: boolean
          example: true
        displaySymbolValue:
          type: string
          example: 471 CFA
    GetLoansTransactionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: loanTransactionType.repayment
        description:
          type: string
          example: Repayment
    PostLoansLoanIdTransactionsRequest:
      type: object
      description: PostLoansLoanIdTransactionsRequest
    PostLoansLoanIdTransactionsResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 22
      description: PostLoansLoanIdTransactionsResponse
    PostLoansRequest:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en_GB
        productId:
          type: integer
          format: int32
          example: 1
        principal:
          type: number
          format: double
        loanTermFrequency:
          type: integer
          format: int32
          example: 12
        loanTermFrequencyType:
          type: integer
          format: int32
          example: 2
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 2
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 2
        amortizationType:
          type: integer
          format: int32
          example: 1
        interestType:
          type: integer
          format: int32
          example: 0
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 1
        expectedDisbursementDate:
          type: string
          example: 20 September 2011
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 2
      description: PostLoansRequest
    GetLoansLoanIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: UGX
        name:
          type: string
          example: Uganda Shilling
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: USh
        nameCode:
          type: string
          example: currency.UGX
        displayLabel:
          type: string
          example: Uganda Shilling (USh)
    PostLoansRepaymentSchedulePeriods:
      type: object
      properties:
        period:
          type: integer
          format: int32
          example: 0
        dueDate:
          type: string
          format: date
        principalDisbursed:
          type: integer
          format: int64
          example: 100000
        principalLoanBalanceOutstanding:
          type: integer
          format: int64
          example: 100000
        feeChargesDue:
          type: integer
          format: int64
          example: 0
        feeChargesOutstanding:
          type: integer
          format: int64
          example: 0
        totalOriginalDueForPeriod:
          type: integer
          format: int64
          example: 0
        totalDueForPeriod:
          type: integer
          format: int64
          example: 0
        totalOutstandingForPeriod:
          type: integer
          format: int64
          example: 0
        totalOverdue:
          type: integer
          format: int64
          example: 0
        totalActualCostOfLoanForPeriod:
          type: integer
          format: int64
          example: 0
    PostLoansResponse:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        loanTermInDays:
          type: integer
          format: int32
          example: 366
        totalPrincipalDisbursed:
          type: integer
          format: int64
          example: 100000
        totalPrincipalExpected:
          type: integer
          format: int64
          example: 100000
        totalPrincipalPaid:
          type: integer
          format: int64
          example: 0
        totalInterestCharged:
          type: number
          format: double
          example: 13471.52
        totalFeeChargesCharged:
          type: integer
          format: int64
          example: 0
        totalPenaltyChargesCharged:
          type: integer
          format: int64
          example: 0
        totalWaived:
          type: integer
          format: int64
          example: 0
        totalWrittenOff:
          type: integer
          format: int64
          example: 0
        totalRepaymentExpected:
          type: number
          format: double
          example: 113471.52
        totalRepayment:
          type: integer
          format: int64
          example: 0
        totalOutstanding:
          type: integer
          format: int64
          example: 0
        periods:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostLoansRepaymentSchedulePeriods'
      description: PostLoansResponse
    PutLoansLoanIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        productId:
          type: integer
          format: int32
          example: 1
        principal:
          type: integer
          format: int64
          example: 5000
        loanTermFrequency:
          type: integer
          format: int32
          example: 10
        loanTermFrequencyType:
          type: integer
          format: int32
          example: 0
        numberOfRepayments:
          type: integer
          format: int32
          example: 10
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 0
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 2
        interestType:
          type: integer
          format: int32
          example: 0
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 0
        amortizationType:
          type: integer
          format: int32
          example: 1
        expectedDisbursementDate:
          type: string
          example: 04 March 2014
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 1
      description: PutLoansLoanIdRequest
    PutLoansLoanIdChanges:
      type: object
      properties:
        principal:
          type: integer
          format: int64
          example: 5000
        locale:
          type: string
          example: en
    PutLoansLoanIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutLoansLoanIdChanges'
      description: PutLoansLoanIdResponse
    DeleteLoansLoanIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteLoansLoanIdResponse
    PostLoansLoanIdRequest:
      type: object
      properties:
        toLoanOfficerId:
          type: integer
          format: int32
          example: 2
        assignmentDate:
          type: string
          example: 02 September 2014
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromLoanOfficerId:
          type: integer
          format: int32
      description: PostLoansLoanIdRequest
    PostLoansLoanIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 6
        loanId:
          type: integer
          format: int32
          example: 3
        resourceId:
          type: integer
          format: int32
          example: 3
      description: PostLoansLoanIdResponse
    GetLoansLoanIdAmortizationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: amortizationType.equal.installments
        description:
          type: string
          example: Equal installments
    GetLoansLoanIdChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: chargeCalculationType.percent.of.amount
        description:
          type: string
          example: '% Amount'
    GetLoansLoanIdChargePaymentMode:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: Regular
    GetLoansLoanIdChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 9
        code:
          type: string
          example: chargeTimeType.overdueInstallment
        description:
          type: string
          example: overdue fees
    GetLoansLoanIdDisbursementDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 71
        expectedDisbursementDate:
          type: string
          format: date
        principal:
          type: number
          format: float
          example: 22000.0
        approvedPrincipal:
          type: number
          format: float
          example: 22000.0
    GetLoansLoanIdEmiVariations:
      type: object
    GetLoansLoanIdFeeFrequency:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: feeFrequencyperiodFrequencyType.weeks
        description:
          type: string
          example: Weeks
    GetLoansLoanIdInterestCalculationPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: interestCalculationPeriodType.same.as.repayment.period
        description:
          type: string
          example: Same as repayment period
    GetLoansLoanIdInterestRateFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: interestRateFrequency.periodFrequencyType.years
        description:
          type: string
          example: Per year
    GetLoansLoanIdInterestType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: interestType.flat
        description:
          type: string
          example: Flat
    GetLoansLoanIdLinkedAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
    GetLoansLoanIdLoanType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: loanType.individual
        description:
          type: string
          example: Individual
    GetLoansLoanIdOverdueCharges:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 20
        name:
          type: string
          example: overdraft penality
        active:
          type: boolean
          example: true
        penalty:
          type: boolean
          example: true
        currency:
          $ref: '#/components/schemas/GetLoanCurrency'
        amount:
          type: number
          format: float
          example: 3.0
        chargeTimeType:
          $ref: '#/components/schemas/GetLoansLoanIdChargeTimeType'
        chargeAppliesTo:
          $ref: '#/components/schemas/GetLoanChargeTemplateChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoansLoanIdChargeCalculationType'
        chargePaymentMode:
          $ref: '#/components/schemas/GetLoansLoanIdChargePaymentMode'
        feeInterval:
          type: integer
          format: int32
          example: 2
        feeFrequency:
          $ref: '#/components/schemas/GetLoansLoanIdFeeFrequency'
    GetLoansLoanIdRepaymentFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: repaymentFrequency.periodFrequencyType.months
        description:
          type: string
          example: Months
    GetLoansLoanIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        status:
          $ref: '#/components/schemas/GetLoansLoanIdStatus'
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Kampala first Client
        clientOfficeId:
          type: integer
          format: int32
          example: 2
        loanProductId:
          type: integer
          format: int32
          example: 1
        loanProductName:
          type: string
          example: Kampala Product (with cash accounting)
        loanProductDescription:
          type: string
          example: Typical Kampala loan product with cash accounting enabled for testing.
        loanPurposeId:
          type: integer
          format: int32
          example: 22
        loanPurposeName:
          type: string
          example: option.HousingImprovement
        loanOfficerId:
          type: integer
          format: int32
          example: 2
        loanOfficerName:
          type: string
          example: "LoanOfficer, Kampala"
        loanType:
          $ref: '#/components/schemas/GetLoansLoanIdLoanType'
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        principal:
          type: integer
          format: int64
          example: 1000000
        termFrequency:
          type: integer
          format: int32
          example: 12
        termPeriodFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdTermPeriodFrequencyType'
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdRepaymentFrequencyType'
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 24
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestRateFrequencyType'
        annualInterestRate:
          type: integer
          format: int32
          example: 24
        amortizationType:
          $ref: '#/components/schemas/GetLoansLoanIdAmortizationType'
        interestType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestType'
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestCalculationPeriodType'
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 2
        timeline:
          $ref: '#/components/schemas/GetLoansLoanIdTimeline'
        summary:
          $ref: '#/components/schemas/GetLoansLoanIdSummary'
      description: GetLoansLoanIdResponse
    GetLoansLoanIdStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 300
        code:
          type: string
          example: loanStatusType.active
        description:
          type: string
          example: Active
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: false
        active:
          type: boolean
          example: true
        closedObligationsMet:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        overpaid:
          type: boolean
          example: false
    GetLoansLoanIdSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        principalDisbursed:
          type: integer
          format: int64
          example: 1000000
        principalPaid:
          type: integer
          format: int64
          example: 0
        principalWrittenOff:
          type: integer
          format: int64
          example: 0
        principalOutstanding:
          type: integer
          format: int64
          example: 1000000
        principalOverdue:
          type: number
          format: double
          example: 833333.3
        interestCharged:
          type: integer
          format: int64
          example: 240000
        interestPaid:
          type: integer
          format: int64
          example: 0
        interestWaived:
          type: integer
          format: int64
          example: 0
        interestWrittenOff:
          type: integer
          format: int64
          example: 0
        interestOutstanding:
          type: integer
          format: int64
          example: 240000
        interestOverdue:
          type: integer
          format: int64
          example: 200000
        feeChargesCharged:
          type: integer
          format: int64
          example: 18000
        feeChargesDueAtDisbursementCharged:
          type: integer
          format: int64
          example: 0
        feeChargesPaid:
          type: integer
          format: int64
          example: 0
        feeChargesWaived:
          type: integer
          format: int64
          example: 0
        feeChargesWrittenOff:
          type: integer
          format: int64
          example: 0
        feeChargesOutstanding:
          type: integer
          format: int64
          example: 18000
        feeChargesOverdue:
          type: integer
          format: int64
          example: 15000
        penaltyChargesCharged:
          type: integer
          format: int64
          example: 0
        penaltyChargesPaid:
          type: integer
          format: int64
          example: 0
        penaltyChargesWaived:
          type: integer
          format: int64
          example: 0
        penaltyChargesWrittenOff:
          type: integer
          format: int64
          example: 0
        penaltyChargesOutstanding:
          type: integer
          format: int64
          example: 0
        penaltyChargesOverdue:
          type: integer
          format: int64
          example: 0
        totalExpectedRepayment:
          type: integer
          format: int64
          example: 1258000
        totalRepayment:
          type: integer
          format: int64
          example: 0
        totalExpectedCostOfLoan:
          type: integer
          format: int64
          example: 258000
        totalCostOfLoan:
          type: integer
          format: int64
          example: 0
        totalWaived:
          type: integer
          format: int64
          example: 0
        totalWrittenOff:
          type: integer
          format: int64
          example: 0
        totalOutstanding:
          type: integer
          format: int64
          example: 1258000
        totalOverdue:
          type: number
          format: double
          example: 1048333.3
        overdueSinceDate:
          type: string
          format: date
        linkedAccount:
          $ref: '#/components/schemas/GetLoansLoanIdLinkedAccount'
        disbursementDetails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdDisbursementDetails'
        fixedEmiAmount:
          type: number
          format: float
          example: 1100.0
        maxOutstandingLoanBalance:
          type: integer
          format: int64
          example: 35000
        canDisburse:
          type: boolean
          example: false
        emiAmountVariations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdEmiVariations'
        inArrears:
          type: boolean
          example: true
        isNPA:
          type: boolean
          example: false
        overdueCharges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdOverdueCharges'
    GetLoansLoanIdTermPeriodFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: termFrequency.periodFrequencyType.months
        description:
          type: string
          example: Months
    GetLoansLoanIdTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
        submittedByUsername:
          type: string
          example: admin
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        approvedOnDate:
          type: string
          format: date
        approvedByUsername:
          type: string
          example: admin
        approvedByFirstname:
          type: string
          example: App
        approvedByLastname:
          type: string
          example: Administrator
        expectedDisbursementDate:
          type: string
          format: date
        actualDisbursementDate:
          type: string
          format: date
        disbursedByUsername:
          type: string
          example: admin
        disbursedByFirstname:
          type: string
          example: App
        disbursedByLastname:
          type: string
          example: Administrator
        expectedMaturityDate:
          type: string
          format: date
    GetLoansTemplateProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Kampala Product (with cash accounting)
    GetLoansTemplateResponse:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
          example: 1
        clientName:
          type: string
          example: Kampala first Client
        clientOfficeId:
          type: integer
          format: int32
          example: 2
        timeline:
          $ref: '#/components/schemas/GetLoansTemplateTimeline'
        productOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoansTemplateProductOptions'
      description: GetLoansTemplateResponse
    GetLoansTemplateTimeline:
      type: object
      properties:
        expectedDisbursementDate:
          type: string
          format: date
    GetLoansResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 1
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoansLoanIdResponse'
      description: GetLoansResponse
    PutLoanProductsProductIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en_GB
        principal:
          type: number
          format: double
      description: PutLoanProductsProductIdRequest
    PutLoanChanges:
      type: object
      properties:
        principal:
          type: number
          format: double
        locale:
          type: string
          example: en_GB
    PutLoanProductsProductIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutLoanChanges'
      description: PutLoanProductsProductIdResponse
    GetLoanProductsAccountingMappingOptions:
      type: object
      properties:
        liabilityAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsLiabilityAccountOptions'
        assetAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsAssetAccountOptions'
        expenseAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsExpenseAccountOptions'
        incomeAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsIncomeAccountOptions'
    GetLoanProductsAccountingRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountingRuleType.cash
        description:
          type: string
          example: CASH BASED
    GetLoanProductsAmortizationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: amortizationType.equal.installments
        description:
          type: string
          example: Equal installments
    GetLoanProductsAssetAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Loan portfolio
        glCode:
          type: integer
          format: int32
          example: 2
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetLoanProductsLiabilityType'
        usage:
          $ref: '#/components/schemas/GetLoanProductsLiabilityUsage'
        nameDecorated:
          type: string
          example: Loan portfolio
        tagId:
          $ref: '#/components/schemas/GetLoanProductsLiabilityTagId'
        organizationRunningBalance:
          type: integer
          format: int32
          example: 60000
    GetLoanProductsChargeAppliesTo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeAppliesTo.loan
        description:
          type: string
          example: Loan
    GetLoanProductsChargeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 5
        name:
          type: string
          example: des charges
        active:
          type: boolean
          example: true
        penalty:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetLoanProductsCurrencyOptions'
        amount:
          type: integer
          format: int64
          example: 100
        chargeTimeType:
          $ref: '#/components/schemas/GetLoanChargeTimeType'
        chargeAppliesTo:
          $ref: '#/components/schemas/GetLoanProductsChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetLoanChargeCalculationType'
        chargePaymentMode:
          $ref: '#/components/schemas/GetLoansChargePaymentMode'
    GetLoanProductsCurrencyOptions:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetLoanProductsDaysInYearTemplateType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: DaysInYearType.actual
        description:
          type: string
          example: Actual
    GetLoanProductsExpenseAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        name:
          type: string
          example: loans written off 2
        glCode:
          type: integer
          format: int32
          example: 12
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetLoanProductsExpenseType'
        usage:
          $ref: '#/components/schemas/GetLoanProductsLiabilityUsage'
        nameDecorated:
          type: string
          example: loans written off 2
        tagId:
          $ref: '#/components/schemas/GetLoanProductsLiabilityTagId'
        organizationRunningBalance:
          type: integer
          format: int32
          example: 0
    GetLoanProductsExpenseType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 5
        code:
          type: string
          example: accountType.expense
        description:
          type: string
          example: EXPENSE
    GetLoanProductsIncomeAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: income from interest
        glCode:
          type: integer
          format: int32
          example: 4
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetLoanProductsIncomeType'
        usage:
          $ref: '#/components/schemas/GetLoanProductsLiabilityUsage'
        nameDecorated:
          type: string
          example: income from interest
        tagId:
          $ref: '#/components/schemas/GetLoanProductsLiabilityTagId'
        organizationRunningBalance:
          type: integer
          format: int32
          example: 19
    GetLoanProductsIncomeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: accountType.income
        description:
          type: string
          example: INCOME
    GetLoanProductsInterestRateTemplateFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: interestRateFrequency.periodFrequencyType.months
        description:
          type: string
          example: Per month
    GetLoanProductsInterestRecalculationCompoundingFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: interestRecalculationFrequencyType.same.as.repayment.period
        description:
          type: string
          example: Same as repayment period
    GetLoanProductsInterestRecalculationCompoundingType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: interestRecalculationCompoundingMethod.fee
        description:
          type: string
          example: Fee
    GetLoanProductsInterestRecalculationTemplateData:
      type: object
      properties:
        interestRecalculationCompoundingType:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingType'
        rescheduleStrategyType:
          $ref: '#/components/schemas/GetLoanProductsRescheduleStrategyType'
        preClosureInterestCalculationStrategy:
          $ref: '#/components/schemas/GetLoanProductsPreClosureInterestCalculationStrategy'
    GetLoanProductsInterestTemplateType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: interestType.declining.balance
        description:
          type: string
          example: Declining Balance
    GetLoanProductsLiabilityAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: over payment
        glCode:
          type: integer
          format: int32
          example: 13
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetLoanProductsLiabilityType'
        usage:
          $ref: '#/components/schemas/GetLoanProductsLiabilityUsage'
        nameDecorated:
          type: string
          example: over payment
        tagId:
          $ref: '#/components/schemas/GetLoanProductsLiabilityTagId'
        organizationRunningBalance:
          type: integer
          format: int32
          example: 0
    GetLoanProductsLiabilityTagId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
    GetLoanProductsLiabilityType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.liability
        description:
          type: string
          example: LIABILITY
    GetLoanProductsLiabilityUsage:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountUsage.detail
        description:
          type: string
          example: DETAIL
    GetLoanProductsPaymentTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        name:
          type: string
          example: check
        position:
          type: integer
          format: int32
          example: 1
    GetLoanProductsPreClosureInterestCalculationStrategy:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: loanPreClosureInterestCalculationStrategy.tillPreClosureDate
        description:
          type: string
          example: Till preclose Date
    GetLoanProductsRepaymentTemplateFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: repaymentFrequency.periodFrequencyType.months
        description:
          type: string
          example: Months
    GetLoanProductsRescheduleStrategyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: loanRescheduleStrategyMethod.reduce.number.of.installments
        description:
          type: string
          example: Reduce number of installments
    GetLoanProductsTemplateCurrency:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        decimalPlaces:
          type: integer
          format: int32
          example: 0
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        displaySymbol:
          type: string
        nameCode:
          type: string
        displayLabel:
          type: string
          example: "[]"
    GetLoanProductsTemplateResponse:
      type: object
      properties:
        includeInBorrowerCycle:
          type: boolean
          example: false
        useBorrowerCycle:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetLoanProductsTemplateCurrency'
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsRepaymentTemplateFrequencyType'
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRateTemplateFrequencyType'
        amortizationType:
          $ref: '#/components/schemas/GetLoanProductsAmortizationType'
        interestType:
          $ref: '#/components/schemas/GetLoanProductsInterestTemplateType'
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansProductsInterestCalculationPeriodType'
        principalVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        interestRateVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        accountingRule:
          $ref: '#/components/schemas/GetLoanProductsAccountingRule'
        daysInMonthType:
          $ref: '#/components/schemas/GetLoansProductsDaysInMonthTemplateType'
        daysInYearType:
          $ref: '#/components/schemas/GetLoanProductsDaysInYearTemplateType'
        isInterestRecalculationEnabled:
          type: boolean
          example: false
        interestRecalculationData:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationTemplateData'
        paymentTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsPaymentTypeOptions'
        currencyOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsCurrencyOptions'
        repaymentFrequencyTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsRepaymentTemplateFrequencyType'
        preClosureInterestCalculationStrategyOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsPreClosureInterestCalculationStrategy'
        interestRateFrequencyTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestRateTemplateFrequencyType'
        amortizationTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsAmortizationType'
        interestTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestTemplateType'
        interestCalculationPeriodTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoansProductsInterestCalculationPeriodType'
        transactionProcessingStrategyOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsTransactionProcessingStrategyOptions'
        chargeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsChargeOptions'
        accountingRuleOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsAccountingRule'
        accountingMappingOptions:
          $ref: '#/components/schemas/GetLoanProductsAccountingMappingOptions'
        valueConditionTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsValueConditionTypeOptions'
        daysInMonthTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoansProductsDaysInMonthTemplateType'
        daysInYearTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestTemplateType'
        interestRecalculationCompoundingTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingType'
        rescheduleStrategyTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsRescheduleStrategyType'
        interestRecalculationFrequencyTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingFrequencyType'
      description: GetLoanProductsTemplateResponse
    GetLoanProductsTransactionProcessingStrategyOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: mifos-standard-strategy
        name:
          type: string
          example: "Penalties, Fees, Interest, Principal order"
    GetLoanProductsValueConditionTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: mifos-standard-strategyLoanProductValueConditionType.equal
        description:
          type: string
          example: equals
    GetLoansChargePaymentMode:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: Regular
    GetLoansProductsDaysInMonthTemplateType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: DaysInMonthType.actual
        description:
          type: string
          example: Actual
    GetLoansProductsInterestCalculationPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: interestCalculationPeriodType.same.as.repayment.period
        description:
          type: string
          example: Same as repayment period
    PostLoanProductsRequest:
      type: object
      properties:
        name:
          type: string
          example: LP Accrual Accounting
        shortName:
          type: string
          example: LPAA
        currencyCode:
          type: string
          example: USD
        locale:
          type: string
          example: en_GB
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        principal:
          type: number
          format: double
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 2
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 1
        interestRatePerPeriod:
          type: number
          format: double
          example: 1.75
        interestRateFrequencyType:
          type: integer
          format: int32
          example: 2
        amortizationType:
          type: integer
          format: int32
          example: 1
        interestType:
          type: integer
          format: int32
          example: 0
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 1
        daysInMonthType:
          type: integer
          format: int32
          example: 1
        daysInYearType:
          type: integer
          format: int32
          example: 1
        isInterestRecalculationEnabled:
          type: boolean
          example: false
        accountingRule:
          type: integer
          format: int32
          example: 3
        fundSourceAccountId:
          type: integer
          format: int32
          example: 4
        loanPortfolioAccountId:
          type: integer
          format: int32
          example: 8
        receivableInterestAccountId:
          type: integer
          format: int32
          example: 9
        receivableFeeAccountId:
          type: integer
          format: int32
          example: 11
        receivablePenaltyAccountId:
          type: integer
          format: int32
          example: 10
        interestOnLoanAccountId:
          type: integer
          format: int32
          example: 34
        incomeFromFeeAccountId:
          type: integer
          format: int32
          example: 37
        incomeFromPenaltyAccountId:
          type: integer
          format: int32
          example: 35
        overpaymentLiabilityAccountId:
          type: integer
          format: int32
          example: 2
        writeOffAccountId:
          type: integer
          format: int32
          example: 41
      description: PostLoanProductsRequest
    PostLoanProductsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 3
      description: PostLoanProductsResponse
    GetLoanProductsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetLoanProductsInterestRateFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: interestRateFrequency.periodFrequencyType.months
        description:
          type: string
          example: Per month
    GetLoanProductsInterestRecalculationData:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        productId:
          type: integer
          format: int32
          example: 1
        interestRecalculationCompoundingType:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingType'
        interestRecalculationCompoundingFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingFrequencyType'
        rescheduleStrategyType:
          $ref: '#/components/schemas/GetLoanProductsRescheduleStrategyType'
        recalculationRestFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationCompoundingFrequencyType'
        preClosureInterestCalculationStrategy:
          $ref: '#/components/schemas/GetLoanProductsPreClosureInterestCalculationStrategy'
        isArrearsBasedOnOriginalSchedule:
          type: boolean
          example: true
    GetLoanProductsInterestType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: interestType.flat
        description:
          type: string
          example: Flat
    GetLoanProductsRepaymentFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: repaymentFrequency.periodFrequencyType.days
        description:
          type: string
          example: Days
    GetLoanProductsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: personal loan product
        shortName:
          type: string
          example: pe1
        includeInBorrowerCycle:
          type: boolean
          example: false
        useBorrowerCycle:
          type: boolean
          example: false
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        status:
          type: string
          example: loanProduct.active
        currency:
          $ref: '#/components/schemas/GetLoanProductsCurrency'
        principal:
          type: number
          format: float
          example: 10000.0
        minPrincipal:
          type: number
          format: float
          example: 5000.0
        maxPrincipal:
          type: number
          format: float
          example: 15000.0
        numberOfRepayments:
          type: integer
          format: int32
          example: 10
        minNumberOfRepayments:
          type: integer
          format: int32
          example: 5
        maxNumberOfRepayments:
          type: integer
          format: int32
          example: 15
        repaymentEvery:
          type: integer
          format: int32
          example: 7
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsRepaymentFrequencyType'
        interestRatePerPeriod:
          type: number
          format: float
          example: 15.0
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRateFrequencyType'
        annualInterestRate:
          type: number
          format: float
          example: 15.0
        amortizationType:
          $ref: '#/components/schemas/GetLoanProductsAmortizationType'
        interestType:
          $ref: '#/components/schemas/GetLoanProductsInterestType'
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansProductsInterestCalculationPeriodType'
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 1
        transactionProcessingStrategyName:
          type: string
          example: Mifos style
        principalVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        interestRateVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        daysInMonthType:
          $ref: '#/components/schemas/GetLoansProductsDaysInMonthType'
        daysInYearType:
          $ref: '#/components/schemas/GetLoansProductsDaysInYearType'
        isInterestRecalculationEnabled:
          type: boolean
          example: true
        interestRecalculationData:
          $ref: '#/components/schemas/GetLoanProductsInterestRecalculationData'
        accountingRule:
          $ref: '#/components/schemas/GetLoanProductsAccountingRule'
        principalThresholdForLastInstalment:
          type: integer
          format: int32
          example: 0
      description: GetLoanProductsResponse
    GetLoansProductsDaysInMonthType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 30
        code:
          type: string
          example: DaysInMonthType.days360
        description:
          type: string
          example: 30 Days
    GetLoansProductsDaysInYearType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 360
        code:
          type: string
          example: DaysInYearType.days360
        description:
          type: string
          example: 360 Days
    GetLoanAccountingMappings:
      type: object
      properties:
        fundSourceAccount:
          $ref: '#/components/schemas/GetLoanFundSourceAccount'
        loanPortfolioAccount:
          $ref: '#/components/schemas/GetLoanPortfolioAccount'
        transfersInSuspenseAccount:
          $ref: '#/components/schemas/GetLoanTransfersInSuspenseAccount'
        interestOnLoanAccount:
          $ref: '#/components/schemas/GetLoanInterestOnLoanAccount'
        incomeFromFeeAccount:
          $ref: '#/components/schemas/GetLoanIncomeFromFeeAccount'
        incomeFromPenaltyAccount:
          $ref: '#/components/schemas/GetLoanIncomeFromPenaltyAccount'
        writeOffAccount:
          $ref: '#/components/schemas/GetLoanWriteOffAccount'
        overpaymentLiabilityAccount:
          $ref: '#/components/schemas/GetLoanOverpaymentLiabilityAccount'
    GetLoanCharge:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: flat install
        active:
          type: boolean
          example: false
        penalty:
          type: boolean
          example: false
    GetLoanFeeToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetLoanCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetLoanIncomeFromFeeAccount'
    GetLoanFundSourceAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: fund source
        glCode:
          type: integer
          format: int32
          example: 1
    GetLoanIncomeFromFeeAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        name:
          type: string
          example: income from fees 2
        glCode:
          type: integer
          format: int32
          example: 10
    GetLoanIncomeFromPenaltyAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 9
        name:
          type: string
          example: income from penalities 2
        glCode:
          type: integer
          format: int32
          example: 11
    GetLoanInterestOnLoanAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: income from interest
        glCode:
          type: integer
          format: int32
          example: 4
    GetLoanOverpaymentLiabilityAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: over payment
        glCode:
          type: integer
          format: int32
          example: 13
    GetLoanPaymentChannelToFundSourceMappings:
      type: object
      properties:
        paymentType:
          $ref: '#/components/schemas/GetLoanPaymentType'
        fundSourceAccount:
          $ref: '#/components/schemas/GetLoanFundSourceAccount'
    GetLoanPaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        name:
          type: string
          example: check
    GetLoanPortfolioAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Loan portfolio
        glCode:
          type: integer
          format: int32
          example: 2
    GetLoanProductsParamType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: LoanProductParamType.principal
        description:
          type: string
          example: principal
    GetLoanProductsPrincipalVariationsForBorrowerCycle:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 21
        borrowerCycleNumber:
          type: integer
          format: int32
          example: 1
        paramType:
          $ref: '#/components/schemas/GetLoanProductsParamType'
        valueConditionType:
          $ref: '#/components/schemas/GetLoanProductsValueConditionType'
        minValue:
          type: number
          format: float
          example: 2000.0
        maxValue:
          type: number
          format: float
          example: 20000.0
        defaultValue:
          type: number
          format: float
          example: 15000.0
    GetLoanProductsProductIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: advanced accounting
        shortName:
          type: string
          example: ad11
        includeInBorrowerCycle:
          type: boolean
          example: true
        useBorrowerCycle:
          type: boolean
          example: true
        status:
          type: string
          example: loanProduct.active
        currency:
          $ref: '#/components/schemas/GetLoanProductsCurrency'
        principal:
          type: number
          format: float
          example: 10000.0
        minPrincipal:
          type: number
          format: float
          example: 2000.0
        maxPrincipal:
          type: number
          format: float
          example: 15000.0
        numberOfRepayments:
          type: integer
          format: int32
          example: 7
        repaymentEvery:
          type: integer
          format: int32
          example: 7
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsRepaymentFrequencyType'
        interestRatePerPeriod:
          type: number
          format: float
          example: 5.0
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoanProductsInterestRateFrequencyType'
        annualInterestRate:
          type: number
          format: float
          example: 60.0
        amortizationType:
          $ref: '#/components/schemas/GetLoanProductsAmortizationType'
        interestType:
          $ref: '#/components/schemas/GetLoanProductsInterestTemplateType'
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansProductsInterestCalculationPeriodType'
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 1
        transactionProcessingStrategyName:
          type: string
          example: Mifos style
        charges:
          type: array
          example: []
          items:
            type: integer
            format: int32
        productsPrincipalVariationsForBorrowerCycle:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanProductsPrincipalVariationsForBorrowerCycle'
        interestRateVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          example: []
          items:
            type: integer
            format: int32
        accountingRule:
          $ref: '#/components/schemas/GetLoanProductsAccountingRule'
        accountingMappings:
          $ref: '#/components/schemas/GetLoanAccountingMappings'
        paymentChannelToFundSourceMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanPaymentChannelToFundSourceMappings'
        feeToIncomeAccountMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetLoanFeeToIncomeAccountMappings'
        multiDisburseLoan:
          type: boolean
          example: true
        maxTrancheCount:
          type: integer
          format: int32
          example: 3
        outstandingLoanBalance:
          type: number
          format: float
          example: 36000.0
        overdueDaysForNPA:
          type: integer
          format: int32
          example: 2
        principalThresholdForLastInstalment:
          type: integer
          format: int32
          example: 50
      description: GetLoanProductsProductIdResponse
    GetLoanProductsValueConditionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: LoanProductValueConditionType.equal
        description:
          type: string
          example: equals
    GetLoanTransfersInSuspenseAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: transfers
        glCode:
          type: integer
          format: int32
          example: 3
    GetLoanWriteOffAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        name:
          type: string
          example: loans written off 2
        glCode:
          type: integer
          format: int32
          example: 12
    PostResourceTypeResourceIdNotesRequest:
      type: object
      properties:
        note:
          type: string
          example: a note about the client
      description: PostResourceTypeResourceIdNotesRequest
    PostResourceTypeResourceIdNotesResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 76
      description: PostResourceTypeResourceIdNotesResponse
    PutResourceTypeResourceIdNotesNoteIdRequest:
      type: object
      properties:
        note:
          type: string
          example: a note about the client
      description: PutResourceTypeResourceIdNotesNoteIdRequest
    PutNotesChanges:
      type: object
      properties:
        note:
          type: string
          example: a note about the client
    PutResourceTypeResourceIdNotesNoteIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 76
        changes:
          $ref: '#/components/schemas/PutNotesChanges'
      description: PutResourceTypeResourceIdNotesNoteIdResponse
    DeleteResourceTypeResourceIdNotesNoteIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 76
      description: DeleteResourceTypeResourceIdNotesNoteIdResponse
    GetNotesNoteType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: noteType.client
        description:
          type: string
          example: Client note
    GetResourceTypeResourceIdNotesNoteIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 76
        clientId:
          type: integer
          format: int32
          example: 1
        noteType:
          $ref: '#/components/schemas/GetNotesNoteType'
        note:
          type: string
          example: a note about the client
        createdById:
          type: integer
          format: int32
          example: 1
        createdByUsername:
          type: string
          example: mifos
        createdOn:
          type: string
          format: date-time
        updatedById:
          type: integer
          format: int32
          example: 1
        updatedByUsername:
          type: string
          example: mifos
        updatedOn:
          type: string
          format: date-time
      description: GetResourceTypeResourceIdNotesNoteIdResponse
    GetResourceTypeResourceIdNotesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        noteType:
          $ref: '#/components/schemas/GetNotesNoteType'
        note:
          type: string
          example: First note edited
        createdById:
          type: integer
          format: int32
          example: 1
        createdByUsername:
          type: string
          example: mifos
        createdOn:
          type: string
          format: date-time
        updatedById:
          type: integer
          format: int32
          example: 1
        updatedByUsername:
          type: string
          example: mifos
        updatedOn:
          type: string
          format: date-time
      description: GetResourceTypeResourceIdNotesResponse
    GetPaymentTypesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 24
        name:
          type: string
          example: PTC
        description:
          type: string
          example: Cash
        isCashPayment:
          type: boolean
          example: true
        position:
          type: integer
          format: int32
          example: 0
      description: GetPaymentTypesResponse
    DeletePaymentTypesPaymentTypeIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 13
      description: DeletePaymentTypesPaymentTypeIdResponse
    PostPaymentTypesRequest:
      type: object
      properties:
        name:
          type: string
          example: cash
        description:
          type: string
          example: cash payment type
        isCashPayment:
          type: boolean
          example: true
        position:
          type: integer
          format: int32
          example: 1
      description: PostPaymentTypesRequest
    PostPaymentTypesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostPaymentTypesResponse
    PutPaymentTypesPaymentTypeIdRequest:
      type: object
      properties:
        name:
          type: string
          example: mPay
        description:
          type: string
          example: not a cash payment type
        isCashPayment:
          type: boolean
          example: false
        position:
          type: integer
          format: int32
          example: 3
      description: PutPaymentTypesPaymentTypeIdRequest
    PutPaymentTypesPaymentTypeIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 13
      description: PutPaymentTypesPaymentTypeIdResponse
    GetPaymentTypesPaymentTypeIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        name:
          type: string
          example: cash
        description:
          type: string
          example: cash Payment
        isCashPayment:
          type: boolean
          example: true
        position:
          type: integer
          format: int32
          example: 1
      description: GetPaymentTypesPaymentTypeIdResponse
    PutProductsTypeProductIdRequest:
      type: object
      properties:
        description:
          type: string
          example: Share Product Description.
        locale:
          type: string
          example: en
        unitPrice:
          type: number
          format: double
          example: 5.0
      description: PutProductsTypeProductIdRequest
    PutProductsChanges:
      type: object
      properties:
        description:
          type: string
          example: Share Product Description.
        unitPrice:
          type: number
          format: double
          example: 5.0
        locale:
          type: string
          example: en
    PutProductsTypeProductIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutProductsChanges'
      description: PutProductsTypeProductIdResponse
    GetAssetType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountType.asset
        description:
          type: string
          example: ASSET
    GetChargeAppliesTo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: chargeAppliesTo.shares
        description:
          type: string
          example: Shares
    GetChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetChargePaymentMode:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: Regular
    GetChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        code:
          type: string
          example: chargeTimeType.activation
        description:
          type: string
          example: Share Account Activate
    GetChargesCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetEquityType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: accountType.equity
        description:
          type: string
          example: EQUITY
    GetIncomeFromFeeAccountId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 14
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        glCode:
          type: string
          example: INCOME_OY1461237869836
    GetIncomeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountType.income
        description:
          type: string
          example: INCOME
    GetLockPeriodTypeEnum:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        description:
          type: string
          example: Days
    GetProductsAccountingMappingOptions:
      type: object
      properties:
        liabilityAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsLiabilityAccountOptions'
        assetAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsAssetAccountOptions'
        incomeAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsIncomeAccountOptions'
        equityAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsEquityAccountOptions'
    GetProductsAccountingMappings:
      type: object
      properties:
        shareReferenceId:
          $ref: '#/components/schemas/GetShareReferenceId'
        incomeFromFeeAccountId:
          $ref: '#/components/schemas/GetIncomeFromFeeAccountId'
        shareEquityId:
          $ref: '#/components/schemas/GetShareEquityId'
        shareSuspenseId:
          $ref: '#/components/schemas/GetShareSuspenseId'
    GetProductsAccountingRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountingRuleType.cash
        description:
          type: string
          example: CASH BASED
    GetProductsAssetAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        glCode:
          type: string
          example: ASSET_ED1461237837829
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetAssetType'
        usage:
          $ref: '#/components/schemas/GetProductsLiabilityUsage'
        description:
          type: string
          example: DEFAULT_DESCRIPTION
        nameDecorated:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        tagId:
          $ref: '#/components/schemas/GetProductsTagId'
    GetProductsCharges:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 20
        name:
          type: string
          example: Share Account Activation Flat
        active:
          type: boolean
          example: true
        penalty:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetChargesCurrency'
        amount:
          type: integer
          format: int32
          example: 1
        chargeTimeType:
          $ref: '#/components/schemas/GetChargeTimeType'
        chargeAppliesTo:
          $ref: '#/components/schemas/GetChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargeCalculationType'
        chargePaymentMode:
          $ref: '#/components/schemas/GetChargePaymentMode'
    GetProductsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 100
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetProductsEquityAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 66
        name:
          type: string
          example: Equity Account
        glCode:
          type: string
          example: EQUITY1
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetEquityType'
        usage:
          $ref: '#/components/schemas/GetProductsLiabilityUsage'
        nameDecorated:
          type: string
          example: Equity Account
        tagId:
          $ref: '#/components/schemas/GetProductsTagId'
    GetProductsIncomeAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        glCode:
          type: string
          example: INCOME_9O1461237838422
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetIncomeType'
        usage:
          $ref: '#/components/schemas/GetProductsLiabilityUsage'
        description:
          type: string
          example: DEFAULT_DESCRIPTION
        nameDecorated:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        tagId:
          $ref: '#/components/schemas/GetProductsTagId'
    GetProductsLiabilityAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        glCode:
          type: string
          example: LIABILITY_2T1461237838897
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetProductsLiabilityType'
        usage:
          $ref: '#/components/schemas/GetProductsLiabilityUsage'
        description:
          type: string
          example: DEFAULT_DESCRIPTION
        nameDecorated:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        tagId:
          $ref: '#/components/schemas/GetProductsTagId'
    GetProductsLiabilityType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.liability
        description:
          type: string
          example: LIABILITY
    GetProductsLiabilityUsage:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountUsage.detail
        description:
          type: string
          example: DETAIL
    GetProductsMarketPrice:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        fromDate:
          type: string
          example: "Feb 1, 2016"
        shareValue:
          type: integer
          format: int32
          example: 1
    GetProductsMinimumActivePeriodFrequencyTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: savings.lockin.sharePeriodFrequencyType.days
        description:
          type: string
          example: Days
    GetProductsTagId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        isActive:
          type: boolean
          example: false
    GetProductsTypeProductIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Share Product
        shortName:
          type: string
          example: SP
        description:
          type: string
          example: SP
        currency:
          $ref: '#/components/schemas/GetProductsCurrency'
        totalShares:
          type: integer
          format: int32
          example: 100
        totalSharesIssued:
          type: integer
          format: int32
          example: 50
        unitPrice:
          type: integer
          format: int32
          example: 1
        shareCapital:
          type: integer
          format: int32
          example: 50
        minimumShares:
          type: integer
          format: int32
          example: 1
        nominalShares:
          type: integer
          format: int32
          example: 10
        maximumShares:
          type: integer
          format: int32
          example: 50
        marketPrice:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsMarketPrice'
        charges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsCharges'
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: true
        lockinPeriod:
          type: integer
          format: int32
          example: 1
        lockPeriodTypeEnum:
          $ref: '#/components/schemas/GetLockPeriodTypeEnum'
        minimumActivePeriod:
          type: integer
          format: int32
          example: 1
        minimumActivePeriodForDividendsTypeEnum:
          $ref: '#/components/schemas/GetLockPeriodTypeEnum'
        accountingRule:
          $ref: '#/components/schemas/GetProductsAccountingRule'
        accountingMappings:
          $ref: '#/components/schemas/GetProductsAccountingMappings'
        currencyOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetChargesCurrency'
        chargeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsCharges'
        minimumActivePeriodFrequencyTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsMinimumActivePeriodFrequencyTypeOptions'
        lockinPeriodFrequencyTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsMinimumActivePeriodFrequencyTypeOptions'
        accountingMappingOptions:
          $ref: '#/components/schemas/GetProductsAccountingMappingOptions'
      description: GetProductsTypeProductIdResponse
    GetShareEquityId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 66
        name:
          type: string
          example: Equity Account
        glCode:
          type: string
          example: EQUITY1
    GetShareReferenceId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        glCode:
          type: string
          example: ASSET_ED1461237837829
    GetShareSuspenseId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        name:
          type: string
          example: ACCOUNT_NAME_1FJBQ
        glCode:
          type: string
          example: LIABILITY_MA1461237860198
    GetProductsPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Share Product
        shortName:
          type: string
          example: Share Product Description
        totalShares:
          type: integer
          format: int32
          example: 100
    GetProductsTypeResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 1
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetProductsPageItems'
      description: GetProductsTypeResponse
    PostProductsChargesSelected:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 20
    PostProductsMarketPricePeriods:
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        fromDate:
          type: string
          example: 04 May 2016
        shareValue:
          type: integer
          format: int32
          example: 2
    PostProductsTypeRequest:
      type: object
      properties:
        name:
          type: string
          example: Share Product
        shortName:
          type: string
          example: SP
        description:
          type: string
          example: Description
        currencyCode:
          type: string
          example: USD
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        locale:
          type: string
          example: en
        totalShares:
          type: integer
          format: int32
          example: 1000
        sharesIssued:
          type: integer
          format: int32
          example: 1000
        unitPrice:
          type: integer
          format: int32
          example: 1
        minimumShares:
          type: integer
          format: int32
          example: 10
        nominalShares:
          type: integer
          format: int32
          example: 20
        maximumShares:
          type: integer
          format: int32
          example: 30
        minimumActivePeriodForDividends:
          type: integer
          format: int32
          example: 1
        minimumactiveperiodFrequencyType:
          type: integer
          format: int32
          example: 0
        lockinPeriodFrequency:
          type: integer
          format: int32
          example: 1
        lockinPeriodFrequencyType:
          type: integer
          format: int32
          example: 1
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: true
        marketPricePeriods:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostProductsMarketPricePeriods'
        chargesSelected:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostProductsChargesSelected'
        accountingRule:
          type: integer
          format: int32
          example: 1
      description: PostProductsTypeRequest
    PostProductsTypeResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostProductsTypeResponse
    GetFixedDepositAccountsAccountChart:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        fromDate:
          type: string
          format: date
        accountId:
          type: integer
          format: int32
          example: 5
        accountNumber:
          type: integer
          format: int64
        chartSlabs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositAccountsChartSlabs'
        periodTypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositAccountsPeriodTypes'
    GetFixedDepositAccountsAccountChartCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetFixedDepositAccountsAccountIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetFixedDepositAccountsAccountIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
        externalId:
          type: string
          example: FD-23
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Sangamesh N
        savingsProductId:
          type: integer
          format: int32
          example: 3
        savingsProductName:
          type: string
          example: FD01
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        status:
          $ref: '#/components/schemas/GetFixedDepositAccountsStatus'
        timeline:
          $ref: '#/components/schemas/GetFixedDepositAccountsTimeline'
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountIdCurrency'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCalculationDaysInYearType'
        interestFreePeriodApplicable:
          type: boolean
          example: false
        preClosurePenalApplicable:
          type: boolean
          example: false
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        minDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositAccountsMinDepositTermType'
        maxDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositAccountsMaxDepositTermType'
        depositAmount:
          type: number
          format: float
          example: 5000
        maturityAmount:
          type: number
          format: float
          example: 5140.25
        maturityDate:
          type: string
          format: date
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequency:
          $ref: '#/components/schemas/GetFixedDepositAccountsDepositPeriodFrequency'
        summary:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountIdSummary'
        accountChart:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountChart'
      description: GetFixedDepositAccountsAccountIdResponse
    GetFixedDepositAccountsAccountIdSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountIdCurrency'
        accountBalance:
          type: number
          format: float
          example: 0
    GetFixedDepositAccountsChartSlabs:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        periodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsPeriodType'
        fromPeriod:
          type: integer
          format: int32
          example: 181
        toPeriod:
          type: integer
          format: int32
          example: 365
        annualInterestRate:
          type: number
          format: double
          example: 5.5
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsAccountChartCurrency'
    GetFixedDepositAccountsDepositPeriodFrequency:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: deposit.period.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
    GetFixedDepositAccountsInterestCalculationDaysInYearType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 365
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
    GetFixedDepositAccountsInterestCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
    GetFixedDepositAccountsInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetFixedDepositAccountsInterestPostingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetFixedDepositAccountsMaxDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
    GetFixedDepositAccountsMinDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
    GetFixedDepositAccountsPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
    GetFixedDepositAccountsPeriodTypes:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
    GetFixedDepositAccountsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        prematureClosed:
          type: boolean
          example: false
        transferInProgress:
          type: boolean
          example: false
        transferOnHold:
          type: boolean
          example: false
    GetFixedDepositAccountsTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
        submittedByUsername:
          type: string
          example: mifos
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
    PostFixedDepositAccountsRequest:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        productId:
          type: integer
          format: int32
          example: 1
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        submittedOnDate:
          type: string
          example: 01 March 2014
        depositAmount:
          type: number
          format: float
          example: 5000
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequencyId:
          type: integer
          format: int32
          example: 2
      description: PostFixedDepositAccountsRequest
    PostFixedDepositAccountsResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostFixedDepositAccountsResponse
    PostFixedDepositAccountsAccountIdRequest:
      type: object
      description: PostFixedDepositAccountsAccountIdRequest
    PostFixedDepositAccountsAccountIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostFixedDepositAccountsAccountIdResponse
    GetFixedDepositAccountsProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Passbook Savings
    GetFixedDepositAccountsTemplateResponse:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        productOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositAccountsProductOptions'
      description: GetFixedDepositAccountsTemplateResponse
    GetFixedDepositAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetFixedDepositAccountsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Sangamesh N
        savingsProductId:
          type: integer
          format: int32
          example: 3
        savingsProductName:
          type: string
          example: FD01
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        status:
          $ref: '#/components/schemas/GetFixedDepositAccountsStatus'
        timeline:
          $ref: '#/components/schemas/GetFixedDepositAccountsTimeline'
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsCurrency'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetFixedDepositAccountsInterestCalculationDaysInYearType'
        summary:
          $ref: '#/components/schemas/GetFixedDepositAccountsSummary'
        interestFreePeriodApplicable:
          type: boolean
          example: false
        preClosurePenalApplicable:
          type: boolean
          example: false
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        minDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositAccountsMinDepositTermType'
        maxDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositAccountsMaxDepositTermType'
        depositAmount:
          type: number
          format: float
          example: 5000
        maturityAmount:
          type: number
          format: float
          example: 5140.25
        maturityDate:
          type: string
          format: date
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequency:
          $ref: '#/components/schemas/GetFixedDepositAccountsDepositPeriodFrequency'
      description: GetFixedDepositAccountsResponse
    GetFixedDepositAccountsSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetFixedDepositAccountsCurrency'
        accountBalance:
          type: number
          format: float
          example: 0
    PutFixedDepositAccountsAccountIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        depositAmount:
          type: number
          format: float
          example: 6000
      description: PutFixedDepositAccountsAccountIdRequest
    PutFixedDepositAccountsAccountIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutFixedDepositAccountsChanges'
      description: PutFixedDepositAccountsAccountIdResponse
    PutFixedDepositAccountsChanges:
      type: object
      properties:
        depositAmount:
          type: number
          format: float
          example: 6000
        locale:
          type: string
          example: en
    DeleteFixedDepositAccountsAccountIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteFixedDepositAccountsAccountIdResponse
    GetFixedDepositProductsInterestCalculationDaysInYearType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 365
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
    GetFixedDepositProductsInterestCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
    GetFixedDepositProductsInterestPostingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetFixedDepositProductsProductIdAccountingMappings:
      type: object
      properties:
        savingsReferenceAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdSavingsReferenceAccount'
        incomeFromFeeAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdIncomeFromFeeAccount'
        incomeFromPenaltyAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdIncomeFromPenaltyAccount'
        interestOnSavingsAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdInterestOnSavingsAccount'
        savingsControlAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdSavingsControlAccount'
        transfersInSuspenseAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdTransfersInSuspenseAccount'
    GetFixedDepositProductsProductIdActiveChart:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        fromDate:
          type: string
          format: date
        savingsProductId:
          type: integer
          format: int32
          example: 8
        savingsProductName:
          type: string
          example: Fixed deposit product
        chartSlabs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositProductsProductIdChartSlabs'
        periodTypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositProductsProductIdPeriodType'
    GetFixedDepositProductsProductIdChartSlabs:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 18
        description:
          type: string
          example: from 0 to 90 days
        periodType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdPeriodType'
        fromPeriod:
          type: integer
          format: int32
          example: 0
        toPeriod:
          type: integer
          format: int32
          example: 90
        annualInterestRate:
          type: number
          format: double
          example: 4.5
        currency:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdCurrency'
    GetFixedDepositProductsProductIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetFixedDepositProductsProductIdFeeToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount'
    GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsCharge:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: sav charge
        active:
          type: boolean
          example: false
        penalty:
          type: boolean
          example: false
    GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 16
        name:
          type: string
          example: income from savings fee
        glCode:
          type: integer
          format: int32
          example: 24
    GetFixedDepositProductsProductIdIncomeFromFeeAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 16
        name:
          type: string
          example: income from savings fee
        glCode:
          type: integer
          format: int32
          example: 24
    GetFixedDepositProductsProductIdIncomeFromPenaltyAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 17
        name:
          type: string
          example: income from sav penalties
        glCode:
          type: integer
          format: int32
          example: 25
    GetFixedDepositProductsProductIdInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        description:
          type: string
          example: Daily
    GetFixedDepositProductsProductIdInterestOnSavingsAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 15
        name:
          type: string
          example: interest on savings
        glCode:
          type: integer
          format: int32
          example: 23
    GetFixedDepositProductsProductIdMaxDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
    GetFixedDepositProductsProductIdMinDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.weeks
        description:
          type: string
          example: Weeks
    GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdIncomeFromPenaltyAccount'
    GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: sav 2
        active:
          type: boolean
          example: false
        penalty:
          type: boolean
          example: true
    GetFixedDepositProductsProductIdPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: interestChartPeriodType.weeks
        description:
          type: string
          example: Weeks
    GetFixedDepositProductsProductIdPreClosurePenalInterestOnType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: preClosurePenalInterestOnType.wholeTerm
        description:
          type: string
          example: Whole term
    GetFixedDepositProductsProductIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Fixed deposit product
        shortName:
          type: string
          example: FD01
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        currency:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdCurrency'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCalculationDaysInYearType'
        accountingMappings:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdAccountingMappings'
        feeToIncomeAccountMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositProductsProductIdFeeToIncomeAccountMappings'
        penaltyToIncomeAccountMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappings'
        preClosurePenalApplicable:
          type: boolean
          example: true
        preClosurePenalInterest:
          type: number
          format: double
          example: 1.75
        preClosurePenalInterestOnType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdPreClosurePenalInterestOnType'
        minDepositTerm:
          type: integer
          format: int32
          example: 1
        minDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdMinDepositTermType'
        maxDepositTerm:
          type: integer
          format: int32
          example: 5
        maxDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdMaxDepositTermType'
        activeChart:
          $ref: '#/components/schemas/GetFixedDepositProductsProductIdActiveChart'
      description: GetFixedDepositProductsProductIdResponse
    GetFixedDepositProductsProductIdSavingsControlAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        name:
          type: string
          example: savings ref tool kit
        glCode:
          type: integer
          format: int32
          example: 21
    GetFixedDepositProductsProductIdSavingsReferenceAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: savings ref
        glCode:
          type: integer
          format: int32
          example: 20
    GetFixedDepositProductsProductIdTransfersInSuspenseAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 14
        name:
          type: string
          example: saving transfers
        glCode:
          type: integer
          format: int32
          example: 22
    GetFixedDepositProductsAccountingRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountingRuleType.none
        description:
          type: string
          example: NONE
    GetFixedDepositProductsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetFixedDepositProductsInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetFixedDepositProductsMaxDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
    GetFixedDepositProductsMinDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
    GetFixedDepositProductsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: FD01
        shortName:
          type: string
          example: FD01
        description:
          type: string
          example: FD01
        currency:
          $ref: '#/components/schemas/GetFixedDepositProductsCurrency'
        preClosurePenalApplicable:
          type: boolean
          example: false
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        minDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositProductsMinDepositTermType'
        maxDepositTermType:
          $ref: '#/components/schemas/GetFixedDepositProductsMaxDepositTermType'
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 0
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetFixedDepositProductsInterestCalculationDaysInYearType'
        accountingRule:
          $ref: '#/components/schemas/GetFixedDepositProductsAccountingRule'
      description: GetFixedDepositProductsResponse
    PutFixedDepositProductsProductIdRequest:
      type: object
      properties:
        description:
          type: string
          example: Fixed deposit product new offerings
        locale:
          type: string
          example: en
        minDepositTerm:
          type: integer
          format: int32
          example: 5
        minDepositTermTypeId:
          type: integer
          format: int32
          example: 1
      description: PutFixedDepositProductsProductIdRequest
    PutFixedDepositProductsChanges:
      type: object
      properties:
        description:
          type: string
          example: Fixed deposit product new offerings
        minDepositTerm:
          type: integer
          format: int32
          example: 5
    PutFixedDepositProductsProductIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutFixedDepositProductsChanges'
      description: PutFixedDepositProductsProductIdResponse
    DeleteFixedDepositProductsProductIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteFixedDepositProductsProductIdResponse
    PostFixedDepositProductsChartSlabs:
      type: object
      properties:
        description:
          type: string
          example: from 0 to 90 days
        periodType:
          type: integer
          format: int32
          example: 1
        fromPeriod:
          type: integer
          format: int32
          example: 0
        toPeriod:
          type: integer
          format: int32
          example: 90
        annualInterestRate:
          type: number
          format: double
          example: 4.5
    PostFixedDepositProductsCharts:
      type: object
      properties:
        fromDate:
          type: string
          example: 01 Jan 2014
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        chartSlabs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostFixedDepositProductsChartSlabs'
    PostFixedDepositProductsRequest:
      type: object
      properties:
        name:
          type: string
          example: Fixed deposit product
        shortName:
          type: string
          example: FD01
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        currencyCode:
          type: string
          example: USD
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        locale:
          type: string
          example: en
        interestCompoundingPeriodType:
          type: integer
          format: int32
          example: 1
        interestPostingPeriodType:
          type: integer
          format: int32
          example: 4
        interestCalculationType:
          type: integer
          format: int32
          example: 1
        interestCalculationDaysInYearType:
          type: integer
          format: int32
          example: 365
        accountingRule:
          type: integer
          format: int32
          example: 1
        preClosurePenalApplicable:
          type: boolean
          example: true
        preClosurePenalInterest:
          type: number
          format: double
          example: 1.75
        preClosurePenalInterestOnTypeId:
          type: integer
          format: int32
          example: 1
        minDepositTerm:
          type: integer
          format: int32
          example: 1
        minDepositTermTypeId:
          type: integer
          format: int32
          example: 1
        maxDepositTerm:
          type: integer
          format: int32
          example: 5
        maxDepositTermTypeId:
          type: integer
          format: int32
          example: 3
        charts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostFixedDepositProductsCharts'
      description: PostFixedDepositProductsRequest
    PostFixedDepositProductsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostFixedDepositProductsResponse
    GetRecurringCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 4
        inMultiplesOf:
          type: integer
          format: int32
          example: 100
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        transactionType:
          $ref: '#/components/schemas/GetRecurringTransactionType'
        accountId:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: string
          example: "000000001"
        date:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/GetRecurringCurrency'
        amount:
          type: number
          example: 100000.0
        reversed:
          type: boolean
          example: false
        paymentTypeOptions:
          type: array
          example: []
          items:
            type: integer
            format: int32
      description: GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse
    GetRecurringTransactionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsAccountTransactionType.deposit
        description:
          type: string
          example: Deposit
        deposit:
          type: boolean
          example: true
        withdrawal:
          type: boolean
          example: false
        interestPosting:
          type: boolean
          example: false
        feeDeduction:
          type: boolean
          example: false
        initiateTransfer:
          type: boolean
          example: false
        approveTransfer:
          type: boolean
          example: false
        withdrawTransfer:
          type: boolean
          example: false
        rejectTransfer:
          type: boolean
          example: false
        overdraftInterest:
          type: boolean
          example: false
        writtenoff:
          type: boolean
          example: false
        overdraftFee:
          type: boolean
          example: true
    GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        transactionType:
          $ref: '#/components/schemas/GetRecurringTransactionsTransactionType'
        accountId:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: string
          example: "000000001"
        date:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/GetRecurringTransactionsCurrency'
        paymentDetailData:
          $ref: '#/components/schemas/GetRecurringPaymentDetailData'
        amount:
          type: number
          format: float
          example: 5000
        runningBalance:
          type: integer
          format: int32
          example: 0
        reversed:
          type: boolean
          example: true
      description: GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse
    GetRecurringPaymentDetailData:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 62
        paymentType:
          $ref: '#/components/schemas/GetRecurringPaymentType'
        accountNumber:
          type: integer
          format: int32
        checkNumber:
          type: integer
          format: int32
        routingCode:
          type: integer
          format: int32
        receiptNumber:
          type: integer
          format: int32
        bankNumber:
          type: integer
          format: int32
    GetRecurringPaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: cash
    GetRecurringTransactionsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetRecurringTransactionsTransactionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: savingsAccountTransactionType.withdrawal
        description:
          type: string
          example: Withdrawal
        deposit:
          type: boolean
          example: false
        withdrawal:
          type: boolean
          example: true
        interestPosting:
          type: boolean
          example: false
        feeDeduction:
          type: boolean
          example: false
    PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        transactionDate:
          type: string
          example: 27 May 2013
        transactionAmount:
          type: number
          format: double
          example: 500
        paymentTypeId:
          type: integer
          format: int32
          example: 14
        accountNumber:
          type: string
          example: acc123
        checkNumber:
          type: string
          example: che123
        routingCode:
          type: string
          example: rou123
        receiptNumber:
          type: string
          example: rec123
        bankNumber:
          type: string
          example: ban123
      description: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest
    PostRecurringChanges:
      type: object
      properties:
        accountNumber:
          type: string
          example: acc123
        checkNumber:
          type: string
          example: che123
        routingCode:
          type: string
          example: rou123
        receiptNumber:
          type: string
          example: rec123
        bankNumber:
          type: string
          example: ban123
    PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 2
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 48
        changes:
          $ref: '#/components/schemas/PostRecurringChanges'
      description: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse
    PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 2
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 47
        changes:
          $ref: '#/components/schemas/PostRecurringChanges'
      description: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse
    GetRecurringDepositAccountsAccountChart:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        fromDate:
          type: string
          format: date
        accountId:
          type: integer
          format: int32
          example: 5
        accountNumber:
          type: integer
          format: int64
        chartSlabs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositAccountsChartSlabs'
        periodTypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositAccountsPeriodTypes'
    GetRecurringDepositAccountsAccountChartCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetRecurringDepositAccountsAccountIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
        externalId:
          type: string
          example: RD-23
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Sangamesh N
        savingsProductId:
          type: integer
          format: int32
          example: 3
        savingsProductName:
          type: string
          example: RD01
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        status:
          $ref: '#/components/schemas/GetRecurringDepositAccountsStatus'
        timeline:
          $ref: '#/components/schemas/GetRecurringDepositAccountsTimeline'
        currency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsCurrency'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCalculationDaysInYearType'
        preClosurePenalApplicable:
          type: boolean
          example: false
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        minDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsMinDepositTermType'
        maxDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsMaxDepositTermType'
        recurringDepositAmount:
          type: integer
          format: int32
          example: 100
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        expectedFirstDepositOnDate:
          type: string
          format: date
        recurringDepositFrequencyType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsRecurringDepositFrequencyType'
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsDepositPeriodFrequency'
        summary:
          $ref: '#/components/schemas/GetRecurringDepositAccountsSummary'
        accountChart:
          $ref: '#/components/schemas/GetRecurringDepositAccountsAccountChart'
      description: GetRecurringDepositAccountsAccountIdResponse
    GetRecurringDepositAccountsChartSlabs:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        periodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsPeriodType'
        fromPeriod:
          type: integer
          format: int32
          example: 181
        toPeriod:
          type: integer
          format: int32
          example: 365
        annualInterestRate:
          type: number
          format: double
          example: 5.5
        currency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsAccountChartCurrency'
    GetRecurringDepositAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetRecurringDepositAccountsDepositPeriodFrequency:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: deposit.period.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
    GetRecurringDepositAccountsInterestCalculationDaysInYearType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 365
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
    GetRecurringDepositAccountsInterestCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
    GetRecurringDepositAccountsInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetRecurringDepositAccountsInterestPostingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetRecurringDepositAccountsMaxDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
    GetRecurringDepositAccountsMinDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
    GetRecurringDepositAccountsPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
    GetRecurringDepositAccountsPeriodTypes:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: interestChartPeriodType.days
        description:
          type: string
          example: Days
    GetRecurringDepositAccountsRecurringDepositFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: recurring.deposit.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
    GetRecurringDepositAccountsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        prematureClosed:
          type: boolean
          example: false
        transferInProgress:
          type: boolean
          example: false
        transferOnHold:
          type: boolean
          example: false
    GetRecurringDepositAccountsSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsCurrency'
        accountBalance:
          type: number
          format: float
          example: 0
    GetRecurringDepositAccountsTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
        submittedByUsername:
          type: string
          example: mifos
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
    PostRecurringDepositAccountsRequest:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        productId:
          type: integer
          format: int32
          example: 1
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        submittedOnDate:
          type: string
          example: 02 June 2014
        depositPeriod:
          type: integer
          format: int32
          example: 20
        depositPeriodFrequencyId:
          type: integer
          format: int32
          example: 1
        depositAmount:
          type: number
          format: float
          example: 10000
        isCalendarInherited:
          type: boolean
          example: false
        recurringFrequency:
          type: integer
          format: int32
          example: 2
        recurringFrequencyType:
          type: integer
          format: int32
          example: 1
        mandatoryRecommendedDepositAmount:
          type: integer
          format: int64
          example: 2000
      description: PostRecurringDepositAccountsRequest
    PostRecurringDepositAccountsResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostRecurringDepositAccountsResponse
    PostRecurringDepositAccountsAccountIdRequest:
      type: object
      description: PostRecurringDepositAccountsAccountIdRequest
    PostRecurringDepositAccountsAccountIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostRecurringDepositAccountsAccountIdResponse
    GetRecurringDepositAccountsTemplateResponse:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        productOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringProductOptions'
      description: GetRecurringDepositAccountsTemplateResponse
    GetRecurringProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Passbook Savings
    GetRecurringDepositAccountsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Sangamesh N
        savingsProductId:
          type: integer
          format: int32
          example: 3
        savingsProductName:
          type: string
          example: RD01
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        status:
          $ref: '#/components/schemas/GetRecurringDepositAccountsStatus'
        timeline:
          $ref: '#/components/schemas/GetRecurringDepositAccountsTimeline'
        currency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsCurrency'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsInterestCalculationDaysInYearType'
        summary:
          $ref: '#/components/schemas/GetRecurringDepositAccountsSummary'
        depositAmount:
          type: number
          format: float
          example: 1150
        maturityAmount:
          type: number
          format: float
          example: 252.59
        maturityDate:
          type: string
          format: date
        recurringDepositAmount:
          type: integer
          format: int32
          example: 100
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsRecurringDepositFrequencyType'
        preClosurePenalApplicable:
          type: boolean
          example: false
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        minDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsMinDepositTermType'
        maxDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositAccountsMaxDepositTermType'
        depositPeriod:
          type: integer
          format: int32
          example: 6
        depositPeriodFrequency:
          $ref: '#/components/schemas/GetRecurringDepositAccountsDepositPeriodFrequency'
      description: GetRecurringDepositAccountsResponse
    PutRecurringDepositAccountsAccountIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        depositAmount:
          type: integer
          format: int32
          example: 6000
      description: PutRecurringDepositAccountsAccountIdRequest
    PutRecurringDepositAccountsAccountIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutRecurringDepositAccountsChanges'
      description: PutRecurringDepositAccountsAccountIdResponse
    PutRecurringDepositAccountsChanges:
      type: object
      properties:
        depositAmount:
          type: integer
          format: int32
          example: 6000
        locale:
          type: string
          example: en
    DeleteRecurringDepositAccountsResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteRecurringDepositAccountsResponse
    GetRecurringDepositProductsInterestCalculationDaysInYearType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 365
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
    GetRecurringDepositProductsInterestCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
    GetRecurringDepositProductsInterestPostingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetRecurringDepositProductsProductIdAccountingMappings:
      type: object
      properties:
        savingsReferenceAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdSavingsReferenceAccount'
        incomeFromFeeAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdIncomeFromFeeAccount'
        incomeFromPenaltyAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdIncomeFromPenaltyAccount'
        interestOnSavingsAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdInterestOnSavingsAccount'
        savingsControlAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdSavingsControlAccount'
        transfersInSuspenseAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdTransfersInSuspenseAccount'
    GetRecurringDepositProductsProductIdActiveChart:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        fromDate:
          type: string
          format: date
        savingsProductId:
          type: integer
          format: int32
          example: 8
        savingsProductName:
          type: string
          example: Recurring deposit product
        chartSlabs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositProductsProductIdChartSlabs'
        periodTypes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPeriodType'
    GetRecurringDepositProductsProductIdChartSlabs:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 18
        description:
          type: string
          example: from 0 to 90 days
        periodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPeriodType'
        fromPeriod:
          type: integer
          format: int32
          example: 0
        toPeriod:
          type: integer
          format: int32
          example: 90
        annualInterestRate:
          type: number
          format: double
          example: 4.5
        currency:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdCurrency'
    GetRecurringDepositProductsProductIdCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount'
    GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsCharge:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: sav charge
        active:
          type: boolean
          example: false
        penalty:
          type: boolean
          example: false
    GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 16
        name:
          type: string
          example: income from savings fee
        glCode:
          type: integer
          format: int32
          example: 24
    GetRecurringDepositProductsProductIdIncomeFromFeeAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 16
        name:
          type: string
          example: income from savings fee
        glCode:
          type: integer
          format: int32
          example: 24
    GetRecurringDepositProductsProductIdIncomeFromPenaltyAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 17
        name:
          type: string
          example: income from sav penalties
        glCode:
          type: integer
          format: int32
          example: 25
    GetRecurringDepositProductsProductIdInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        description:
          type: string
          example: Daily
    GetRecurringDepositProductsProductIdInterestOnSavingsAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 15
        name:
          type: string
          example: interest on savings
        glCode:
          type: integer
          format: int32
          example: 23
    GetRecurringDepositProductsProductIdMaxDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
    GetRecurringDepositProductsProductIdMinDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.weeks
        description:
          type: string
          example: Weeks
    GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdIncomeFromPenaltyAccount'
    GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: sav 2
        active:
          type: boolean
          example: false
        penalty:
          type: boolean
          example: true
    GetRecurringDepositProductsProductIdPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: interestChartPeriodType.weeks
        description:
          type: string
          example: Weeks
    GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: preClosurePenalInterestOnType.wholeTerm
        description:
          type: string
          example: Whole term
    GetRecurringDepositProductsProductIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Recurring deposit product
        shortName:
          type: string
          example: RD01
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        currency:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdCurrency'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCalculationDaysInYearType'
        accountingMappings:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdAccountingMappings'
        feeToIncomeAccountMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings'
        penaltyToIncomeAccountMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings'
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyType:
          $ref: '#/components/schemas/GetRecurringDepositProductsRecurringDepositFrequencyType'
        preClosurePenalApplicable:
          type: boolean
          example: true
        preClosurePenalInterest:
          type: number
          format: double
          example: 1.75
        preClosurePenalInterestOnType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType'
        minDepositTerm:
          type: integer
          format: int32
          example: 1
        minDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdMinDepositTermType'
        maxDepositTerm:
          type: integer
          format: int32
          example: 5
        maxDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdMaxDepositTermType'
        activeChart:
          $ref: '#/components/schemas/GetRecurringDepositProductsProductIdActiveChart'
      description: GetRecurringDepositProductsProductIdResponse
    GetRecurringDepositProductsProductIdSavingsControlAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        name:
          type: string
          example: savings ref tool kit
        glCode:
          type: integer
          format: int32
          example: 21
    GetRecurringDepositProductsProductIdSavingsReferenceAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: savings ref
        glCode:
          type: integer
          format: int32
          example: 20
    GetRecurringDepositProductsProductIdTransfersInSuspenseAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 14
        name:
          type: string
          example: saving transfers
        glCode:
          type: integer
          format: int32
          example: 22
    GetRecurringDepositProductsRecurringDepositFrequencyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: recurring.deposit.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
    GetRecurringDepositProductsAccountingRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountingRuleType.none
        description:
          type: string
          example: NONE
    GetRecurringDepositProductsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 1
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetRecurringDepositProductsInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetRecurringDepositProductsMaxDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.years
        description:
          type: string
          example: Years
    GetRecurringDepositProductsMinDepositTermType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: deposit.term.savingsPeriodFrequencyType.months
        description:
          type: string
          example: Months
    GetRecurringDepositProductsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: RD01
        shortName:
          type: string
          example: RD01
        description:
          type: string
          example: RD01
        currency:
          $ref: '#/components/schemas/GetRecurringDepositProductsCurrency'
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyType:
          $ref: '#/components/schemas/GetRecurringDepositProductsRecurringDepositFrequencyType'
        preClosurePenalApplicable:
          type: boolean
          example: false
        minDepositTerm:
          type: integer
          format: int32
          example: 3
        maxDepositTerm:
          type: integer
          format: int32
          example: 4
        minDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositProductsMinDepositTermType'
        maxDepositTermType:
          $ref: '#/components/schemas/GetRecurringDepositProductsMaxDepositTermType'
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 0
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetRecurringDepositProductsInterestCalculationDaysInYearType'
        accountingRule:
          $ref: '#/components/schemas/GetRecurringDepositProductsAccountingRule'
      description: GetRecurringDepositProductsResponse
    PutRecurringDepositProductsRequest:
      type: object
      properties:
        description:
          type: string
          example: Recurring deposit product new offerings
        locale:
          type: string
          example: en
        minDepositTerm:
          type: integer
          format: int32
          example: 5
        minDepositTermTypeId:
          type: integer
          format: int32
          example: 1
      description: PutRecurringDepositProductsRequest
    PutRecurringDepositProductsChanges:
      type: object
      properties:
        description:
          type: string
          example: Recurring deposit product new offerings
        minDepositTerm:
          type: integer
          format: int32
          example: 5
    PutRecurringDepositProductsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutRecurringDepositProductsChanges'
      description: PutRecurringDepositProductsResponse
    DeleteRecurringDepositProductsProductIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteRecurringDepositProductsProductIdResponse
    PostRecurringDepositProductsChartSlabs:
      type: object
      properties:
        description:
          type: string
          example: from 0 to 90 days
        periodType:
          type: integer
          format: int32
          example: 1
        fromPeriod:
          type: integer
          format: int32
          example: 0
        toPeriod:
          type: integer
          format: int32
          example: 90
        annualInterestRate:
          type: number
          format: double
          example: 4.5
    PostRecurringDepositProductsCharts:
      type: object
      properties:
        fromDate:
          type: string
          example: 01 Jan 2014
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        chartSlabs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostRecurringDepositProductsChartSlabs'
    PostRecurringDepositProductsRequest:
      type: object
      properties:
        name:
          type: string
          example: Recurring deposit product
        shortName:
          type: string
          example: RD01
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        currencyCode:
          type: string
          example: USD
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        locale:
          type: string
          example: en
        interestCompoundingPeriodType:
          type: integer
          format: int32
          example: 1
        interestPostingPeriodType:
          type: integer
          format: int32
          example: 4
        interestCalculationType:
          type: integer
          format: int32
          example: 1
        interestCalculationDaysInYearType:
          type: integer
          format: int32
          example: 365
        accountingRule:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequency:
          type: integer
          format: int32
          example: 1
        recurringDepositFrequencyTypeId:
          type: integer
          format: int32
          example: 2
        preClosurePenalApplicable:
          type: boolean
          example: true
        preClosurePenalInterest:
          type: number
          format: double
          example: 1.75
        preClosurePenalInterestOnTypeId:
          type: integer
          format: int32
          example: 1
        minDepositTerm:
          type: integer
          format: int32
          example: 1
        minDepositTermTypeId:
          type: integer
          format: int32
          example: 1
        maxDepositTerm:
          type: integer
          format: int32
          example: 5
        maxDepositTermTypeId:
          type: integer
          format: int32
          example: 3
        depositAmount:
          type: integer
          format: int64
          example: 10000
        minDepositAmount:
          type: integer
          format: int64
          example: 100
        maxDepositAmount:
          type: integer
          format: int64
          example: 1000000
        charts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostRecurringDepositProductsCharts'
      description: PostRecurringDepositProductsRequest
    PostRecurringDepositProductsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostRecurringDepositProductsResponse
    GetChargesAppliesTo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeAppliesTo.savings
        description:
          type: string
          example: Savings
    GetChargesChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetSavingsAccountsSavingsAccountIdChargesTemplateResponse:
      type: object
      properties:
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        chargeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsChargesOptions'
        penalty:
          type: boolean
          example: false
      description: GetSavingsAccountsSavingsAccountIdChargesTemplateResponse
    GetSavingsChargesChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
    GetSavingsChargesOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Passbook Fee
        active:
          type: boolean
          example: true
        penalty:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetChargesCurrencyResponse'
        amount:
          type: number
          format: float
          example: 100
        chargeTimeType:
          $ref: '#/components/schemas/GetSavingsChargesChargeTimeType'
        chargesAppliesTo:
          $ref: '#/components/schemas/GetChargesAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargesChargeCalculationType'
    PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        amount:
          type: number
          format: float
          example: 60
        dueDate:
          type: string
          example: 12 September 2013
      description: PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest
    PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 2
      description: PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
    DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 2
      description: DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
    GetChargesChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
    GetSavingsAccountsSavingsAccountIdChargesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 3
        accountId:
          type: integer
          format: int32
          example: 57
        name:
          type: string
          example: Savings account maintenance fee
        chargeTimeType:
          $ref: '#/components/schemas/GetChargesChargeTimeType'
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargesChargeCalculationType'
        percentage:
          type: number
          format: double
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        currency:
          $ref: '#/components/schemas/GetChargesCurrencyResponse'
        amount:
          type: number
          format: float
          example: 100
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        amountOutstanding:
          type: number
          format: float
          example: 100
        amountOrPercentage:
          type: number
          format: float
          example: 100
        penalty:
          type: boolean
          example: false
      description: GetSavingsAccountsSavingsAccountIdChargesResponse
    GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Passbook fee
        chargeTimeType:
          $ref: '#/components/schemas/GetChargesChargeTimeType'
        chargeCalculationType:
          $ref: '#/components/schemas/GetChargesChargeCalculationType'
        percentage:
          type: number
          format: double
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        currency:
          $ref: '#/components/schemas/GetChargesCurrencyResponse'
        amount:
          type: number
          format: float
          example: 100
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        amountOutstanding:
          type: number
          format: float
          example: 100
        amountOrPercentage:
          type: number
          format: float
          example: 100
        penalty:
          type: boolean
          example: false
      description: GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
    PostSavingsAccountsSavingsAccountIdChargesRequest:
      type: object
      properties:
        chargeId:
          type: integer
          format: int32
          example: 2
        locale:
          type: string
          example: en
        amount:
          type: number
          format: float
          example: 100
        dateFormat:
          type: string
          example: dd MMMM yyyy
        dueDate:
          type: string
          example: 29 April 2013
      description: PostSavingsAccountsSavingsAccountIdChargesRequest
    PostSavingsAccountsSavingsAccountIdChargesResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 6
      description: PostSavingsAccountsSavingsAccountIdChargesResponse
    PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        amount:
          type: number
          format: float
          example: 60
        dueDate:
          type: string
          example: 27 March 2013
      description: PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest
    PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 6
        changes:
          $ref: '#/components/schemas/PutSavingsChanges'
      description: PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
    PutSavingsChanges:
      type: object
      properties:
        description:
          type: string
          example: Passbook Savings Lite.
        interestRate:
          type: number
          format: double
          example: 5.73
        locale:
          type: string
          example: en
    GetSavingsAccountsAccountIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: string
          example: "000000001"
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        savingsProductId:
          type: integer
          format: int32
          example: 1
        savingsProductName:
          type: string
          example: Passbook Savings
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        status:
          $ref: '#/components/schemas/GetSavingsStatus'
        timeline:
          $ref: '#/components/schemas/GetSavingsTimeline'
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsInterestCalculationDaysInYearType'
        summary:
          $ref: '#/components/schemas/GetSavingsAccountsSummary'
      description: GetSavingsAccountsAccountIdResponse
    GetSavingsAccountsSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        accountBalance:
          type: integer
          format: int32
          example: 0
        availableBalance:
          type: integer
          format: int32
          example: 0
    GetSavingsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetSavingsInterestCalculationDaysInYearType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 365
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
    GetSavingsInterestCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
    GetSavingsInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        description:
          type: string
          example: Daily
    GetSavingsInterestPostingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetSavingsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
    GetSavingsTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
    PostSavingsAccountsRequest:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        productId:
          type: integer
          format: int32
          example: 1
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        submittedOnDate:
          type: string
          example: 01 March 2011
      description: PostSavingsAccountsRequest
    PostSavingsAccountsResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostSavingsAccountsResponse
    PostSavingsAccountsAccountIdRequest:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        unassignedDate:
          type: string
          example: 05 September 2014
      description: PostSavingsAccountsAccountIdRequest
    PostSavingsAccountsAccountIdChanges:
      type: object
    PostSavingsAccountsAccountIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 8
        resourceId:
          type: integer
          format: int32
          example: 8
        changes:
          $ref: '#/components/schemas/PostSavingsAccountsAccountIdChanges'
      description: PostSavingsAccountsAccountIdResponse
    GetSavingsAccountsTemplateResponse:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        productOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductOptions'
      description: GetSavingsAccountsTemplateResponse
    GetSavingsProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Passbook Savings
    GetSavingsAccountsResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 1
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsPageItems'
      description: GetSavingsAccountsResponse
    GetSavingsPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: string
          example: "000000001"
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        savingsProductId:
          type: integer
          format: int32
          example: 1
        savingsProductName:
          type: string
          example: Passbook Savings
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        status:
          $ref: '#/components/schemas/GetSavingsStatus'
        timeline:
          $ref: '#/components/schemas/GetSavingsTimeline'
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsInterestCalculationDaysInYearType'
        summary:
          $ref: '#/components/schemas/GetSavingsSummary'
    GetSavingsSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        accountBalance:
          type: integer
          format: int32
          example: 0
    PutSavingsAccountsAccountIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5.9999999999
      description: PutSavingsAccountsAccountIdRequest
    PutSavingsAccountsAccountIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutSavingsAccountsChanges'
      description: PutSavingsAccountsAccountIdResponse
    PutSavingsAccountsChanges:
      type: object
      properties:
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5.9999999999
        locale:
          type: string
          example: en
    DeleteSavingsAccountsAccountIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteSavingsAccountsAccountIdResponse
    GetSavingsAssetLiabilityType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountType.asset
        description:
          type: string
          example: ASSET
    GetSavingsAssetTagId:
      type: object
    GetSavingsChargeCalculationType:
      type: object
      properties:
        code:
          type: string
          example: chargeCalculationType.flat
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: Flat
    GetSavingsChargePaymentMode:
      type: object
      properties:
        code:
          type: string
          example: chargepaymentmode.regular
        id:
          type: integer
          format: int32
          example: 0
        description:
          type: string
          example: chargepaymentmode.regular
    GetSavingsChargeTimeType:
      type: object
      properties:
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: Specified due date
    GetSavingsProductsAccountingMappingOptions:
      type: object
      properties:
        liabilityAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsLiabilityAccountOptions'
        assetAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsAssetAccountOptions'
        expenseAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsExpenseAccountOptions'
        incomeAccountOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsIncomeAccountOptions'
    GetSavingsProductsAssetAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Cash
        glCode:
          type: integer
          format: int32
          example: 100001
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetSavingsAssetLiabilityType'
        usage:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityUsage'
        tagId:
          $ref: '#/components/schemas/GetSavingsAssetTagId'
    GetSavingsProductsChargeAppliesTo:
      type: object
      properties:
        code:
          type: string
          example: chargeAppliesTo.savings
        id:
          type: integer
          format: int32
          example: 2
        description:
          type: string
          example: Savings
    GetSavingsProductsChargeOptions:
      type: object
      properties:
        active:
          type: boolean
          example: true
        amount:
          type: integer
          format: int64
          example: 200
        chargeAppliesTo:
          $ref: '#/components/schemas/GetSavingsProductsChargeAppliesTo'
        chargeCalculationType:
          $ref: '#/components/schemas/GetSavingsChargeCalculationType'
        chargePaymentMode:
          $ref: '#/components/schemas/GetSavingsChargePaymentMode'
        chargeTimeType:
          $ref: '#/components/schemas/GetSavingsChargeTimeType'
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: Savings charge 1
        penalty:
          type: boolean
          example: false
    GetSavingsProductsExpenseAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 6
        name:
          type: string
          example: Write Off Expenses
        glCode:
          type: integer
          format: int32
          example: 60001
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetSavingsProductsExpenseType'
        usage:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityUsage'
        tagId:
          $ref: '#/components/schemas/GetSavingsAssetTagId'
    GetSavingsProductsExpenseType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 5
        code:
          type: string
          example: accountType.expense
        description:
          type: string
          example: EXPENSE
    GetSavingsProductsIncomeAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: income from interest
        glCode:
          type: integer
          format: int32
          example: 40001
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetSavingsProductsIncomeType'
        usage:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityUsage'
        tagId:
          $ref: '#/components/schemas/GetSavingsAssetTagId'
    GetSavingsProductsIncomeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: accountType.income
        description:
          type: string
          example: INCOME
    GetSavingsProductsInterestCalculationDaysInYearType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 365
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
    GetSavingsProductsInterestCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
    GetSavingsProductsInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        description:
          type: string
          example: Daily
    GetSavingsProductsInterestPostingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetSavingsProductsLiabilityAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 15
        name:
          type: string
          example: Savings Control
        glCode:
          type: integer
          format: int32
          example: 50001
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityType'
        usage:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityUsage'
        nameDecorated:
          type: string
          example: Savings Control
        tagId:
          $ref: '#/components/schemas/GetSavingsProductsLiabilityTagId'
    GetSavingsProductsLiabilityTagId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
    GetSavingsProductsLiabilityType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.liability
        description:
          type: string
          example: LIABILITY
    GetSavingsProductsLiabilityUsage:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountUsage.detail
        description:
          type: string
          example: DETAIL
    GetSavingsProductsLockinPeriodFrequencyTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: savings.lockin.savingsPeriodFrequencyType.days
        description:
          type: string
          example: Days
    GetSavingsProductsPaymentTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 14
        name:
          type: string
          example: Wire Transfer
        position:
          type: integer
          format: int32
          example: 0
    GetSavingsProductsTemplateAccountingRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: accountingRuleType.none
        description:
          type: string
          example: NONE
    GetSavingsProductsTemplateResponse:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationDaysInYearType'
        accountingRule:
          $ref: '#/components/schemas/GetSavingsProductsTemplateAccountingRule'
        currencyOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsCurrency'
        interestCompoundingPeriodTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsInterestCompoundingPeriodType'
        interestPostingPeriodTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsInterestPostingPeriodType'
        interestCalculationTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsInterestCalculationType'
        interestCalculationDaysInYearTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsInterestCalculationDaysInYearType'
        lockinPeriodFrequencyTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsLockinPeriodFrequencyTypeOptions'
        withdrawalFeeTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsWithdrawalFeeTypeOptions'
        paymentTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsPaymentTypeOptions'
        accountingRuleOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsTemplateAccountingRule'
        accountingMappingOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsAccountingMappingOptions'
        chargeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsChargeOptions'
      description: GetSavingsProductsTemplateResponse
    GetSavingsProductsWithdrawalFeeTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsWithdrawalFeesType.flat
        description:
          type: string
          example: Flat
    GetSavingsProductsAccountingMappings:
      type: object
      properties:
        savingsReferenceAccount:
          $ref: '#/components/schemas/GetSavingsProductsSavingsReferenceAccount'
        incomeFromFeeAccount:
          $ref: '#/components/schemas/GetSavingsProductsIncomeFromFeeAccount'
        incomeFromPenaltyAccount:
          $ref: '#/components/schemas/GetSavingsProductsIncomeFromPenaltyAccount'
        interestOnSavingsAccount:
          $ref: '#/components/schemas/GetSavingsProductsInterestOnSavingsAccount'
        savingsControlAccount:
          $ref: '#/components/schemas/GetSavingsProductsSavingsControlAccount'
        transfersInSuspenseAccount:
          $ref: '#/components/schemas/GetSavingsProductsTransfersInSuspenseAccount'
    GetSavingsProductsAccountingRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountingRuleType.cash
        description:
          type: string
          example: CASH BASED
    GetSavingsProductsFeeToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetSavingsProductsFeeToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetSavingsProductsFeeToIncomeAccountMappingsIncomeAccount'
    GetSavingsProductsFeeToIncomeAccountMappingsCharge:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: sav charge
        active:
          type: boolean
          example: false
        penalty:
          type: boolean
          example: false
    GetSavingsProductsFeeToIncomeAccountMappingsIncomeAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 16
        name:
          type: string
          example: income from savings fee
        glCode:
          type: integer
          format: int32
          example: 24
    GetSavingsProductsFundSourceAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: savings ref
        glCode:
          type: integer
          format: int32
          example: 20
    GetSavingsProductsIncomeFromFeeAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 16
        name:
          type: string
          example: income from savings fee
        glCode:
          type: integer
          format: int32
          example: 24
    GetSavingsProductsIncomeFromPenaltyAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 17
        name:
          type: string
          example: income from sav penalties
        glCode:
          type: integer
          format: int32
          example: 25
    GetSavingsProductsInterestOnSavingsAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 15
        name:
          type: string
          example: interest on savings
        glCode:
          type: integer
          format: int32
          example: 23
    GetSavingsProductsPaymentChannelToFundSourceMappings:
      type: object
      properties:
        paymentType:
          $ref: '#/components/schemas/GetSavingsProductsPaymentType'
        fundSourceAccount:
          $ref: '#/components/schemas/GetSavingsProductsFundSourceAccount'
    GetSavingsProductsPaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        name:
          type: string
          example: check
    GetSavingsProductsPenaltyToIncomeAccountMappings:
      type: object
      properties:
        charge:
          $ref: '#/components/schemas/GetSavingsProductsPenaltyToIncomeAccountMappingsCharge'
        incomeAccount:
          $ref: '#/components/schemas/GetSavingsProductsIncomeFromPenaltyAccount'
    GetSavingsProductsPenaltyToIncomeAccountMappingsCharge:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: sav 2
        active:
          type: boolean
          example: false
        penalty:
          type: boolean
          example: true
    GetSavingsProductsProductIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: savings product
        shortName:
          type: string
          example: sa1
        description:
          type: string
          example: gtasga
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        nominalAnnualInterestRate:
          type: number
          example: 5
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationDaysInYearType'
        withdrawalFeeForTransfers:
          type: boolean
          example: false
        accountingRule:
          $ref: '#/components/schemas/GetSavingsProductsAccountingRule'
        accountingMappings:
          $ref: '#/components/schemas/GetSavingsProductsAccountingMappings'
        paymentChannelToFundSourceMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsPaymentChannelToFundSourceMappings'
        feeToIncomeAccountMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsFeeToIncomeAccountMappings'
        penaltyToIncomeAccountMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSavingsProductsPenaltyToIncomeAccountMappings'
        charges:
          type: array
          example: []
          items:
            type: integer
            format: int32
      description: GetSavingsProductsProductIdResponse
    GetSavingsProductsSavingsControlAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        name:
          type: string
          example: savings ref tool kit
        glCode:
          type: integer
          format: int32
          example: 21
    GetSavingsProductsSavingsReferenceAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          example: savings ref
        glCode:
          type: integer
          format: int32
          example: 20
    GetSavingsProductsTransfersInSuspenseAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 14
        name:
          type: string
          example: saving transfers
        glCode:
          type: integer
          format: int32
          example: 22
    GetSavingsProductsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Savings product
        shortName:
          type: string
          example: sa1
        description:
          type: string
          example: gtasga
        currency:
          $ref: '#/components/schemas/GetSavingsCurrency'
        nominalAnnualInterestRate:
          type: number
          example: 5.0
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSavingsProductsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSavingsProductsInterestCalculationDaysInYearType'
        withdrawalFeeForTransfers:
          type: boolean
          example: false
        accountingRule:
          $ref: '#/components/schemas/GetSavingsProductsAccountingRule'
      description: GetSavingsProductsResponse
    PutSavingsProductsProductIdRequest:
      type: object
      properties:
        description:
          type: string
          example: Passbook Savings Lite.
        locale:
          type: string
          example: en
        interestRate:
          type: number
          format: double
          example: 5.73
      description: PutSavingsProductsProductIdRequest
    PutSavingsProductsProductIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutSavingsChanges'
      description: PutSavingsProductsProductIdResponse
    DeleteSavingsProductsProductIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: DeleteSavingsProductsProductIdResponse
    PostSavingsCharges:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
    PostSavingsProductsRequest:
      type: object
      properties:
        name:
          type: string
          example: Passbook Savings
        shortName:
          type: string
          example: PBSV
        description:
          type: string
          example: "Daily compounding using Daily Balance, 5% per year, 365 days in\
            \ year"
        currencyCode:
          type: string
          example: USD
        digitsAfterDecimal:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        locale:
          type: string
          example: en
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5.0
        interestCompoundingPeriodType:
          type: integer
          format: int32
          example: 1
        interestPostingPeriodType:
          type: integer
          format: int32
          example: 4
        interestCalculationType:
          type: integer
          format: int32
          example: 1
        interestCalculationDaysInYearType:
          type: integer
          format: int32
          example: 365
        accountingRule:
          type: integer
          format: int32
          example: 1
        charges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostSavingsCharges'
      description: PostSavingsProductsRequest
    PostSavingsProductsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostSavingsProductsResponse
    GetSearchResponse:
      type: object
      properties:
        entityId:
          type: integer
          format: int64
          example: 1
        entityAccountNo:
          type: integer
          format: int64
          example: 1
        entityExternalId:
          type: string
          example: ID_JKZGEXF
        entityName:
          type: string
          example: Group_Name_HVCU5
        entityType:
          type: string
          example: GROUP
        parentId:
          type: integer
          format: int64
          example: 1
        parentName:
          type: string
          example: Head Office
        entityStatus:
          $ref: '#/components/schemas/EnumOptionData'
      description: GetSearchResponse
    PostAdhocQuerySearchRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        loanDateOption:
          type: string
          example: approvalDate
        loanFromDate:
          type: string
          format: date
          example: 2013-01-01
        loanToDate:
          type: string
          format: date
          example: 2014-01-27
        includeOutStandingAmountPercentage:
          type: boolean
          example: true
        outStandingAmountPercentageCondition:
          type: string
          example: <=
        outStandingAmountPercentage:
          type: integer
          format: int64
          example: 80
        includeOutstandingAmount:
          type: boolean
          example: true
        outstandingAmountCondition:
          type: string
          example: between
        minOutstandingAmount:
          type: integer
          format: int64
          example: 100
        maxOutstandingAmount:
          type: integer
          format: int64
          example: 10000
      description: PostAdhocQuerySearchRequest
    PostAdhocQuerySearchResponse:
      type: object
      properties:
        officeName:
          type: string
          example: HFC
        loanProductName:
          type: string
          example: 01 BC3M
        loanOutStanding:
          type: integer
          format: int64
        percentage:
          type: integer
          format: int64
      description: PostAdhocQuerySearchResponse
    GetAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetAccountTransferTemplateResponse:
      type: object
      properties:
        accountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetAccountOptions'
        fromAccountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFromAccountOptions'
        toAccountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetFromAccountOptions'
      description: GetAccountTransferTemplateResponse
    GetFromAccountOptions:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
          example: 2
        accountNo:
          type: integer
          format: int32
          example: 1
        accountType:
          $ref: '#/components/schemas/GetAccountOptions'
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: ABC
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: HEAD OFFICE
    PostNewTransferResponse:
      type: object
      properties:
        savingsId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostNewTransferResponse
    GetSelfBeneficiariesAccountOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.savings
        description:
          type: string
          example: Savings Account
    GetSelfBeneficiariesTPTTemplateResponse:
      type: object
      properties:
        accountTypeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfBeneficiariesAccountOptions'
      description: GetSelfBeneficiariesTPTTemplateResponse
    GetSelfBeneficiariesTPTResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Client2Savings
        officeName:
          type: string
          example: Test Office
        clientName:
          type: string
          example: FN2 LN2
        accountType:
          $ref: '#/components/schemas/GetSelfBeneficiariesAccountOptions'
        accountNumber:
          type: integer
          format: int64
          example: 2
        transferLimit:
          type: integer
          format: int32
          example: 0
      description: GetSelfBeneficiariesTPTResponse
    PostSelfBeneficiariesTPTRequest:
      type: object
      properties:
        locale:
          type: string
          example: en_GB
        name:
          type: string
          example: beneficiary nick name
        officeName:
          type: string
          example: HEAD OFFICE
        accountNumber:
          type: integer
          format: int64
          example: 1
        accountType:
          type: integer
          format: int32
          example: 1
        transferLimit:
          type: integer
          format: int32
          example: 1000
      description: PostSelfBeneficiariesTPTRequest
    PostSelfBeneficiariesTPTResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 5
      description: PostSelfBeneficiariesTPTResponse
    PutSelfBeneficiariesTPTBeneficiaryIdRequest:
      type: object
      properties:
        name:
          type: string
          example: beneficiary nick name
        transferLimit:
          type: integer
          format: int32
          example: 1000
      description: PutSelfBeneficiariesTPTBeneficiaryIdRequest
    PutSelfBeneficiariesChanges:
      type: object
      properties:
        transferLimit:
          type: integer
          format: int32
          example: 1000
        name:
          type: string
          example: Client22
    PutSelfBeneficiariesTPTBeneficiaryIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 5
        changes:
          $ref: '#/components/schemas/PutSelfBeneficiariesChanges'
      description: PutSelfBeneficiariesTPTBeneficiaryIdResponse
    DeleteSelfBeneficiariesTPTBeneficiaryIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 5
      description: DeleteSelfBeneficiariesTPTBeneficiaryIdResponse
    GetSelfClientsClientIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 27
        accountNo:
          type: integer
          format: int64
          example: 27
        status:
          $ref: '#/components/schemas/GetSelfClientsStatus'
        active:
          type: boolean
          example: true
        activationDate:
          type: string
          format: date
        firstname:
          type: string
          example: savings
        lastname:
          type: string
          example: test
        displayName:
          type: string
          example: savings test
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        timeline:
          $ref: '#/components/schemas/GetSelfClientsTimeline'
        savingsProductId:
          type: integer
          format: int32
          example: 4
        savingsProductName:
          type: string
          example: account overdraft
        groups:
          type: array
          items:
            type: string
      description: GetSelfClientsClientIdResponse
    GetSelfClientsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 300
        code:
          type: string
          example: clientStatusType.active
        description:
          type: string
          example: Active
    GetSelfClientsTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
        submittedByUsername:
          type: string
          example: mifos
        submittedByFirstname:
          type: string
          example: App
        submittedByLastname:
          type: string
          example: Administrator
        activatedOnDate:
          type: string
          format: date
        activatedByUsername:
          type: string
          example: mifos
        activatedByFirstname:
          type: string
          example: App
        activatedByLastname:
          type: string
          example: Administrator
    GetSelfClientsChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetSelfClientsChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
    GetSelfClientsClientIdChargesChargeIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        clientId:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 5
        name:
          type: string
          example: Client Fee 1
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfClientsChargeTimeType'
        dueDate:
          type: string
          format: date
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfClientsChargeCalculationType'
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        amount:
          type: number
          format: float
          example: 100
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 100
        amountWrittenOff:
          type: number
          format: float
          example: 0
        amountOutstanding:
          type: number
          format: float
          example: 0
        penalty:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        isPaid:
          type: boolean
          example: false
        isWaived:
          type: boolean
          example: true
      description: GetSelfClientsClientIdChargesChargeIdResponse
    GetSelfClientsSavingsAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetSelfClientsClientIdTransactionsTransactionIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        type:
          $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsType'
        date:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        amount:
          type: number
          format: float
          example: 60.0
        submittedOnDate:
          type: string
          format: date
        reversed:
          type: boolean
          example: true
      description: GetSelfClientsClientIdTransactionsTransactionIdResponse
    GetSelfClientsClientIdTransactionsType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: clientTransactionType.payCharge
        description:
          type: string
          example: PAY_CHARGE
    GetSelfClientsClientIdAccountsResponse:
      type: object
      properties:
        loanAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsLoanAccounts'
        savingsAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsSavingsAccounts'
      description: GetSelfClientsClientIdAccountsResponse
    GetSelfClientsLoanAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        externalId:
          type: integer
          format: int32
          example: 456
        productId:
          type: integer
          format: int32
          example: 1
        productName:
          type: string
          example: TestOne
        status:
          $ref: '#/components/schemas/GetSelfClientsLoanAccountsStatus'
        loanType:
          $ref: '#/components/schemas/GetSelfClientsLoanAccountsType'
        loanCycle:
          type: integer
          format: int32
          example: 1
    GetSelfClientsLoanAccountsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 300
        code:
          type: string
          example: loanStatusType.active
        description:
          type: string
          example: Active
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: false
        active:
          type: boolean
          example: true
        closedObligationsMet:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        overpaid:
          type: boolean
          example: false
    GetSelfClientsLoanAccountsType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: loanType.individual
        description:
          type: string
          example: Individual
    GetSelfClientsSavingsAccounts:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 7
        accountNo:
          type: integer
          format: int64
          example: 7
        productId:
          type: integer
          format: int32
          example: 2
        productName:
          type: string
          example: Other product
        status:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsStatus'
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
    GetSelfClientsSavingsAccountsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
    GetSelfClientsClientIdTransactionsPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 226
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        type:
          $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsType'
        date:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        amount:
          type: number
          format: double
          example: 22
        submittedOnDate:
          type: string
          format: date
        reversed:
          type: boolean
          example: false
    GetSelfClientsClientIdTransactionsResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 20
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsClientIdTransactionsPageItems'
      description: GetSelfClientsClientIdTransactionsResponse
    GetSelfClientsChargesPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 5
        clientId:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 6
        name:
          type: string
          example: Client Fees 2
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfClientsChargeTimeType'
        dueDate:
          type: string
          format: date
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfClientsChargeCalculationType'
        currency:
          $ref: '#/components/schemas/GetSelfClientsSavingsAccountsCurrency'
        amount:
          type: number
          format: float
          example: 550
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        amountOutstanding:
          type: number
          format: float
          example: 550
        penalty:
          type: boolean
          example: false
        isActive:
          type: boolean
          example: true
        isPaid:
          type: boolean
          example: false
        isWaived:
          type: boolean
          example: false
    GetSelfClientsClientIdChargesResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 4
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsChargesPageItems'
      description: GetSelfClientsClientIdChargesResponse
    GetSelfClientsPageItems:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        status:
          $ref: '#/components/schemas/GetSelfClientsStatus'
        active:
          type: boolean
          example: true
        activationDate:
          type: string
          format: date
        fullname:
          type: string
          example: Small shop
        displayName:
          type: string
          example: Small shop
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
    GetSelfClientsResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 2
        pageItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfClientsPageItems'
      description: GetSelfClientsResponse
    GetLoanCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetSelfLoansLoanIdTransactionsTransactionIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        type:
          $ref: '#/components/schemas/GetSelfLoansLoanIdTransactionsType'
        date:
          type: string
          format: date
        manuallyReversed:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetLoanCurrency'
        amount:
          type: number
          format: float
          example: 559.88
        interestPortion:
          type: number
          format: float
          example: 559.88
      description: GetSelfLoansLoanIdTransactionsTransactionIdResponse
    GetSelfLoansLoanIdTransactionsType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: loanTransactionType.repayment
        description:
          type: string
          example: Repayment
        disbursement:
          type: boolean
          example: false
        repaymentAtDisbursement:
          type: boolean
          example: false
        repayment:
          type: boolean
          example: true
        contra:
          type: boolean
          example: false
        waiveInterest:
          type: boolean
          example: false
        waiveCharges:
          type: boolean
          example: false
        writeOff:
          type: boolean
          example: false
        recoveryRepayment:
          type: boolean
          example: false
    GetSelfLoansChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetSelfLoansChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeTimeType.disbursement
        description:
          type: string
          example: Disbursement
    GetSelfLoansLoanIdChargesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Loan Processing fee
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfLoansChargeTimeType'
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfLoansChargeCalculationType'
        percentage:
          type: number
          format: double
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        currency:
          $ref: '#/components/schemas/GetLoanCurrency'
        amount:
          type: number
          format: float
          example: 100
        amountPaid:
          type: number
          format: float
          example: 0
        amountWaived:
          type: number
          format: float
          example: 0
        amountWrittenOff:
          type: number
          format: float
          example: 0
        amountOutstanding:
          type: number
          format: float
          example: 100
        amountOrPercentage:
          type: number
          format: float
          example: 100
        penalty:
          type: boolean
          example: false
      description: GetSelfLoansLoanIdChargesResponse
    PostSelfLoansData:
      type: object
      properties:
        locale:
          type: string
          example: en
        Activation_Date:
          type: string
          example: 01 December 2016 00:00
        dateFormat:
          type: string
          example: dd MMMM yyyy HH:mm
    PostSelfLoansDatatables:
      type: object
      properties:
        registeredTableName:
          type: string
          example: Date Loan Field
        data:
          $ref: '#/components/schemas/PostSelfLoansData'
    PostSelfLoansDisbursementData:
      type: object
      properties:
        expectedDisbursementDate:
          type: string
          example: 01 November 2013
        principal:
          type: integer
          format: int64
          example: 22000
        approvedPrincipal:
          type: integer
          format: int64
          example: 22000
    PostSelfLoansRequest:
      type: object
      properties:
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en_GB
        clientId:
          type: integer
          format: int32
          example: 1
        productId:
          type: integer
          format: int32
          example: 1
        principal:
          type: number
          format: double
        loanTermFrequency:
          type: integer
          format: int32
          example: 12
        loanTermFrequencyType:
          type: integer
          format: int32
          example: 2
        loanType:
          type: string
          example: individual
        numberOfRepayments:
          type: integer
          format: int32
          example: 10
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 2
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 10
        amortizationType:
          type: integer
          format: int32
          example: 1
        interestType:
          type: integer
          format: int32
          example: 0
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 1
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 1
        expectedDisbursementDate:
          type: string
          example: 10 Jun 2013
        submittedOnDate:
          type: string
          example: 10 Jun 2013
        linkAccountId:
          type: integer
          format: int32
          example: 1
        fixedEmiAmount:
          type: integer
          format: int32
          example: 1100
        maxOutstandingLoanBalance:
          type: integer
          format: int64
          example: 35000
        disbursementData:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostSelfLoansDisbursementData'
        datatables:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostSelfLoansDatatables'
      description: PostSelfLoansRequest
    PostSelfLoansResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostSelfLoansResponse
    PutSelfLoansLoanIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        productId:
          type: integer
          format: int32
          example: 1
        principal:
          type: integer
          format: int64
          example: 5000
        loanTermFrequency:
          type: integer
          format: int32
          example: 10
        loanTermFrequencyType:
          type: integer
          format: int32
          example: 0
        numberOfRepayments:
          type: integer
          format: int32
          example: 10
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          type: integer
          format: int32
          example: 0
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 2
        interestType:
          type: integer
          format: int32
          example: 0
        interestCalculationPeriodType:
          type: integer
          format: int32
          example: 0
        amortizationType:
          type: integer
          format: int32
          example: 1
        expectedDisbursementDate:
          type: string
          example: 04 March 2014
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 1
      description: PutSelfLoansLoanIdRequest
    PutSelfLoansChanges:
      type: object
      properties:
        principal:
          type: integer
          format: int64
          example: 5000
        locale:
          type: string
          example: en
    PutSelfLoansLoanIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 2
        clientId:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutSelfLoansChanges'
      description: PutSelfLoansLoanIdResponse
    PostSelfLoansLoanIdRequest:
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        withdrawnOnDate:
          type: string
          example: 20 September 2011
        note:
          type: string
          example: Reason loan applicant withdrew from application.
      description: PostSelfLoansLoanIdRequest
    PostSelfLoansLoanIdChanges:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PostSelfLoansLoanIdStatus'
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        withdrawnOnDate:
          type: string
          example: 20 September 2011
        closedOnDate:
          type: string
          example: 20 September 2011
    PostSelfLoansLoanIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        loanId:
          type: integer
          format: int32
          example: 2
        resourceId:
          type: integer
          format: int32
          example: 2
        changes:
          $ref: '#/components/schemas/PostSelfLoansLoanIdChanges'
      description: PostSelfLoansLoanIdResponse
    PostSelfLoansLoanIdStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 400
        code:
          type: string
          example: loanStatusType.withdrawn.by.client
        description:
          type: string
          example: Withdrawn by applicant
        pendingApproval:
          type: boolean
          example: false
        waitingForDisbursal:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closedObligationsMet:
          type: boolean
          example: false
        closedWrittenOff:
          type: boolean
          example: false
        closedRescheduled:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
        overpaid:
          type: boolean
          example: false
    GetSelfLoansLoanIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        status:
          $ref: '#/components/schemas/GetLoansLoanIdStatus'
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Kampala first Client
        clientOfficeId:
          type: integer
          format: int32
          example: 2
        loanProductId:
          type: integer
          format: int32
          example: 1
        loanProductName:
          type: string
          example: Kampala Product (with cash accounting)
        loanProductDescription:
          type: string
          example: Typical Kampala loan product with cash accounting enabled for testing.
        loanPurposeId:
          type: integer
          format: int32
          example: 22
        loanPurposeName:
          type: string
          example: option.HousingImprovement
        loanOfficerId:
          type: integer
          format: int32
          example: 2
        loanOfficerName:
          type: string
          example: "LoanOfficer, Kampala"
        loanType:
          $ref: '#/components/schemas/GetLoansLoanIdLoanType'
        currency:
          $ref: '#/components/schemas/GetLoansLoanIdCurrency'
        principal:
          type: integer
          format: int64
          example: 1000000
        termFrequency:
          type: integer
          format: int32
          example: 12
        termPeriodFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdTermPeriodFrequencyType'
        numberOfRepayments:
          type: integer
          format: int32
          example: 12
        repaymentEvery:
          type: integer
          format: int32
          example: 1
        repaymentFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdRepaymentFrequencyType'
        interestRatePerPeriod:
          type: integer
          format: int32
          example: 24
        interestRateFrequencyType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestRateFrequencyType'
        annualInterestRate:
          type: integer
          format: int32
          example: 24
        amortizationType:
          $ref: '#/components/schemas/GetLoansLoanIdAmortizationType'
        interestType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestType'
        interestCalculationPeriodType:
          $ref: '#/components/schemas/GetLoansLoanIdInterestCalculationPeriodType'
        transactionProcessingStrategyId:
          type: integer
          format: int32
          example: 2
        timeline:
          $ref: '#/components/schemas/GetLoansLoanIdTimeline'
        summary:
          $ref: '#/components/schemas/GetLoansLoanIdSummary'
      description: GetSelfLoansLoanIdResponse
    GetSelfLoansProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Kampala Product (with cash accounting)
    GetSelfLoansTemplateResponse:
      type: object
      properties:
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: Kampala first Client
        clientOfficeId:
          type: integer
          format: int32
          example: 2
        timeline:
          $ref: '#/components/schemas/GetSelfLoansTimeline'
        productOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfLoansProductOptions'
      description: GetSelfLoansTemplateResponse
    GetSelfLoansTimeline:
      type: object
      properties:
        expectedDisbursementDate:
          type: string
          format: date
    PostLinkDelinkAccountsToFromPocketResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 6
      description: PostLinkDelinkAccountsToFromPocketResponse
    GetAccountsLinkedToPocketResponse:
      type: object
      properties:
        loanAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetPocketLoanAccounts'
        savingAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetPocketSavingAccounts'
        shareAccounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetPocketShareAccounts'
      description: GetAccountsLinkedToPocketResponse
    GetPocketLoanAccounts:
      type: object
      properties:
        pocketId:
          type: integer
          format: int32
          example: 6
        accountId:
          type: integer
          format: int32
          example: 11
        accountType:
          type: integer
          format: int32
          example: 2
        accountNumber:
          type: integer
          format: int32
          example: 11
        id:
          type: integer
          format: int32
          example: 10
    GetPocketSavingAccounts:
      type: object
      properties:
        pocketId:
          type: integer
          format: int32
          example: 6
        accountId:
          type: integer
          format: int32
          example: 2
        accountType:
          type: integer
          format: int32
          example: 3
        accountNumber:
          type: integer
          format: int32
          example: 2
        id:
          type: integer
          format: int32
          example: 11
    GetPocketShareAccounts:
      type: object
    GetPocketData:
      type: object
      properties:
        row:
          type: string
          example: "[\"Head Office\", \"000000001\", \"John Doe\"  \"2017-03-04\"\
            , \"786YYH7\""
    GetRunReportColumnHeaders:
      type: object
      properties:
        columnName:
          type: string
          example: Office/Branch
        columnType:
          type: string
          example: VARCHAR
        isColumnNullable:
          type: boolean
          example: false
        isColumnPrimaryKey:
          type: boolean
          example: false
        columnValues:
          type: string
          example: "[]"
    GetRunReportResponse:
      type: object
      properties:
        columnHeaders:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetRunReportColumnHeaders'
        data:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetPocketData'
      description: GetRunReportResponse
    GetSelfSavingsAccountsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        clientId:
          type: integer
          format: int32
          example: 1
        clientName:
          type: string
          example: small business
        savingsProductId:
          type: integer
          format: int32
          example: 1
        savingsProductName:
          type: string
          example: Passbook Savings
        fieldOfficerId:
          type: integer
          format: int32
          example: 0
        status:
          $ref: '#/components/schemas/GetSelfSavingsStatus'
        timeline:
          $ref: '#/components/schemas/GetSelfSavingsTimeline'
        currency:
          $ref: '#/components/schemas/GetSelfSavingsCurrency'
        nominalAnnualInterestRate:
          type: number
          format: double
          example: 5
        interestCompoundingPeriodType:
          $ref: '#/components/schemas/GetSelfSavingsInterestCompoundingPeriodType'
        interestPostingPeriodType:
          $ref: '#/components/schemas/GetSelfSavingsInterestPostingPeriodType'
        interestCalculationType:
          $ref: '#/components/schemas/GetSelfSavingsInterestCalculationType'
        interestCalculationDaysInYearType:
          $ref: '#/components/schemas/GetSelfSavingsInterestCalculationDaysInYearType'
        summary:
          $ref: '#/components/schemas/GetSelfSavingsSummary'
      description: GetSelfSavingsAccountsResponse
    GetSelfSavingsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetSelfSavingsInterestCalculationDaysInYearType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 365
        code:
          type: string
          example: savingsInterestCalculationDaysInYearType.days365
        description:
          type: string
          example: 365 Days
    GetSelfSavingsInterestCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savingsInterestCalculationType.dailybalance
        description:
          type: string
          example: Daily Balance
    GetSelfSavingsInterestCompoundingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: savings.interest.period.savingsCompoundingInterestPeriodType.daily
        description:
          type: string
          example: Daily
    GetSelfSavingsInterestPostingPeriodType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: savings.interest.posting.period.savingsPostingInterestPeriodType.monthly
        description:
          type: string
          example: Monthly
    GetSelfSavingsStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: savingsAccountStatusType.submitted.and.pending.approval
        description:
          type: string
          example: Submitted and pending approval
        submittedAndPendingApproval:
          type: boolean
          example: true
        approved:
          type: boolean
          example: false
        rejected:
          type: boolean
          example: false
        withdrawnByApplicant:
          type: boolean
          example: false
        active:
          type: boolean
          example: false
        closed:
          type: boolean
          example: false
    GetSelfSavingsSummary:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/GetSelfSavingsCurrency'
        accountBalance:
          type: integer
          format: int32
          example: 0
    GetSelfSavingsTimeline:
      type: object
      properties:
        submittedOnDate:
          type: string
          format: date
    GetSelfSavingsAccountsAccountIdChargesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 3
        accountId:
          type: integer
          format: int32
          example: 57
        name:
          type: string
          example: Savings account maintenance fee
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfSavingsChargeTimeType'
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfSavingsChargeCalculationType'
        percentage:
          type: number
          format: double
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        currency:
          $ref: '#/components/schemas/GetSelfSavingsCurrency'
        amount:
          type: integer
          format: int32
          example: 100
        amountPaid:
          type: integer
          format: int32
          example: 0
        amountWaived:
          type: integer
          format: int32
          example: 0
        amountWrittenOff:
          type: integer
          format: int32
          example: 0
        amountOutstanding:
          type: integer
          format: int32
          example: 100
        amountOrPercentage:
          type: integer
          format: int32
          example: 100
        penalty:
          type: boolean
          example: false
      description: GetSelfSavingsAccountsAccountIdChargesResponse
    GetSelfSavingsChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetSelfSavingsChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeTimeType.specifiedDueDate
        description:
          type: string
          example: Specified due date
    GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        chargeId:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Passbook fee
        chargeTimeType:
          $ref: '#/components/schemas/GetSelfSavingsChargeTimeType'
        chargeCalculationType:
          $ref: '#/components/schemas/GetSelfSavingsChargeCalculationType'
        percentage:
          type: number
          format: double
          example: 0
        amountPercentageAppliedTo:
          type: number
          format: double
          example: 0
        currency:
          $ref: '#/components/schemas/GetSelfSavingsCurrency'
        amount:
          type: integer
          format: int32
          example: 100
        amountPaid:
          type: integer
          format: int32
          example: 0
        amountWaived:
          type: integer
          format: int32
          example: 0
        amountWrittenOff:
          type: integer
          format: int32
          example: 0
        amountOutstanding:
          type: integer
          format: int32
          example: 100
        amountOrPercentage:
          type: integer
          format: int32
          example: 100
        penalty:
          type: boolean
          example: false
      description: GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse
    GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        transactionType:
          $ref: '#/components/schemas/GetSelfSavingsTransactionType'
        accountId:
          type: integer
          format: int32
          example: 1
        accountNo:
          type: integer
          format: int64
          example: 1
        date:
          type: string
          format: date
        currency:
          $ref: '#/components/schemas/GetSelfSavingsTransactionCurrency'
        paymentDetailData:
          $ref: '#/components/schemas/GetSelfSavingsPaymentDetailData'
        amount:
          type: integer
          format: int32
          example: 5000
        runningBalance:
          type: integer
          format: int32
          example: 0
        reversed:
          type: boolean
          example: true
      description: GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse
    GetSelfSavingsPaymentDetailData:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 62
        paymentType:
          $ref: '#/components/schemas/GetSelfSavingsPaymentType'
        accountNumber:
          type: integer
          format: int32
        checkNumber:
          type: integer
          format: int32
        routingCode:
          type: integer
          format: int32
        receiptNumber:
          type: integer
          format: int32
        bankNumber:
          type: integer
          format: int32
    GetSelfSavingsPaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 11
        name:
          type: string
          example: cash
    GetSelfSavingsTransactionCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        inMultiplesOf:
          type: integer
          format: int32
          example: 0
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetSelfSavingsTransactionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: savingsAccountTransactionType.withdrawal
        description:
          type: string
          example: Withdrawal
        deposit:
          type: boolean
          example: false
        withdrawal:
          type: boolean
          example: true
        interestPosting:
          type: boolean
          example: false
        feeDeduction:
          type: boolean
          example: false
    GetSelfUserDetailsOrganisationalRole:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 100
        code:
          type: string
          example: staffOrganisationalRoleType.programDirector
        description:
          type: string
          example: Program Director
    GetSelfUserDetailsRoles:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Super user
        description:
          type: string
          example: This role provides all application permissions.
    PostSelfAuthenticationResponse:
      type: object
      properties:
        username:
          type: string
          example: mifos
        userId:
          type: integer
          format: int32
          example: 1
        base64EncodedAuthenticationKey:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        authenticated:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        staffId:
          type: integer
          format: int32
          example: 1
        staffDisplayName:
          type: string
          example: "Director, Program"
        organisationalRole:
          $ref: '#/components/schemas/GetSelfUserDetailsOrganisationalRole'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfUserDetailsRoles'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
            example: ALL_FUNCTIONS
        isSelfServiceUser:
          type: boolean
          example: true
        clients:
          type: array
          example: "1, 2, 3"
          items:
            type: integer
            format: int32
      description: PostSelfAuthenticationResponse
    PutSelfUserRequest:
      type: object
      properties:
        password:
          type: string
          example: Abcd1234
        repeatPassword:
          type: string
          example: Abcd1234
      description: PutSelfUserRequest
    PutSelfUserChanges:
      type: object
      properties:
        passwordEncoded:
          type: string
          example: 6a72a630795be86fe926ce540fc45b6b922fe5ba130f185fe806a26b5e5efcdd
    PutSelfUserResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int32
          example: 1
        resourceId:
          type: integer
          format: int32
          example: 6
        changes:
          $ref: '#/components/schemas/PutSelfUserChanges'
      description: PutSelfUserResponse
    GetSelfUserDetailsResponse:
      type: object
      properties:
        username:
          type: string
          example: mifos
        userId:
          type: integer
          format: int32
          example: 1
        base64EncodedAuthenticationKey:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        authenticated:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int32
          example: 1
        officeName:
          type: string
          example: Head Office
        staffId:
          type: integer
          format: int32
          example: 1
        staffDisplayName:
          type: string
          example: "Director, Program"
        organisationalRole:
          $ref: '#/components/schemas/GetSelfUserDetailsOrganisationalRole'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetSelfUserDetailsRoles'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
            example: ALL_FUNCTIONS
        isSelfServiceUser:
          type: boolean
          example: true
        clients:
          type: array
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int32
      description: GetSelfUserDetailsResponse
    PostNewShareApplicationResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 12
      description: PostNewShareApplicationResponse
    GetAccountingMappingOptions:
      type: object
    GetClientIdProductIdAccountingMappings:
      type: object
      properties:
        shareReferenceId:
          $ref: '#/components/schemas/GetShareAccountsShareReferenceId'
        incomeFromFeeAccountId:
          $ref: '#/components/schemas/GetShareAccountsIncomeFromFeeAccountId'
        ShareEquityId:
          $ref: '#/components/schemas/GetShareAccountsShareEquityId'
        shareSuspenseId:
          $ref: '#/components/schemas/GetShareAccountsShareSuspenseId'
    GetClientIdProductIdChargeOptions:
      type: object
      properties:
        chargeOptions:
          $ref: '#/components/schemas/GetShareAccountsChargeOptions'
    GetClientIdProductIdLockinPeriodFrequencyTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: shares.lockin.sharePeriodFrequencyType.days
        description:
          type: integer
          format: int32
    GetClientIdProductIdMinimumActivePeriodFrequencyTypeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: shares.lockin.sharePeriodFrequencyType.days
        description:
          type: integer
          format: int32
    GetClientIdProductIdProductOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: SP
        shortName:
          type: string
          example: SP
        description:
          type: string
          example: SP1
        currency:
          $ref: '#/components/schemas/GetShareAccountsCurrency'
        totalShares:
          type: integer
          format: int32
          example: 1000
        totalSharesIssued:
          type: integer
          format: int32
          example: 900
        unitPrice:
          type: integer
          format: int32
          example: 1
        shareCapital:
          type: integer
          format: int32
          example: 900
        minimumShares:
          type: integer
          format: int32
          example: 8
        norminalShares:
          type: integer
          format: int32
          example: 500
        maximumShares:
          type: integer
          format: int32
          example: 500
        marketPrice:
          type: string
          example: "[]"
        charges:
          type: string
          example: "[]"
        allowDividendCalculationForInactiveClients:
          type: boolean
          example: false
        lockinPeriod:
          type: integer
          format: int32
          example: 50
        lockinPeriodEnum:
          $ref: '#/components/schemas/GetShareAccountsClientIdProductIdLockPeriodTypeEnum'
        minimumActivePeriod:
          type: integer
          format: int32
          example: 10
        minimumActivePeriodForDividendsTypeEnum:
          $ref: '#/components/schemas/GetShareAccountsClientIdProductIdMinimumActivePeriodForDividendsTypeEnum'
        accountingRule:
          $ref: '#/components/schemas/GetShareAccountsClientIdProductIdAccountingRule'
        accountingMappings:
          $ref: '#/components/schemas/GetClientIdProductIdAccountingMappings'
        currencyOptions:
          $ref: '#/components/schemas/GetShareAccountsCurrency'
        chargeOptions:
          $ref: '#/components/schemas/GetShareAccountsChargeOptions'
        minimumActivePeriodFrequencyTypeOptions:
          $ref: '#/components/schemas/GetClientIdProductIdMinimumActivePeriodFrequencyTypeOptions'
        lockinPeriodFrequencyTypeOptions:
          $ref: '#/components/schemas/GetClientIdProductIdLockinPeriodFrequencyTypeOptions'
        accountingMappingOptions:
          $ref: '#/components/schemas/GetAccountingMappingOptions'
    GetShareAccountsChargeAppliesTo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        code:
          type: string
          example: chargeAppliesTo.shares
        description:
          type: string
          example: Shares
    GetShareAccountsChargeCalculationType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: chargeCalculationType.flat
        description:
          type: string
          example: Flat
    GetShareAccountsChargeOptions:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Activation fee
        active:
          type: boolean
          example: true
        penalty:
          type: boolean
          example: false
        currency:
          $ref: '#/components/schemas/GetShareAccountsCurrency'
        amount:
          type: integer
          format: int32
          example: 2
        chargeTimeType:
          $ref: '#/components/schemas/GetShareAccountsChargeTimeType'
        chargeAppliesTo:
          $ref: '#/components/schemas/GetShareAccountsChargeAppliesTo'
        calculationType:
          $ref: '#/components/schemas/GetShareAccountsChargeCalculationType'
        paymentMode:
          $ref: '#/components/schemas/GetShareAccountsChargePaymentMode'
    GetShareAccountsChargePaymentMode:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: chargepaymentmode.regular
        description:
          type: string
          example: Regular
    GetShareAccountsChargeTimeType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 14
        code:
          type: string
          example: chargeTimeType.sharespurchase
        description:
          type: string
          example: Share purchase
    GetShareAccountsClientIdProductIdAccountingRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountingRuleType.cash
        description:
          type: string
          example: CASH BASED
    GetShareAccountsClientIdProductIdLockPeriodTypeEnum:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: shares.lockin.sharePeriodFrequencyType.days
        description:
          type: string
          example: days
    GetShareAccountsClientIdProductIdMinimumActivePeriodForDividendsTypeEnum:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 0
        code:
          type: string
          example: shares.minimumactive.sharePeriodFrequencyType.days
        description:
          type: string
          example: days
    GetShareAccountsClientIdProductIdResponse:
      type: object
      properties:
        productOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientIdProductIdProductOptions'
        chargeOptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetClientIdProductIdChargeOptions'
      description: GetShareAccountsClientIdProductIdResponse
    GetShareAccountsCurrency:
      type: object
      properties:
        code:
          type: string
          example: USD
        name:
          type: string
          example: US Dollar
        decimalPlaces:
          type: integer
          format: int32
          example: 2
        displaySymbol:
          type: string
          example: $
        nameCode:
          type: string
          example: currency.USD
        displayLabel:
          type: string
          example: US Dollar ($)
    GetShareAccountsIncomeFromFeeAccountId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 40
        name:
          type: string
          example: Other Operating Income
        glCode:
          type: integer
          format: int32
          example: 30105
    GetShareAccountsShareEquityId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 56
        name:
          type: string
          example: Share Equity
        glCode:
          type: integer
          format: int32
          example: 98
    GetShareAccountsShareReferenceId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 32
        name:
          type: string
          example: Cash in Hand
        glCode:
          type: integer
          format: int32
          example: 20301
    GetShareAccountsShareSuspenseId:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: Overpayment Liability
        glCode:
          type: integer
          format: int32
          example: 10200
    ScorecardData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        username:
          type: string
        clientId:
          type: integer
          format: int64
        surveyId:
          type: integer
          format: int64
        surveyName:
          type: string
        scorecardValues:
          type: array
          items:
            $ref: '#/components/schemas/ScorecardValue'
    ScorecardValue:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        responseId:
          type: integer
          format: int64
        value:
          type: integer
          format: int32
        createdOn:
          type: string
          format: date-time
    ComponentData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        key:
          type: string
        text:
          type: string
        description:
          type: string
        sequenceNo:
          type: integer
          format: int32
    QuestionData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        responseDatas:
          type: array
          items:
            $ref: '#/components/schemas/ResponseData'
        componentKey:
          type: string
        key:
          type: string
        text:
          type: string
        description:
          type: string
        sequenceNo:
          type: integer
          format: int32
    ResponseData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        value:
          type: integer
          format: int32
        sequenceNo:
          type: integer
          format: int32
    SurveyData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        componentDatas:
          type: array
          items:
            $ref: '#/components/schemas/ComponentData'
        questionDatas:
          type: array
          items:
            $ref: '#/components/schemas/QuestionData'
        key:
          type: string
        name:
          type: string
        description:
          type: string
        countryCode:
          type: string
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
    GetTaxesComponentsCreditAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 4
        name:
          type: string
          example: ACCOUNT_NAME_7BR9C
        glCode:
          type: string
          example: LIABILITY_PA1460364665046
    GetTaxesComponentsCreditAccountType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        code:
          type: string
          example: accountType.liability
        description:
          type: string
          example: LIABILITY
    GetTaxesComponentsHistories:
      type: object
    GetTaxesComponentsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: tax component 1
        percentage:
          type: number
          format: float
          example: 10.0
        creditAccountType:
          $ref: '#/components/schemas/GetTaxesComponentsCreditAccountType'
        creditAccount:
          $ref: '#/components/schemas/GetTaxesComponentsCreditAccount'
        startDate:
          type: string
          format: date
        taxComponentsHistories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetTaxesComponentsHistories'
      description: GetTaxesComponentsResponse
    PostTaxesComponentsRequest:
      type: object
      properties:
        name:
          type: string
          example: tax component 1
        percentage:
          type: number
          format: float
          example: 10
        creditAccountType:
          type: integer
          format: int32
          example: 2
        creditAcountId:
          type: integer
          format: int32
          example: 4
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        startDate:
          type: string
          example: 11 April 2016
      description: PostTaxesComponentsRequest
    PostTaxesComponentsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostTaxesComponentsResponse
    PutTaxesComponentsTaxComponentIdRequest:
      type: object
      properties:
        name:
          type: string
          example: tax component 2
        percentage:
          type: number
          format: float
          example: 15
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        startDate:
          type: string
          example: 15 April 2016
      description: PutTaxesComponentsTaxComponentIdRequest
    PutTaxesComponentsChanges:
      type: object
      properties:
        percentage:
          type: number
          format: float
          example: 15
        name:
          type: string
          example: tax component 2
        startDate:
          type: string
          format: date
    PutTaxesComponentsTaxComponentIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutTaxesComponentsChanges'
      description: PutTaxesComponentsTaxComponentIdResponse
    GetTaxesGroupResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 7
        name:
          type: string
          example: tax group 1
        taxAssociations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GetTaxesGroupTaxAssociations'
      description: GetTaxesGroupResponse
    GetTaxesGroupTaxAssociations:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 7
        taxComponent:
          $ref: '#/components/schemas/GetTaxesGroupTaxComponent'
        startDate:
          type: string
          format: date
    GetTaxesGroupTaxComponent:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 7
        name:
          type: string
          example: tax component 2
    PutTaxesGroupTaxComponents:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 7
        taxComponentId:
          type: integer
          format: int32
          example: 7
        endDate:
          type: string
          example: 22 April 2016
    PutTaxesGroupTaxGroupIdRequest:
      type: object
      properties:
        name:
          type: string
          example: tax group 2
        locale:
          type: string
          example: en
        taxComponents:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PutTaxesGroupTaxComponents'
        dateFormat:
          type: string
          example: dd MMMM yyyy
      description: PutTaxesGroupTaxGroupIdRequest
    PutTaxesGroupChanges:
      type: object
      properties:
        addComponents:
          type: array
          example:
          - 6
          items:
            type: integer
            format: int32
        modifiedComponents:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PutTaxesGroupModifiedComponents'
        name:
          type: string
          example: tax group 2
    PutTaxesGroupModifiedComponents:
      type: object
      properties:
        endDate:
          type: string
          example: "Apr 22, 2016 12:00:00 AM"
        taxComponentId:
          type: integer
          format: int32
          example: 7
    PutTaxesGroupTaxGroupIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 7
        changes:
          $ref: '#/components/schemas/PutTaxesGroupChanges'
      description: PutTaxesGroupTaxGroupIdResponse
    PostTaxesGroupRequest:
      type: object
      properties:
        name:
          type: string
          example: tax group 1
        locale:
          type: string
          example: en
        taxComponents:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PostTaxesGroupTaxComponents'
        dateFormat:
          type: string
          example: dd MMMM yyyy
      description: PostTaxesGroupRequest
    PostTaxesGroupTaxComponents:
      type: object
      properties:
        taxComponentId:
          type: integer
          format: int32
          example: 7
        startDate:
          type: string
          example: 11 April 2016
    PostTaxesGroupResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
      description: PostTaxesGroupResponse
    LookupTableData:
      type: object
      properties:
        key:
          type: string
        description:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LookupTableEntry'
    LookupTableEntry:
      type: object
      properties:
        valueFrom:
          type: integer
          format: int32
        valueTo:
          type: integer
          format: int32
        score:
          type: number
          format: double
    Component:
      type: object
      properties:
        id:
          type: integer
          format: int64
        survey:
          $ref: '#/components/schemas/Survey'
        key:
          type: string
        text:
          type: string
        description:
          type: string
        sequenceNo:
          type: integer
          format: int32
        new:
          type: boolean
    Question:
      type: object
      properties:
        id:
          type: integer
          format: int64
        survey:
          $ref: '#/components/schemas/Survey'
        responses:
          type: array
          items:
            $ref: '#/components/schemas/Response'
        componentKey:
          type: string
        key:
          type: string
        text:
          type: string
        description:
          type: string
        sequenceNo:
          type: integer
          format: int32
        new:
          type: boolean
    Response:
      type: object
      properties:
        id:
          type: integer
          format: int64
        question:
          $ref: '#/components/schemas/Question'
        text:
          type: string
        value:
          type: integer
          format: int32
        sequenceNo:
          type: integer
          format: int32
        new:
          type: boolean
    Scorecard:
      type: object
      properties:
        id:
          type: integer
          format: int64
        survey:
          $ref: '#/components/schemas/Survey'
        question:
          $ref: '#/components/schemas/Question'
        response:
          $ref: '#/components/schemas/Response'
        appUser:
          $ref: '#/components/schemas/AppUser'
        client:
          $ref: '#/components/schemas/Client'
        createdOn:
          type: string
          format: date-time
        value:
          type: integer
          format: int32
        new:
          type: boolean
    Survey:
      type: object
      properties:
        id:
          type: integer
          format: int64
        components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        key:
          type: string
        name:
          type: string
        description:
          type: string
        countryCode:
          type: string
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
        new:
          type: boolean
    GetTemplatesTemplateIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
      description: GetTemplatesTemplateIdResponse
    TemplateMapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mapperorder:
          type: integer
          format: int32
        mapperkey:
          type: string
        mappervalue:
          type: string
        new:
          type: boolean
    PostTemplatesRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
      description: PostTemplatesRequest
    PostTemplatesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostTemplatesResponse
    PutTemplatesTemplateIdRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
      description: PutTemplatesTemplateIdRequest
    PutTemplatesTemplateIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PutTemplatesTemplateIdResponse
    DeleteTemplatesTemplateIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteTemplatesTemplateIdResponse
    GetTemplatesTemplateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
      description: GetTemplatesTemplateResponse
    GetTemplatesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: "This is a loan for {{loan.clientName}}"
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
      description: GetTemplatesResponse
    GetPasswordPreferencesTemplateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: Password must be at least 1 character and not more that 50 characters
            long
        active:
          type: boolean
          example: true
        key:
          type: string
          example: simple
      description: GetPasswordPreferencesTemplateResponse
    PutPasswordPreferencesTemplateRequest:
      type: object
      properties:
        validationPolicyId:
          type: integer
          format: int64
          example: 1
      description: PutPasswordPreferencesTemplateRequest
    GetPermissionsResponse:
      type: object
      properties:
        grouping:
          type: string
          example: authorisation
        code:
          type: string
          example: READ_PERMISSION
        entityName:
          type: string
          example: PERMISSION
        actionName:
          type: string
          example: READ
        selected:
          type: boolean
          example: true
      description: GetPermissionsResponse
    PutPermissionsRequest:
      type: object
      properties:
        permissions:
          type: string
          example: "\"CREATE_GUARANTOR\":true,\n    \"CREATE_CLIENT\":true"
      description: PutPermissionsRequest
    GetRolesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
        description:
          type: string
          example: This role provides all application permissions.
      description: GetRolesResponse
    PostRolesRequest:
      type: object
      properties:
        name:
          type: string
          example: Another Role Name
        description:
          type: string
          example: A description outlining the purpose of this role in relation to
            the application.
      description: PostRolesRequest
    PostRolesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostRolesResponse
    GetRolesRoleIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
        description:
          type: string
          example: This role provides all application permissions.
      description: GetRolesRoleIdResponse
    PostRolesRoleIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: PostRolesRoleIdResponse
    GetRolesRoleIdPermissionsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
        description:
          type: string
          example: This role provides all application permissions.
        permissionUsageData:
          type: array
          items:
            $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponsePermissionData'
      description: GetRolesRoleIdPermissionsResponse
    GetRolesRoleIdPermissionsResponsePermissionData:
      type: object
      properties:
        grouping:
          type: string
          example: authorisation
        code:
          type: string
          example: READ_PERMISSION
        entityName:
          type: string
          example: PERMISSION
        actionName:
          type: string
          example: READ
        selected:
          type: boolean
          example: false
    PostRolesRoleIdPermissionsResponsePermissions:
      type: object
      properties:
        ALL_FUNCTIONS_READ:
          type: string
          example: "true"
    PutRolesRoleIdPermissionsRequest:
      type: object
      properties:
        permissions:
          $ref: '#/components/schemas/PostRolesRoleIdPermissionsResponsePermissions'
      description: PutRolesRoleIdPermissionsRequest
    PutRolesRoleIdPermissionsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 8
        permissions:
          $ref: '#/components/schemas/PostRolesRoleIdPermissionsResponsePermissions'
      description: PutRolesRoleIdPermissionsResponse
    DeleteRolesRoleIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
      description: DeleteRolesRoleIdResponse
    PutRolesRoleIdRequest:
      type: object
      properties:
        description:
          type: string
          example: some description(changed)
      description: PutRolesRoleIdRequest
    PutRolesRoleIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutRolesRoleIdResponseChanges'
      description: PutRolesRoleIdResponse
    PutRolesRoleIdResponseChanges:
      type: object
      properties:
        description:
          type: string
          example: some description(changed)
    GetUsersUserIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: mifos
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        firstname:
          type: string
          example: App
        lastname:
          type: string
          example: Administrator
        email:
          type: string
          example: demomfi@mifos.org
        passwordNeverExpires:
          type: boolean
          example: false
        staff:
          $ref: '#/components/schemas/StaffData'
        availableRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        selectedRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
      description: GetUsersUserIdResponse
    GetUsersTemplateResponse:
      type: object
      properties:
        allowedOffices:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        availableRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        selfServiceRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
      description: GetUsersTemplateResponse
    GetUsersResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: mifos
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        firstname:
          type: string
          example: App
        lastname:
          type: string
          example: Administrator
        email:
          type: string
          example: demomfi@mifos.org
        passwordNeverExpires:
          type: boolean
          example: false
        staff:
          $ref: '#/components/schemas/StaffData'
        selectedRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
      description: GetUsersResponse
    PutUsersUserIdRequest:
      type: object
      properties:
        firstname:
          type: string
          example: Test
        password:
          type: string
          example: window75
        repeatPassword:
          type: string
          example: window75
      description: PutUsersUserIdRequest
    PutUsersUserIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
        changes:
          $ref: '#/components/schemas/PutUsersUserIdResponseChanges'
      description: PutUsersUserIdResponse
    PutUsersUserIdResponseChanges:
      type: object
      properties:
        firstname:
          type: string
          example: Test
        passwordEncoded:
          type: string
          example: abc3326b1bb376351c7baeb4175f5e0504e33aadf6a158474a6d71de1befae51
    DeleteUsersUserIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
        changes:
          $ref: '#/components/schemas/DeleteUsersUserIdResponseChanges'
      description: DeleteUsersUserIdResponse
    DeleteUsersUserIdResponseChanges:
      type: object
    PostUsersRequest:
      type: object
      properties:
        username:
          type: string
          example: newuser
        firstname:
          type: string
          example: Test
        lastname:
          type: string
          example: User
        email:
          type: string
          example: whatever@mifos.org
        officeId:
          type: integer
          format: int64
          example: 1
        staffId:
          type: integer
          format: int64
          example: 1
        roles:
          type: string
          example: "[2,3]"
        sendPasswordToEmail:
          type: boolean
          example: true
        isSelfServiceUser:
          type: boolean
          example: true
      description: PostUsersRequest
    PostUsersResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
      description: PostUsersResponse
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    tenantid:
      type: apiKey
      name: fineract-platform-tenantid
      in: header