version: 2.1

executors:
  build-executor:
    docker:
      - image: circleci/openjdk:8u252
    working_directory: /tmp
  publish-executor:
    docker:
      - image: circleci/golang:1.12
    working_directory: /tmp

jobs:
  build:
    executor: build-executor
    steps:
      - run:
          name: "Creating Workspace"
          command: mkdir -p workspace
      - run:
          name: "Checkout Code"
          command: |
            cd workspace
            git clone https://github.com/Grandolf49/fineract-client.git
      - run:
          name: "Generate SDK"
          command: |
            cd workspace/fineract-client
            chmod +x client-generator.sh
            ./client-generator.sh
      - run:
          name: "Build SDK"
          command: |
            cd workspace/fineract-client/out
            mvn clean package -Dmaven.test.skip=true

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: workspace
          # Must be relative path from root
          paths:
            - fineract-client/out

  publish-github-release:
    executor: publish-executor
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - run: ls -R
      - run:
          name: "Publish Release on Github"
          command: |
            cd workspace/fineract-client/out
            go get -u github.com/tcnksm/ghr
            VERSION=1.0.0
            ghr -t "${GITHUB_TOKEN}" \
            -u "${CIRCLE_PROJECT_USERNAME}" \
            -r "${CIRCLE_PROJECT_REPONAME}" \
            -c "${CIRCLE_SHA1}" \
            -delete ${VERSION} \
            target/fineract-client-1.0.0.jar

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
